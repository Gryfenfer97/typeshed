from typing import TypeVar

import vtkmodules.vtkCommonCore
import vtkmodules.vtkCommonDataModel
import vtkmodules.vtkCommonExecutionModel
import vtkmodules.vtkParallelCore

Pointer = TypeVar("Pointer")
Template = TypeVar("Template")

class vtkAMRBaseParticlesReader(vtkmodules.vtkCommonExecutionModel.vtkMultiBlockDataSetAlgorithm):
    def FilterLocationOff(self) -> None: ...
    def FilterLocationOn(self) -> None: ...
    def GetController(self) -> vtkmodules.vtkParallelCore.vtkMultiProcessController: ...
    def GetFileName(self) -> str: ...
    def GetFilterLocation(self) -> int: ...
    def GetFrequency(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetNumberOfParticleArrays(self) -> int: ...
    def GetParticleArrayName(self, index: int) -> str: ...
    def GetParticleArrayStatus(self, name: str) -> int: ...
    def GetParticleDataArraySelection(self) -> vtkmodules.vtkCommonCore.vtkDataArraySelection: ...
    def GetTotalNumberOfParticles(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkAMRBaseParticlesReader: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkAMRBaseParticlesReader: ...
    def SetController(self, __a: vtkmodules.vtkParallelCore.vtkMultiProcessController) -> None: ...
    def SetFileName(self, fileName: str) -> None: ...
    def SetFilterLocation(self, _arg: int) -> None: ...
    def SetFrequency(self, _arg: int) -> None: ...
    def SetMaxLocation(self, maxx: float, maxy: float, maxz: float) -> None: ...
    def SetMinLocation(self, minx: float, miny: float, minz: float) -> None: ...
    def SetParticleArrayStatus(self, name: str, status: int) -> None: ...

class vtkAMRBaseReader(vtkmodules.vtkCommonExecutionModel.vtkOverlappingAMRAlgorithm):
    def EnableCachingOff(self) -> None: ...
    def EnableCachingOn(self) -> None: ...
    def GetCellArrayName(self, index: int) -> str: ...
    def GetCellArrayStatus(self, name: str) -> int: ...
    def GetCellDataArraySelection(self) -> vtkmodules.vtkCommonCore.vtkDataArraySelection: ...
    def GetController(self) -> vtkmodules.vtkParallelCore.vtkMultiProcessController: ...
    def GetEnableCaching(self) -> int: ...
    def GetFileName(self) -> str: ...
    def GetNumberOfBlocks(self) -> int: ...
    def GetNumberOfCellArrays(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetNumberOfLevels(self) -> int: ...
    def GetNumberOfPointArrays(self) -> int: ...
    def GetPointArrayName(self, index: int) -> str: ...
    def GetPointArrayStatus(self, name: str) -> int: ...
    def GetPointDataArraySelection(self) -> vtkmodules.vtkCommonCore.vtkDataArraySelection: ...
    def Initialize(self) -> None: ...
    def IsA(self, type: str) -> int: ...
    def IsCachingEnabled(self) -> bool: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkAMRBaseReader: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkAMRBaseReader: ...
    def SetCellArrayStatus(self, name: str, status: int) -> None: ...
    def SetController(self, __a: vtkmodules.vtkParallelCore.vtkMultiProcessController) -> None: ...
    def SetEnableCaching(self, _arg: int) -> None: ...
    def SetFileName(self, fileName: str) -> None: ...
    def SetMaxLevel(self, _arg: int) -> None: ...
    def SetPointArrayStatus(self, name: str, status: int) -> None: ...

class vtkAMRDataSetCache(vtkmodules.vtkCommonCore.vtkObject):
    def GetAMRBlock(self, compositeIdx: int) -> vtkmodules.vtkCommonDataModel.vtkUniformGrid: ...
    def GetAMRBlockCellData(self, compositeIdx: int, dataName: str) -> vtkmodules.vtkCommonCore.vtkDataArray: ...
    def GetAMRBlockPointData(self, compositeIdx: int, dataName: str) -> vtkmodules.vtkCommonCore.vtkDataArray: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def HasAMRBlock(self, compositeIdx: int) -> bool: ...
    def HasAMRBlockCellData(self, compositeIdx: int, name: str) -> bool: ...
    def HasAMRBlockPointData(self, compositeIdx: int, name: str) -> bool: ...
    def InsertAMRBlock(self, compositeIdx: int, amrGrid: vtkmodules.vtkCommonDataModel.vtkUniformGrid) -> None: ...
    def InsertAMRBlockCellData(self, compositeIdx: int, dataArray: vtkmodules.vtkCommonCore.vtkDataArray) -> None: ...
    def InsertAMRBlockPointData(self, compositeIdx: int, dataArray: vtkmodules.vtkCommonCore.vtkDataArray) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkAMRDataSetCache: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkAMRDataSetCache: ...

class vtkAMREnzoParticlesReader(vtkAMRBaseParticlesReader):
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetParticleType(self) -> int: ...
    def GetTotalNumberOfParticles(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkAMREnzoParticlesReader: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkAMREnzoParticlesReader: ...
    def SetParticleType(self, _arg: int) -> None: ...

class vtkAMREnzoReader(vtkAMRBaseReader):
    def ConvertToCGSOff(self) -> None: ...
    def ConvertToCGSOn(self) -> None: ...
    def GetConvertToCGS(self) -> int: ...
    def GetNumberOfBlocks(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetNumberOfLevels(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkAMREnzoReader: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkAMREnzoReader: ...
    def SetConvertToCGS(self, _arg: int) -> None: ...
    def SetFileName(self, fileName: str) -> None: ...

class vtkAMRFlashParticlesReader(vtkAMRBaseParticlesReader):
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetTotalNumberOfParticles(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkAMRFlashParticlesReader: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkAMRFlashParticlesReader: ...

class vtkAMRFlashReader(vtkAMRBaseReader):
    def GetNumberOfBlocks(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetNumberOfLevels(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkAMRFlashReader: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkAMRFlashReader: ...
    def SetFileName(self, fileName: str) -> None: ...

class vtkAMRVelodyneReader(vtkAMRBaseReader):
    def GetNumberOfBlocks(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetNumberOfLevels(self) -> int: ...
    def GetOutput(self) -> vtkmodules.vtkCommonDataModel.vtkOverlappingAMR: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkAMRVelodyneReader: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkAMRVelodyneReader: ...
    def SetFileName(self, fileName: str) -> None: ...

class vtkAMReXGridReader(vtkAMRBaseReader):
    def GetNumberOfBlocks(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetNumberOfLevels(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkAMReXGridReader: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkAMReXGridReader: ...
    def SetFileName(self, fileName: str) -> None: ...

class vtkAMReXParticlesReader(vtkmodules.vtkCommonExecutionModel.vtkMultiBlockDataSetAlgorithm):
    @staticmethod
    def CanReadFile(fname: str, particlesType: str = ...) -> int: ...
    def GetController(self) -> vtkmodules.vtkParallelCore.vtkMultiProcessController: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetParticleType(self) -> str: ...
    def GetPlotFileName(self) -> str: ...
    def GetPointDataArraySelection(self) -> vtkmodules.vtkCommonCore.vtkDataArraySelection: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkAMReXParticlesReader: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkAMReXParticlesReader: ...
    def SetController(self, controller: vtkmodules.vtkParallelCore.vtkMultiProcessController) -> None: ...
    def SetParticleType(self, str: str) -> None: ...
    def SetPlotFileName(self, fname: str) -> None: ...
