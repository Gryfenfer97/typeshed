from typing import TypeVar

import vtkmodules.vtkCommonCore
import vtkmodules.vtkCommonDataModel
import vtkmodules.vtkFiltersCore


class vtkSMPContourGrid(vtkmodules.vtkFiltersCore.vtkContourGrid):
    def GetMergePieces(self) -> bool: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def MergePiecesOff(self) -> None: ...
    def MergePiecesOn(self) -> None: ...
    def NewInstance(self) -> vtkSMPContourGrid: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkSMPContourGrid: ...
    def SetMergePieces(self, _arg: bool) -> None: ...

class vtkSMPMergePoints(vtkmodules.vtkCommonDataModel.vtkMergePoints):
    def FixSizeOfPointArray(self) -> None: ...
    def GetMaxId(self) -> int: ...
    def GetNumberOfBuckets(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetNumberOfIdsInBucket(self, idx: int) -> int: ...
    def InitializeMerge(self) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def Merge(
        self,
        locator: vtkSMPMergePoints,
        idx: int,
        outPd: vtkmodules.vtkCommonDataModel.vtkPointData,
        inPd: vtkmodules.vtkCommonDataModel.vtkPointData,
        idList: vtkmodules.vtkCommonCore.vtkIdList,
    ) -> None: ...
    def NewInstance(self) -> vtkSMPMergePoints: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkSMPMergePoints: ...

class vtkSMPMergePolyDataHelper: ...
