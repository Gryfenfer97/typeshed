from typing import Callable, MutableSequence, Sequence, Tuple, TypeVar, Union, overload

import vtkmodules.vtkCommonComputationalGeometry
import vtkmodules.vtkCommonCore
import vtkmodules.vtkCommonDataModel
import vtkmodules.vtkCommonExecutionModel
import vtkmodules.vtkCommonMath
import vtkmodules.vtkCommonTransforms
import vtkmodules.vtkFiltersHybrid
import vtkmodules.vtkFiltersSources
import vtkmodules.vtkImagingCore
import vtkmodules.vtkImagingHybrid
import vtkmodules.vtkRenderingAnnotation
import vtkmodules.vtkRenderingContext2D
import vtkmodules.vtkRenderingCore

Callback = Union[Callable[..., None], None]
Buffer = TypeVar("Buffer")
Pointer = TypeVar("Pointer")
Template = TypeVar("Template")

VTK_CUBIC_RESLICE: int
VTK_IMAGE_PLANE_WIDGET_MAX_TEXTBUFF: int
VTK_ITW_PROJECTION_XY: int
VTK_ITW_PROJECTION_XZ: int
VTK_ITW_PROJECTION_YZ: int
VTK_ITW_SNAP_CELLS: int
VTK_ITW_SNAP_POINTS: int
VTK_LINEAR_RESLICE: int
VTK_MAX_CYL_RESOLUTION: int
VTK_NEAREST_RESLICE: int
VTK_PLANE_OFF: int
VTK_PLANE_OUTLINE: int
VTK_PLANE_SURFACE: int
VTK_PLANE_WIREFRAME: int
VTK_PROJECTION_OBLIQUE: int
VTK_PROJECTION_XY: int
VTK_PROJECTION_XZ: int
VTK_PROJECTION_YZ: int
VTK_RESLICE_CURSOR_REPRESENTATION_MAX_TEXTBUFF: int
VTK_SPHERE_OFF: int
VTK_SPHERE_SURFACE: int
VTK_SPHERE_WIREFRAME: int

class vtk3DWidget(vtkmodules.vtkRenderingCore.vtkInteractorObserver):
    def GetHandleSize(self) -> float: ...
    def GetHandleSizeMaxValue(self) -> float: ...
    def GetHandleSizeMinValue(self) -> float: ...
    def GetInput(self) -> vtkmodules.vtkCommonDataModel.vtkDataSet: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPlaceFactor(self) -> float: ...
    def GetPlaceFactorMaxValue(self) -> float: ...
    def GetPlaceFactorMinValue(self) -> float: ...
    def GetProp3D(self) -> vtkmodules.vtkRenderingCore.vtkProp3D: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtk3DWidget: ...
    @overload
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    @overload
    def PlaceWidget(self) -> None: ...
    @overload
    def PlaceWidget(self, xmin: float, xmax: float, ymin: float, ymax: float, zmin: float, zmax: float) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtk3DWidget: ...
    def SetHandleSize(self, _arg: float) -> None: ...
    def SetInputConnection(self, __a: vtkmodules.vtkCommonExecutionModel.vtkAlgorithmOutput) -> None: ...
    def SetInputData(self, __a: vtkmodules.vtkCommonDataModel.vtkDataSet) -> None: ...
    def SetPlaceFactor(self, _arg: float) -> None: ...
    def SetProp3D(self, __a: vtkmodules.vtkRenderingCore.vtkProp3D) -> None: ...

class vtkWidgetRepresentation(vtkmodules.vtkRenderingCore.vtkProp):
    class Axis(int): ...
    NONE: Axis
    XAxis: Axis
    YAxis: Axis
    ZAxis: Axis
    def BuildRepresentation(self) -> None: ...
    def ComplexInteraction(
        self, __a: vtkmodules.vtkRenderingCore.vtkRenderWindowInteractor, __b: vtkAbstractWidget, __c: int, __d: Pointer
    ) -> None: ...
    def ComputeComplexInteractionState(
        self,
        iren: vtkmodules.vtkRenderingCore.vtkRenderWindowInteractor,
        widget: vtkAbstractWidget,
        event: int,
        callData: Pointer,
        modify: int = 0,
    ) -> int: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def EndComplexInteraction(
        self, __a: vtkmodules.vtkRenderingCore.vtkRenderWindowInteractor, __b: vtkAbstractWidget, __c: int, __d: Pointer
    ) -> None: ...
    def EndWidgetInteraction(self, newEventPos: MutableSequence[float]) -> None: ...
    def GetActors(self, __a: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetActors2D(self, __a: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetHandleSize(self) -> float: ...
    def GetHandleSizeMaxValue(self) -> float: ...
    def GetHandleSizeMinValue(self) -> float: ...
    def GetInteractionState(self) -> int: ...
    def GetNeedToRender(self) -> int: ...
    def GetNeedToRenderMaxValue(self) -> int: ...
    def GetNeedToRenderMinValue(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPickingManaged(self) -> bool: ...
    def GetPlaceFactor(self) -> float: ...
    def GetPlaceFactorMaxValue(self) -> float: ...
    def GetPlaceFactorMinValue(self) -> float: ...
    def GetRenderer(self) -> vtkmodules.vtkRenderingCore.vtkRenderer: ...
    def GetVolumes(self, __a: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def Highlight(self, highlightOn: int) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NeedToRenderOff(self) -> None: ...
    def NeedToRenderOn(self) -> None: ...
    def NewInstance(self) -> vtkWidgetRepresentation: ...
    def PickingManagedOff(self) -> None: ...
    def PickingManagedOn(self) -> None: ...
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    def RegisterPickers(self) -> None: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderOverlay(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderVolumetricGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkWidgetRepresentation: ...
    def SetHandleSize(self, _arg: float) -> None: ...
    def SetNeedToRender(self, _arg: int) -> None: ...
    def SetPickingManaged(self, managed: bool) -> None: ...
    def SetPlaceFactor(self, _arg: float) -> None: ...
    def SetRenderer(self, ren: vtkmodules.vtkRenderingCore.vtkRenderer) -> None: ...
    def ShallowCopy(self, prop: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...
    def StartComplexInteraction(
        self, __a: vtkmodules.vtkRenderingCore.vtkRenderWindowInteractor, __b: vtkAbstractWidget, __c: int, __d: Pointer
    ) -> None: ...
    def StartWidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...
    def UnRegisterPickers(self) -> None: ...
    def WidgetInteraction(self, newEventPos: MutableSequence[float]) -> None: ...

class vtkHandleRepresentation(vtkWidgetRepresentation):
    class InteractionStateType(int): ...
    Nearby: InteractionStateType
    Outside: InteractionStateType
    Scaling: InteractionStateType
    Selecting: InteractionStateType
    Translating: InteractionStateType
    def ActiveRepresentationOff(self) -> None: ...
    def ActiveRepresentationOn(self) -> None: ...
    def CheckConstraint(self, renderer: vtkmodules.vtkRenderingCore.vtkRenderer, pos: MutableSequence[float]) -> int: ...
    def ConstrainedOff(self) -> None: ...
    def ConstrainedOn(self) -> None: ...
    def DeepCopy(self, prop: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...
    def GetActiveRepresentation(self) -> int: ...
    def GetConstrained(self) -> int: ...
    @overload
    def GetDisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    @overload
    def GetDisplayPosition(self) -> Tuple[float, float, float]: ...
    def GetInteractionStateMaxValue(self) -> int: ...
    def GetInteractionStateMinValue(self) -> int: ...
    def GetMTime(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPointPlacer(self) -> vtkPointPlacer: ...
    def GetTolerance(self) -> int: ...
    def GetToleranceMaxValue(self) -> int: ...
    def GetToleranceMinValue(self) -> int: ...
    def GetTranslationAxis(self) -> int: ...
    def GetTranslationAxisMaxValue(self) -> int: ...
    def GetTranslationAxisMinValue(self) -> int: ...
    def GetTranslationVector(self, p1: Sequence[float], p2: Sequence[float], v: MutableSequence[float]) -> None: ...
    @overload
    def GetWorldPosition(self, pos: MutableSequence[float]) -> None: ...
    @overload
    def GetWorldPosition(self) -> Tuple[float, float, float]: ...
    def IsA(self, type: str) -> int: ...
    def IsTranslationConstrained(self) -> bool: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkHandleRepresentation: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkHandleRepresentation: ...
    def SetActiveRepresentation(self, _arg: int) -> None: ...
    def SetConstrained(self, _arg: int) -> None: ...
    def SetDisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetInteractionState(self, _arg: int) -> None: ...
    def SetPointPlacer(self, __a: vtkPointPlacer) -> None: ...
    def SetRenderer(self, ren: vtkmodules.vtkRenderingCore.vtkRenderer) -> None: ...
    def SetTolerance(self, _arg: int) -> None: ...
    def SetTranslationAxis(self, _arg: int) -> None: ...
    def SetTranslationAxisOff(self) -> None: ...
    def SetWorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetXTranslationAxisOn(self) -> None: ...
    def SetYTranslationAxisOn(self) -> None: ...
    def SetZTranslationAxisOn(self) -> None: ...
    def ShallowCopy(self, prop: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...
    @overload
    def Translate(self, p1: Sequence[float], p2: Sequence[float]) -> None: ...
    @overload
    def Translate(self, v: Sequence[float]) -> None: ...

class vtkAbstractPolygonalHandleRepresentation3D(vtkHandleRepresentation):
    def BuildRepresentation(self) -> None: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def DeepCopy(self, prop: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...
    def GetActors(self, __a: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetHandle(self) -> vtkmodules.vtkCommonDataModel.vtkPolyData: ...
    def GetHandleVisibility(self) -> int: ...
    def GetLabelText(self) -> str: ...
    def GetLabelTextActor(self) -> vtkmodules.vtkRenderingCore.vtkFollower: ...
    def GetLabelTextScale(self) -> Pointer: ...
    def GetLabelVisibility(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSmoothMotion(self) -> int: ...
    def GetTransform(self) -> vtkmodules.vtkCommonTransforms.vtkAbstractTransform: ...
    def HandleVisibilityOff(self) -> None: ...
    def HandleVisibilityOn(self) -> None: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def Highlight(self, highlight: int) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def LabelVisibilityOff(self) -> None: ...
    def LabelVisibilityOn(self) -> None: ...
    def NewInstance(self) -> vtkAbstractPolygonalHandleRepresentation3D: ...
    def RegisterPickers(self) -> None: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkAbstractPolygonalHandleRepresentation3D: ...
    def SetDisplayPosition(self, p: MutableSequence[float]) -> None: ...
    def SetHandle(self, __a: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    def SetHandleVisibility(self, _arg: int) -> None: ...
    def SetLabelText(self, label: str) -> None: ...
    @overload
    def SetLabelTextScale(self, scale: MutableSequence[float]) -> None: ...
    @overload
    def SetLabelTextScale(self, x: float, y: float, z: float) -> None: ...
    def SetLabelVisibility(self, _arg: int) -> None: ...
    def SetProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...
    def SetSelectedProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...
    def SetSmoothMotion(self, _arg: int) -> None: ...
    def SetUniformScale(self, scale: float) -> None: ...
    def SetWorldPosition(self, p: MutableSequence[float]) -> None: ...
    def ShallowCopy(self, prop: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...
    def SmoothMotionOff(self) -> None: ...
    def SmoothMotionOn(self) -> None: ...
    def StartWidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...
    def Translate(self, v: Sequence[float]) -> None: ...
    def WidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...

class vtkCurveRepresentation(vtkWidgetRepresentation):
    class InteractionStateType(int): ...
    Erasing: InteractionStateType
    Inserting: InteractionStateType
    Moving: InteractionStateType
    OnHandle: InteractionStateType
    OnLine: InteractionStateType
    Outside: InteractionStateType
    Pushing: InteractionStateType
    Scaling: InteractionStateType
    Spinning: InteractionStateType
    def BuildRepresentation(self) -> None: ...
    def ClosedOff(self) -> None: ...
    def ClosedOn(self) -> None: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def DirectionalLineOff(self) -> None: ...
    def DirectionalLineOn(self) -> None: ...
    def DirectionalOff(self) -> None: ...
    def DirectionalOn(self) -> None: ...
    def EndWidgetInteraction(self, e: MutableSequence[float]) -> None: ...
    def GetActors(self, __a: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetClosed(self) -> int: ...
    def GetCurrentHandleIndex(self) -> int: ...
    def GetDirectional(self) -> bool: ...
    def GetDirectionalLine(self) -> bool: ...
    @overload
    def GetHandlePosition(self, handle: int, xyz: MutableSequence[float]) -> None: ...
    @overload
    def GetHandlePosition(self, handle: int) -> Pointer: ...
    def GetHandlePositions(self) -> vtkmodules.vtkCommonCore.vtkDoubleArray: ...
    def GetHandleProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetLineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetNumberOfHandles(self) -> int: ...
    def GetPolyData(self, pd: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    def GetProjectToPlane(self) -> int: ...
    def GetProjectionNormal(self) -> int: ...
    def GetProjectionNormalMaxValue(self) -> int: ...
    def GetProjectionNormalMinValue(self) -> int: ...
    def GetProjectionPosition(self) -> float: ...
    def GetSelectedHandleProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedLineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSummedLength(self) -> float: ...
    def GetTranslationAxis(self) -> int: ...
    def GetTranslationAxisMaxValue(self) -> int: ...
    def GetTranslationAxisMinValue(self) -> int: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def InitializeHandles(self, points: vtkmodules.vtkCommonCore.vtkPoints) -> None: ...
    def IsA(self, type: str) -> int: ...
    def IsClosed(self) -> int: ...
    def IsTranslationConstrained(self) -> bool: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkCurveRepresentation: ...
    def ProjectToPlaneOff(self) -> None: ...
    def ProjectToPlaneOn(self) -> None: ...
    def RegisterPickers(self) -> None: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderOverlay(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkCurveRepresentation: ...
    def SetClosed(self, closed: int) -> None: ...
    def SetCurrentHandleIndex(self, index: int) -> None: ...
    def SetDirectional(self, val: bool) -> None: ...
    def SetDirectionalLine(self, val: bool) -> None: ...
    @overload
    def SetHandlePosition(self, handle: int, x: float, y: float, z: float) -> None: ...
    @overload
    def SetHandlePosition(self, handle: int, xyz: MutableSequence[float]) -> None: ...
    def SetInteractionState(self, _arg: int) -> None: ...
    def SetLineColor(self, r: float, g: float, b: float) -> None: ...
    def SetNumberOfHandles(self, npts: int) -> None: ...
    def SetPlaneSource(self, plane: vtkmodules.vtkFiltersSources.vtkPlaneSource) -> None: ...
    def SetProjectToPlane(self, _arg: int) -> None: ...
    def SetProjectionNormal(self, _arg: int) -> None: ...
    def SetProjectionNormalToOblique(self) -> None: ...
    def SetProjectionNormalToXAxes(self) -> None: ...
    def SetProjectionNormalToYAxes(self) -> None: ...
    def SetProjectionNormalToZAxes(self) -> None: ...
    def SetProjectionPosition(self, position: float) -> None: ...
    def SetTranslationAxis(self, _arg: int) -> None: ...
    def SetTranslationAxisOff(self) -> None: ...
    def SetXTranslationAxisOn(self) -> None: ...
    def SetYTranslationAxisOn(self) -> None: ...
    def SetZTranslationAxisOn(self) -> None: ...
    def StartWidgetInteraction(self, e: MutableSequence[float]) -> None: ...
    def WidgetInteraction(self, e: MutableSequence[float]) -> None: ...

class vtkAbstractSplineRepresentation(vtkCurveRepresentation):
    def GetHandlePositions(self) -> vtkmodules.vtkCommonCore.vtkDoubleArray: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetParametricSpline(self) -> vtkmodules.vtkCommonComputationalGeometry.vtkParametricSpline: ...
    def GetPolyData(self, pd: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    def GetResolution(self) -> int: ...
    def GetSummedLength(self) -> float: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkAbstractSplineRepresentation: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkAbstractSplineRepresentation: ...
    def SetParametricSpline(self, spline: vtkmodules.vtkCommonComputationalGeometry.vtkParametricSpline) -> None: ...
    def SetResolution(self, resolution: int) -> None: ...

class vtkAbstractWidget(vtkmodules.vtkRenderingCore.vtkInteractorObserver):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetEventTranslator(self) -> vtkWidgetEventTranslator: ...
    def GetManagesCursor(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetParent(self) -> vtkAbstractWidget: ...
    def GetProcessEvents(self) -> int: ...
    def GetProcessEventsMaxValue(self) -> int: ...
    def GetProcessEventsMinValue(self) -> int: ...
    def GetRepresentation(self) -> vtkWidgetRepresentation: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def ManagesCursorOff(self) -> None: ...
    def ManagesCursorOn(self) -> None: ...
    def NewInstance(self) -> vtkAbstractWidget: ...
    def ProcessEventsOff(self) -> None: ...
    def ProcessEventsOn(self) -> None: ...
    def Render(self) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkAbstractWidget: ...
    def SetEnabled(self, __a: int) -> None: ...
    def SetManagesCursor(self, _arg: int) -> None: ...
    def SetParent(self, parent: vtkAbstractWidget) -> None: ...
    def SetPriority(self, __a: float) -> None: ...
    def SetProcessEvents(self, _arg: int) -> None: ...

class vtkAffineRepresentation(vtkWidgetRepresentation):
    class InteractionStateType(int): ...
    MoveOrigin: InteractionStateType
    MoveOriginX: InteractionStateType
    MoveOriginY: InteractionStateType
    Outside: InteractionStateType
    Rotate: InteractionStateType
    ScaleEEdge: InteractionStateType
    ScaleNE: InteractionStateType
    ScaleNEdge: InteractionStateType
    ScaleNW: InteractionStateType
    ScaleSE: InteractionStateType
    ScaleSEdge: InteractionStateType
    ScaleSW: InteractionStateType
    ScaleWEdge: InteractionStateType
    ShearEEdge: InteractionStateType
    ShearNEdge: InteractionStateType
    ShearSEdge: InteractionStateType
    ShearWEdge: InteractionStateType
    Translate: InteractionStateType
    TranslateX: InteractionStateType
    TranslateY: InteractionStateType
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetTolerance(self) -> int: ...
    def GetToleranceMaxValue(self) -> int: ...
    def GetToleranceMinValue(self) -> int: ...
    def GetTransform(self, t: vtkmodules.vtkCommonTransforms.vtkTransform) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkAffineRepresentation: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkAffineRepresentation: ...
    def SetTolerance(self, _arg: int) -> None: ...
    def ShallowCopy(self, prop: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...

class vtkAffineRepresentation2D(vtkAffineRepresentation):
    def BuildRepresentation(self) -> None: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def DisplayTextOff(self) -> None: ...
    def DisplayTextOn(self) -> None: ...
    def EndWidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...
    def GetActors2D(self, __a: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetAxesWidth(self) -> int: ...
    def GetAxesWidthMaxValue(self) -> int: ...
    def GetAxesWidthMinValue(self) -> int: ...
    def GetBoxWidth(self) -> int: ...
    def GetBoxWidthMaxValue(self) -> int: ...
    def GetBoxWidthMinValue(self) -> int: ...
    def GetCircleWidth(self) -> int: ...
    def GetCircleWidthMaxValue(self) -> int: ...
    def GetCircleWidthMinValue(self) -> int: ...
    def GetDisplayText(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetOrigin(self) -> Tuple[float, float, float]: ...
    def GetProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty2D: ...
    def GetSelectedProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty2D: ...
    def GetTextProperty(self) -> vtkmodules.vtkRenderingCore.vtkTextProperty: ...
    def GetTransform(self, t: vtkmodules.vtkCommonTransforms.vtkTransform) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkAffineRepresentation2D: ...
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOverlay(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkAffineRepresentation2D: ...
    def SetAxesWidth(self, _arg: int) -> None: ...
    def SetBoxWidth(self, _arg: int) -> None: ...
    def SetCircleWidth(self, _arg: int) -> None: ...
    def SetDisplayText(self, _arg: int) -> None: ...
    @overload
    def SetOrigin(self, o: Sequence[float]) -> None: ...
    @overload
    def SetOrigin(self, ox: float, oy: float, oz: float) -> None: ...
    def SetProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty2D) -> None: ...
    def SetSelectedProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty2D) -> None: ...
    def SetTextProperty(self, __a: vtkmodules.vtkRenderingCore.vtkTextProperty) -> None: ...
    def ShallowCopy(self, prop: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...
    def StartWidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...
    def WidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...

class vtkAffineWidget(vtkAbstractWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetAffineRepresentation(self) -> vtkAffineRepresentation: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkAffineWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkAffineWidget: ...
    def SetEnabled(self, __a: int) -> None: ...
    def SetRepresentation(self, r: vtkAffineRepresentation) -> None: ...

class vtkAngleRepresentation(vtkWidgetRepresentation):
    NearCenter: int
    NearP1: int
    NearP2: int
    Outside: int
    def ArcVisibilityOff(self) -> None: ...
    def ArcVisibilityOn(self) -> None: ...
    def BuildRepresentation(self) -> None: ...
    def CenterWidgetInteraction(self, e: MutableSequence[float]) -> None: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def GetAngle(self) -> float: ...
    def GetArcVisibility(self) -> int: ...
    def GetCenterDisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetCenterRepresentation(self) -> vtkHandleRepresentation: ...
    def GetCenterWorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetLabelFormat(self) -> str: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPoint1DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetPoint1Representation(self) -> vtkHandleRepresentation: ...
    def GetPoint1WorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetPoint2DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetPoint2Representation(self) -> vtkHandleRepresentation: ...
    def GetPoint2WorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetRay1Visibility(self) -> int: ...
    def GetRay2Visibility(self) -> int: ...
    def GetTolerance(self) -> int: ...
    def GetToleranceMaxValue(self) -> int: ...
    def GetToleranceMinValue(self) -> int: ...
    def InstantiateHandleRepresentation(self) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkAngleRepresentation: ...
    def Ray1VisibilityOff(self) -> None: ...
    def Ray1VisibilityOn(self) -> None: ...
    def Ray2VisibilityOff(self) -> None: ...
    def Ray2VisibilityOn(self) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkAngleRepresentation: ...
    def SetArcVisibility(self, _arg: int) -> None: ...
    def SetCenterDisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetHandleRepresentation(self, handle: vtkHandleRepresentation) -> None: ...
    def SetLabelFormat(self, _arg: str) -> None: ...
    def SetPoint1DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetPoint2DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetRay1Visibility(self, _arg: int) -> None: ...
    def SetRay2Visibility(self, _arg: int) -> None: ...
    def SetTolerance(self, _arg: int) -> None: ...
    def StartWidgetInteraction(self, e: MutableSequence[float]) -> None: ...
    def WidgetInteraction(self, e: MutableSequence[float]) -> None: ...

class vtkAngleRepresentation2D(vtkAngleRepresentation):
    def BuildRepresentation(self) -> None: ...
    def GetAngle(self) -> float: ...
    def GetArc(self) -> vtkmodules.vtkRenderingAnnotation.vtkLeaderActor2D: ...
    def GetCenterDisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetCenterWorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPoint1DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetPoint1WorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetPoint2DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetPoint2WorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetRay1(self) -> vtkmodules.vtkRenderingAnnotation.vtkLeaderActor2D: ...
    def GetRay2(self) -> vtkmodules.vtkRenderingAnnotation.vtkLeaderActor2D: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkAngleRepresentation2D: ...
    def ReleaseGraphicsResources(self, w: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOverlay(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkAngleRepresentation2D: ...
    def SetCenterDisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetPoint1DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetPoint2DisplayPosition(self, pos: MutableSequence[float]) -> None: ...

class vtkAngleRepresentation3D(vtkAngleRepresentation):
    def BuildRepresentation(self) -> None: ...
    def GetAngle(self) -> float: ...
    def GetArc(self) -> vtkmodules.vtkRenderingCore.vtkActor: ...
    def GetCenterDisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetCenterWorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPoint1DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetPoint1WorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetPoint2DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetPoint2WorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetRay1(self) -> vtkmodules.vtkRenderingCore.vtkActor: ...
    def GetRay2(self) -> vtkmodules.vtkRenderingCore.vtkActor: ...
    def GetTextActor(self) -> vtkmodules.vtkRenderingCore.vtkFollower: ...
    def GetTextActorScale(self) -> Pointer: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkAngleRepresentation3D: ...
    def ReleaseGraphicsResources(self, w: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkAngleRepresentation3D: ...
    def SetCenterDisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetCenterWorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetPoint1DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetPoint1WorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetPoint2DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetPoint2WorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetTextActorScale(self, scale: MutableSequence[float]) -> None: ...

class vtkAngleWidget(vtkAbstractWidget):
    Define: int
    Manipulate: int
    Start: int
    def CreateDefaultRepresentation(self) -> None: ...
    def GetAngleRepresentation(self) -> vtkAngleRepresentation: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetWidgetState(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    def IsAngleValid(self) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkAngleWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkAngleWidget: ...
    def SetEnabled(self, __a: int) -> None: ...
    def SetProcessEvents(self, __a: int) -> None: ...
    def SetRepresentation(self, r: vtkAngleRepresentation) -> None: ...
    def SetWidgetStateToManipulate(self) -> None: ...
    def SetWidgetStateToStart(self) -> None: ...

class vtkAxesTransformRepresentation(vtkWidgetRepresentation):
    OnOrigin: int
    OnX: int
    OnXEnd: int
    OnY: int
    OnYEnd: int
    OnZ: int
    OnZEnd: int
    Outside: int
    def BuildRepresentation(self) -> None: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def GetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetInteractionStateMaxValue(self) -> int: ...
    def GetInteractionStateMinValue(self) -> int: ...
    def GetLabelFormat(self) -> str: ...
    def GetLabelProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetLabelScale(self) -> Pointer: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetOriginDisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetOriginRepresentation(self) -> vtkHandleRepresentation: ...
    @overload
    def GetOriginWorldPosition(self) -> Pointer: ...
    @overload
    def GetOriginWorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetSelectionRepresentation(self) -> vtkHandleRepresentation: ...
    def GetTolerance(self) -> int: ...
    def GetToleranceMaxValue(self) -> int: ...
    def GetToleranceMinValue(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkAxesTransformRepresentation: ...
    def ReleaseGraphicsResources(self, w: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkAxesTransformRepresentation: ...
    def SetInteractionState(self, _arg: int) -> None: ...
    def SetLabelFormat(self, _arg: str) -> None: ...
    @overload
    def SetLabelScale(self, x: float, y: float, z: float) -> None: ...
    @overload
    def SetLabelScale(self, scale: MutableSequence[float]) -> None: ...
    def SetOriginDisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetOriginWorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetTolerance(self, _arg: int) -> None: ...
    def StartWidgetInteraction(self, e: MutableSequence[float]) -> None: ...
    def WidgetInteraction(self, e: MutableSequence[float]) -> None: ...

class vtkAxesTransformWidget(vtkAbstractWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetLineRepresentation(self) -> vtkAxesTransformRepresentation: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkAxesTransformWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkAxesTransformWidget: ...
    def SetEnabled(self, enabling: int) -> None: ...
    def SetProcessEvents(self, __a: int) -> None: ...
    def SetRepresentation(self, r: vtkAxesTransformRepresentation) -> None: ...

class vtkBalloonRepresentation(vtkWidgetRepresentation):
    class InteractionStateType(int): ...
    ImageBottom: int
    ImageLeft: int
    ImageRight: int
    ImageTop: int
    OnImage: vtkmodules.vtkGeovisCore.InteractionStateType
    OnText: vtkmodules.vtkGeovisCore.InteractionStateType
    Outside: vtkmodules.vtkGeovisCore.InteractionStateType
    def BuildRepresentation(self) -> None: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def EndWidgetInteraction(self, e: MutableSequence[float]) -> None: ...
    def GetBalloonImage(self) -> vtkmodules.vtkCommonDataModel.vtkImageData: ...
    def GetBalloonLayout(self) -> int: ...
    def GetBalloonText(self) -> str: ...
    def GetFrameProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty2D: ...
    def GetImageProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty2D: ...
    def GetImageSize(self) -> Tuple[int, int]: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetOffset(self) -> Tuple[int, int]: ...
    def GetPadding(self) -> int: ...
    def GetPaddingMaxValue(self) -> int: ...
    def GetPaddingMinValue(self) -> int: ...
    def GetTextProperty(self) -> vtkmodules.vtkRenderingCore.vtkTextProperty: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkBalloonRepresentation: ...
    def ReleaseGraphicsResources(self, w: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOverlay(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkBalloonRepresentation: ...
    def SetBalloonImage(self, img: vtkmodules.vtkCommonDataModel.vtkImageData) -> None: ...
    def SetBalloonLayout(self, _arg: int) -> None: ...
    def SetBalloonLayoutToImageBottom(self) -> None: ...
    def SetBalloonLayoutToImageLeft(self) -> None: ...
    def SetBalloonLayoutToImageRight(self) -> None: ...
    def SetBalloonLayoutToImageTop(self) -> None: ...
    def SetBalloonLayoutToTextBottom(self) -> None: ...
    def SetBalloonLayoutToTextLeft(self) -> None: ...
    def SetBalloonLayoutToTextRight(self) -> None: ...
    def SetBalloonLayoutToTextTop(self) -> None: ...
    def SetBalloonText(self, _arg: str) -> None: ...
    def SetFrameProperty(self, p: vtkmodules.vtkRenderingCore.vtkProperty2D) -> None: ...
    def SetImageProperty(self, p: vtkmodules.vtkRenderingCore.vtkProperty2D) -> None: ...
    @overload
    def SetImageSize(self, _arg1: int, _arg2: int) -> None: ...
    @overload
    def SetImageSize(self, _arg: Sequence[int]) -> None: ...
    @overload
    def SetOffset(self, _arg1: int, _arg2: int) -> None: ...
    @overload
    def SetOffset(self, _arg: Sequence[int]) -> None: ...
    def SetPadding(self, _arg: int) -> None: ...
    def SetTextProperty(self, p: vtkmodules.vtkRenderingCore.vtkTextProperty) -> None: ...
    def StartWidgetInteraction(self, e: MutableSequence[float]) -> None: ...

class vtkHoverWidget(vtkAbstractWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetTimerDuration(self) -> int: ...
    def GetTimerDurationMaxValue(self) -> int: ...
    def GetTimerDurationMinValue(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkHoverWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkHoverWidget: ...
    def SetEnabled(self, __a: int) -> None: ...
    def SetTimerDuration(self, _arg: int) -> None: ...

class vtkBalloonWidget(vtkHoverWidget):
    @overload
    def AddBalloon(
        self, prop: vtkmodules.vtkRenderingCore.vtkProp, str: str, img: vtkmodules.vtkCommonDataModel.vtkImageData
    ) -> None: ...
    @overload
    def AddBalloon(self, prop: vtkmodules.vtkRenderingCore.vtkProp, str: str) -> None: ...
    def CreateDefaultRepresentation(self) -> None: ...
    def GetBalloonImage(self, prop: vtkmodules.vtkRenderingCore.vtkProp) -> vtkmodules.vtkCommonDataModel.vtkImageData: ...
    def GetBalloonRepresentation(self) -> vtkBalloonRepresentation: ...
    def GetBalloonString(self, prop: vtkmodules.vtkRenderingCore.vtkProp) -> str: ...
    def GetCurrentProp(self) -> vtkmodules.vtkRenderingCore.vtkProp: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPicker(self) -> vtkmodules.vtkRenderingCore.vtkAbstractPropPicker: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkBalloonWidget: ...
    def RegisterPickers(self) -> None: ...
    def RemoveBalloon(self, prop: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkBalloonWidget: ...
    def SetEnabled(self, __a: int) -> None: ...
    def SetPicker(self, __a: vtkmodules.vtkRenderingCore.vtkAbstractPropPicker) -> None: ...
    def SetRepresentation(self, r: vtkBalloonRepresentation) -> None: ...
    def UpdateBalloonImage(
        self, prop: vtkmodules.vtkRenderingCore.vtkProp, image: vtkmodules.vtkCommonDataModel.vtkImageData
    ) -> None: ...
    def UpdateBalloonString(self, prop: vtkmodules.vtkRenderingCore.vtkProp, str: str) -> None: ...

class vtkContourLineInterpolator(vtkmodules.vtkCommonCore.vtkObject):
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetSpan(
        self, nodeIndex: int, nodeIndices: vtkmodules.vtkCommonCore.vtkIntArray, rep: vtkContourRepresentation
    ) -> None: ...
    def InterpolateLine(
        self, ren: vtkmodules.vtkRenderingCore.vtkRenderer, rep: vtkContourRepresentation, idx1: int, idx2: int
    ) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkContourLineInterpolator: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkContourLineInterpolator: ...
    def UpdateNode(
        self, __a: vtkmodules.vtkRenderingCore.vtkRenderer, __b: vtkContourRepresentation, node: MutableSequence[float], idx: int
    ) -> int: ...

class vtkBezierContourLineInterpolator(vtkContourLineInterpolator):
    def GetMaximumCurveError(self) -> float: ...
    def GetMaximumCurveErrorMaxValue(self) -> float: ...
    def GetMaximumCurveErrorMinValue(self) -> float: ...
    def GetMaximumCurveLineSegments(self) -> int: ...
    def GetMaximumCurveLineSegmentsMaxValue(self) -> int: ...
    def GetMaximumCurveLineSegmentsMinValue(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetSpan(
        self, nodeIndex: int, nodeIndices: vtkmodules.vtkCommonCore.vtkIntArray, rep: vtkContourRepresentation
    ) -> None: ...
    def InterpolateLine(
        self, ren: vtkmodules.vtkRenderingCore.vtkRenderer, rep: vtkContourRepresentation, idx1: int, idx2: int
    ) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkBezierContourLineInterpolator: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkBezierContourLineInterpolator: ...
    def SetMaximumCurveError(self, _arg: float) -> None: ...
    def SetMaximumCurveLineSegments(self, _arg: int) -> None: ...

class vtkBiDimensionalRepresentation(vtkWidgetRepresentation):
    NearP1: int
    NearP2: int
    NearP3: int
    NearP4: int
    OnCenter: int
    OnL1Inner: int
    OnL1Outer: int
    OnL2Inner: int
    OnL2Outer: int
    Outside: int
    def GetID(self) -> int: ...
    def GetLabelFormat(self) -> str: ...
    @overload
    def GetLabelPosition(self) -> Pointer: ...
    @overload
    def GetLabelPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetLabelText(self) -> str: ...
    def GetLength1(self) -> float: ...
    def GetLength2(self) -> float: ...
    def GetLine1Visibility(self) -> int: ...
    def GetLine2Visibility(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPoint1DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetPoint1Representation(self) -> vtkHandleRepresentation: ...
    def GetPoint1WorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetPoint2DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetPoint2Representation(self) -> vtkHandleRepresentation: ...
    def GetPoint2WorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetPoint3DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetPoint3Representation(self) -> vtkHandleRepresentation: ...
    def GetPoint3WorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetPoint4DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetPoint4Representation(self) -> vtkHandleRepresentation: ...
    def GetPoint4WorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetShowLabelAboveWidget(self) -> int: ...
    def GetTolerance(self) -> int: ...
    def GetToleranceMaxValue(self) -> int: ...
    def GetToleranceMinValue(self) -> int: ...
    def GetWorldLabelPosition(self, pos: MutableSequence[float]) -> None: ...
    def InstantiateHandleRepresentation(self) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def Line1VisibilityOff(self) -> None: ...
    def Line1VisibilityOn(self) -> None: ...
    def Line2VisibilityOff(self) -> None: ...
    def Line2VisibilityOn(self) -> None: ...
    def NewInstance(self) -> vtkBiDimensionalRepresentation: ...
    def Point2WidgetInteraction(self, e: MutableSequence[float]) -> None: ...
    def Point3WidgetInteraction(self, e: MutableSequence[float]) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkBiDimensionalRepresentation: ...
    def SetHandleRepresentation(self, handle: vtkHandleRepresentation) -> None: ...
    def SetID(self, id: int) -> None: ...
    def SetLabelFormat(self, _arg: str) -> None: ...
    def SetLine1Visibility(self, _arg: int) -> None: ...
    def SetLine2Visibility(self, _arg: int) -> None: ...
    def SetPoint1DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetPoint1WorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetPoint2DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetPoint2WorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetPoint3DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetPoint3WorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetPoint4DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetPoint4WorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetShowLabelAboveWidget(self, _arg: int) -> None: ...
    def SetTolerance(self, _arg: int) -> None: ...
    def ShowLabelAboveWidgetOff(self) -> None: ...
    def ShowLabelAboveWidgetOn(self) -> None: ...
    def StartWidgetDefinition(self, e: MutableSequence[float]) -> None: ...
    def StartWidgetManipulation(self, e: MutableSequence[float]) -> None: ...

class vtkBiDimensionalRepresentation2D(vtkBiDimensionalRepresentation):
    NearP1: int
    NearP2: int
    NearP3: int
    NearP4: int
    OnCenter: int
    OnL1Inner: int
    OnL1Outer: int
    OnL2Inner: int
    OnL2Outer: int
    Outside: int
    def BuildRepresentation(self) -> None: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    @overload
    def GetLabelPosition(self) -> Pointer: ...
    @overload
    def GetLabelPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetLabelText(self) -> str: ...
    def GetLineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty2D: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetSelectedLineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty2D: ...
    def GetTextProperty(self) -> vtkmodules.vtkRenderingCore.vtkTextProperty: ...
    def GetWorldLabelPosition(self, pos: MutableSequence[float]) -> None: ...
    def Highlight(self, highlightOn: int) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkBiDimensionalRepresentation2D: ...
    def Point2WidgetInteraction(self, e: MutableSequence[float]) -> None: ...
    def Point3WidgetInteraction(self, e: MutableSequence[float]) -> None: ...
    def ReleaseGraphicsResources(self, w: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOverlay(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkBiDimensionalRepresentation2D: ...
    def StartWidgetDefinition(self, e: MutableSequence[float]) -> None: ...
    def StartWidgetManipulation(self, e: MutableSequence[float]) -> None: ...
    def WidgetInteraction(self, e: MutableSequence[float]) -> None: ...

class vtkBiDimensionalWidget(vtkAbstractWidget):
    Define: int
    EndWidgetSelectEvent: int
    Manipulate: int
    Start: int
    def CreateDefaultRepresentation(self) -> None: ...
    def GetBiDimensionalRepresentation(self) -> vtkBiDimensionalRepresentation: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetWidgetState(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    def IsMeasureValid(self) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkBiDimensionalWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkBiDimensionalWidget: ...
    def SetEnabled(self, __a: int) -> None: ...
    def SetProcessEvents(self, __a: int) -> None: ...
    def SetRepresentation(self, r: vtkBiDimensionalRepresentation) -> None: ...
    def SetWidgetStateToManipulate(self) -> None: ...
    def SetWidgetStateToStart(self) -> None: ...

class vtkBorderRepresentation(vtkWidgetRepresentation):
    class InteractionStateType(int): ...
    AdjustingE0: vtkmodules.vtkGeovisCore.InteractionStateType
    AdjustingE1: vtkmodules.vtkGeovisCore.InteractionStateType
    AdjustingE2: vtkmodules.vtkGeovisCore.InteractionStateType
    AdjustingE3: vtkmodules.vtkGeovisCore.InteractionStateType
    AdjustingP0: vtkmodules.vtkGeovisCore.InteractionStateType
    AdjustingP1: vtkmodules.vtkGeovisCore.InteractionStateType
    AdjustingP2: vtkmodules.vtkGeovisCore.InteractionStateType
    AdjustingP3: vtkmodules.vtkGeovisCore.InteractionStateType
    AnyLocation: int
    BORDER_ACTIVE: int
    BORDER_OFF: int
    BORDER_ON: int
    Inside: vtkmodules.vtkGeovisCore.InteractionStateType
    LowerCenter: int
    LowerLeftCorner: int
    LowerRightCorner: int
    Outside: vtkmodules.vtkGeovisCore.InteractionStateType
    UpperCenter: int
    UpperLeftCorner: int
    UpperRightCorner: int
    def BuildRepresentation(self) -> None: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def EnforceNormalizedViewportBoundsOff(self) -> None: ...
    def EnforceNormalizedViewportBoundsOn(self) -> None: ...
    def GetActors2D(self, __a: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetBorderColor(self) -> Tuple[float, float, float]: ...
    def GetBorderProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty2D: ...
    def GetBorderThickness(self) -> float: ...
    def GetBorderThicknessMaxValue(self) -> float: ...
    def GetBorderThicknessMinValue(self) -> float: ...
    def GetCornerRadiusStrength(self) -> float: ...
    def GetCornerRadiusStrengthMaxValue(self) -> float: ...
    def GetCornerRadiusStrengthMinValue(self) -> float: ...
    def GetCornerResolution(self) -> int: ...
    def GetCornerResolutionMaxValue(self) -> int: ...
    def GetCornerResolutionMinValue(self) -> int: ...
    def GetEnforceNormalizedViewportBounds(self) -> int: ...
    def GetInteractionStateMaxValue(self) -> int: ...
    def GetInteractionStateMinValue(self) -> int: ...
    def GetMTime(self) -> int: ...
    def GetMaximumSize(self) -> Tuple[int, int]: ...
    def GetMinimumNormalizedViewportSize(self) -> Tuple[float, float]: ...
    def GetMinimumSize(self) -> Tuple[int, int]: ...
    def GetMoving(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPolygonColor(self) -> Tuple[float, float, float]: ...
    def GetPolygonOpacity(self) -> float: ...
    def GetPolygonOpacityMaxValue(self) -> float: ...
    def GetPolygonOpacityMinValue(self) -> float: ...
    @overload
    def GetPolygonRGBA(self, rgba: MutableSequence[float]) -> None: ...
    @overload
    def GetPolygonRGBA(self, r: float, g: float, b: float, a: float) -> None: ...
    def GetPosition(self) -> Tuple[float, float]: ...
    def GetPosition2(self) -> Tuple[float, float]: ...
    def GetPosition2Coordinate(self) -> vtkmodules.vtkRenderingCore.vtkCoordinate: ...
    def GetPositionCoordinate(self) -> vtkmodules.vtkRenderingCore.vtkCoordinate: ...
    def GetProportionalResize(self) -> int: ...
    def GetSelectionPoint(self) -> Tuple[float, float]: ...
    def GetShowBorder(self) -> int: ...
    def GetShowBorderMaxValue(self) -> int: ...
    def GetShowBorderMinValue(self) -> int: ...
    def GetShowHorizontalBorder(self) -> int: ...
    def GetShowHorizontalBorderMaxValue(self) -> int: ...
    def GetShowHorizontalBorderMinValue(self) -> int: ...
    def GetShowPolygon(self) -> int: ...
    def GetShowPolygonBackground(self) -> int: ...
    def GetShowPolygonBackgroundMaxValue(self) -> int: ...
    def GetShowPolygonBackgroundMinValue(self) -> int: ...
    def GetShowVerticalBorder(self) -> int: ...
    def GetShowVerticalBorderMaxValue(self) -> int: ...
    def GetShowVerticalBorderMinValue(self) -> int: ...
    def GetSize(self, size: MutableSequence[float]) -> None: ...
    def GetTolerance(self) -> int: ...
    def GetToleranceMaxValue(self) -> int: ...
    def GetToleranceMinValue(self) -> int: ...
    def GetWindowLocation(self) -> int: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def MovingOff(self) -> None: ...
    def MovingOn(self) -> None: ...
    def NewInstance(self) -> vtkBorderRepresentation: ...
    def ProportionalResizeOff(self) -> None: ...
    def ProportionalResizeOn(self) -> None: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderOverlay(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkBorderRepresentation: ...
    def SetBWActorDisplayOverlay(self, __a: bool) -> None: ...
    def SetBWActorDisplayOverlayEdges(self, __a: bool) -> None: ...
    def SetBWActorDisplayOverlayPolygon(self, __a: bool) -> None: ...
    @overload
    def SetBorderColor(self, _arg1: float, _arg2: float, _arg3: float) -> None: ...
    @overload
    def SetBorderColor(self, _arg: Sequence[float]) -> None: ...
    def SetBorderThickness(self, _arg: float) -> None: ...
    def SetCornerRadiusStrength(self, _arg: float) -> None: ...
    def SetCornerResolution(self, _arg: int) -> None: ...
    def SetEnforceNormalizedViewportBounds(self, _arg: int) -> None: ...
    def SetInteractionState(self, _arg: int) -> None: ...
    @overload
    def SetMaximumSize(self, _arg1: int, _arg2: int) -> None: ...
    @overload
    def SetMaximumSize(self, _arg: Sequence[int]) -> None: ...
    @overload
    def SetMinimumNormalizedViewportSize(self, _arg1: float, _arg2: float) -> None: ...
    @overload
    def SetMinimumNormalizedViewportSize(self, _arg: Sequence[float]) -> None: ...
    @overload
    def SetMinimumSize(self, _arg1: int, _arg2: int) -> None: ...
    @overload
    def SetMinimumSize(self, _arg: Sequence[int]) -> None: ...
    def SetMoving(self, _arg: int) -> None: ...
    @overload
    def SetPolygonColor(self, _arg1: float, _arg2: float, _arg3: float) -> None: ...
    @overload
    def SetPolygonColor(self, _arg: Sequence[float]) -> None: ...
    def SetPolygonOpacity(self, _arg: float) -> None: ...
    @overload
    def SetPolygonRGBA(self, rgba: MutableSequence[float]) -> None: ...
    @overload
    def SetPolygonRGBA(self, r: float, g: float, b: float, a: float) -> None: ...
    @overload
    def SetPosition(self, x: MutableSequence[float]) -> None: ...
    @overload
    def SetPosition(self, x: float, y: float) -> None: ...
    @overload
    def SetPosition2(self, x: MutableSequence[float]) -> None: ...
    @overload
    def SetPosition2(self, x: float, y: float) -> None: ...
    def SetProportionalResize(self, _arg: int) -> None: ...
    def SetShowBorder(self, border: int) -> None: ...
    def SetShowBorderToActive(self) -> None: ...
    def SetShowBorderToOff(self) -> None: ...
    def SetShowBorderToOn(self) -> None: ...
    def SetShowHorizontalBorder(self, _arg: int) -> None: ...
    def SetShowPolygon(self, border: int) -> None: ...
    def SetShowPolygonBackground(self, _arg: int) -> None: ...
    def SetShowPolygonToActive(self) -> None: ...
    def SetShowPolygonToOff(self) -> None: ...
    def SetShowPolygonToOn(self) -> None: ...
    def SetShowVerticalBorder(self, _arg: int) -> None: ...
    def SetTolerance(self, _arg: int) -> None: ...
    def SetWindowLocation(self, enumLocation: int) -> None: ...
    def StartWidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...
    def WidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...

class vtkBorderWidget(vtkAbstractWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetBorderRepresentation(self) -> vtkBorderRepresentation: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetProcessEvents(self) -> int: ...
    def GetResizable(self) -> int: ...
    def GetSelectable(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkBorderWidget: ...
    def ResizableOff(self) -> None: ...
    def ResizableOn(self) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkBorderWidget: ...
    def SelectableOff(self) -> None: ...
    def SelectableOn(self) -> None: ...
    def SetRepresentation(self, r: vtkBorderRepresentation) -> None: ...
    def SetResizable(self, _arg: int) -> None: ...
    def SetSelectable(self, _arg: int) -> None: ...

class vtkPointPlacer(vtkmodules.vtkCommonCore.vtkObject):
    @overload
    def ComputeWorldPosition(
        self,
        ren: vtkmodules.vtkRenderingCore.vtkRenderer,
        displayPos: MutableSequence[float],
        worldPos: MutableSequence[float],
        worldOrient: MutableSequence[float],
    ) -> int: ...
    @overload
    def ComputeWorldPosition(
        self,
        ren: vtkmodules.vtkRenderingCore.vtkRenderer,
        displayPos: MutableSequence[float],
        refWorldPos: MutableSequence[float],
        worldPos: MutableSequence[float],
        worldOrient: MutableSequence[float],
    ) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPixelTolerance(self) -> int: ...
    def GetPixelToleranceMaxValue(self) -> int: ...
    def GetPixelToleranceMinValue(self) -> int: ...
    def GetWorldTolerance(self) -> float: ...
    def GetWorldToleranceMaxValue(self) -> float: ...
    def GetWorldToleranceMinValue(self) -> float: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkPointPlacer: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkPointPlacer: ...
    def SetPixelTolerance(self, _arg: int) -> None: ...
    def SetWorldTolerance(self, _arg: float) -> None: ...
    def UpdateInternalState(self) -> int: ...
    def UpdateNodeWorldPosition(self, worldPos: MutableSequence[float], nodePointId: int) -> int: ...
    def UpdateWorldPosition(
        self, ren: vtkmodules.vtkRenderingCore.vtkRenderer, worldPos: MutableSequence[float], worldOrient: MutableSequence[float]
    ) -> int: ...
    def ValidateDisplayPosition(
        self, __a: vtkmodules.vtkRenderingCore.vtkRenderer, displayPos: MutableSequence[float]
    ) -> int: ...
    @overload
    def ValidateWorldPosition(self, worldPos: MutableSequence[float]) -> int: ...
    @overload
    def ValidateWorldPosition(self, worldPos: MutableSequence[float], worldOrient: MutableSequence[float]) -> int: ...

class vtkBoundedPlanePointPlacer(vtkPointPlacer):
    Oblique: int
    XAxis: int
    YAxis: int
    ZAxis: int

    def AddBoundingPlane(self, plane: vtkmodules.vtkCommonDataModel.vtkPlane) -> None: ...
    @overload
    def ComputeWorldPosition(
        self,
        ren: vtkmodules.vtkRenderingCore.vtkRenderer,
        displayPos: MutableSequence[float],
        worldPos: MutableSequence[float],
        worldOrient: MutableSequence[float],
    ) -> int: ...
    @overload
    def ComputeWorldPosition(
        self,
        ren: vtkmodules.vtkRenderingCore.vtkRenderer,
        displayPos: MutableSequence[float],
        refWorldPos: MutableSequence[float],
        worldPos: MutableSequence[float],
        worldOrient: MutableSequence[float],
    ) -> int: ...
    def GetBoundingPlanes(self) -> vtkmodules.vtkCommonDataModel.vtkPlaneCollection: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetObliquePlane(self) -> vtkmodules.vtkCommonDataModel.vtkPlane: ...
    def GetProjectionNormal(self) -> int: ...
    def GetProjectionNormalMaxValue(self) -> int: ...
    def GetProjectionNormalMinValue(self) -> int: ...
    def GetProjectionPosition(self) -> float: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkBoundedPlanePointPlacer: ...
    def RemoveAllBoundingPlanes(self) -> None: ...
    def RemoveBoundingPlane(self, plane: vtkmodules.vtkCommonDataModel.vtkPlane) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkBoundedPlanePointPlacer: ...
    @overload
    def SetBoundingPlanes(self, __a: vtkmodules.vtkCommonDataModel.vtkPlaneCollection) -> None: ...
    @overload
    def SetBoundingPlanes(self, planes: vtkmodules.vtkCommonDataModel.vtkPlanes) -> None: ...
    def SetObliquePlane(self, __a: vtkmodules.vtkCommonDataModel.vtkPlane) -> None: ...
    def SetProjectionNormal(self, _arg: int) -> None: ...
    def SetProjectionNormalToOblique(self) -> None: ...
    def SetProjectionNormalToXAxis(self) -> None: ...
    def SetProjectionNormalToYAxis(self) -> None: ...
    def SetProjectionNormalToZAxis(self) -> None: ...
    def SetProjectionPosition(self, position: float) -> None: ...
    def UpdateWorldPosition(
        self, ren: vtkmodules.vtkRenderingCore.vtkRenderer, worldPos: MutableSequence[float], worldOrient: MutableSequence[float]
    ) -> int: ...
    @overload
    def ValidateWorldPosition(self, worldPos: MutableSequence[float]) -> int: ...
    @overload
    def ValidateWorldPosition(self, worldPos: MutableSequence[float], worldOrient: MutableSequence[float]) -> int: ...

class vtkBoxRepresentation(vtkWidgetRepresentation):
    MoveF0: int
    MoveF1: int
    MoveF2: int
    MoveF3: int
    MoveF4: int
    MoveF5: int
    Outside: int
    Rotating: int
    Scaling: int
    Translating: int
    def BuildRepresentation(self) -> None: ...
    def ComplexInteraction(
        self,
        iren: vtkmodules.vtkRenderingCore.vtkRenderWindowInteractor,
        widget: vtkAbstractWidget,
        event: int,
        calldata: Pointer,
    ) -> None: ...
    def ComputeComplexInteractionState(
        self,
        iren: vtkmodules.vtkRenderingCore.vtkRenderWindowInteractor,
        widget: vtkAbstractWidget,
        event: int,
        calldata: Pointer,
        modify: int = 0,
    ) -> int: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def EndComplexInteraction(
        self,
        iren: vtkmodules.vtkRenderingCore.vtkRenderWindowInteractor,
        widget: vtkAbstractWidget,
        event: int,
        calldata: Pointer,
    ) -> None: ...
    def GetActors(self, __a: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetFaceProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetHandleProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetInsideOut(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetOutlineCursorWires(self) -> int: ...
    def GetOutlineFaceWires(self) -> int: ...
    def GetOutlineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetPlanes(self, planes: vtkmodules.vtkCommonDataModel.vtkPlanes) -> None: ...
    def GetPolyData(self, pd: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    def GetSelectedFaceProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedHandleProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedOutlineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSnapToAxes(self) -> bool: ...
    def GetTransform(self, t: vtkmodules.vtkCommonTransforms.vtkTransform) -> None: ...
    def GetTranslationAxis(self) -> int: ...
    def GetTranslationAxisMaxValue(self) -> int: ...
    def GetTranslationAxisMinValue(self) -> int: ...
    def GetTwoPlaneMode(self) -> bool: ...
    def GetUnderlyingPlane(self, i: int) -> vtkmodules.vtkCommonDataModel.vtkPlane: ...
    def HandlesOff(self) -> None: ...
    def HandlesOn(self) -> None: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def InsideOutOff(self) -> None: ...
    def InsideOutOn(self) -> None: ...
    def IsA(self, type: str) -> int: ...
    def IsTranslationConstrained(self) -> bool: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkBoxRepresentation: ...
    def OutlineCursorWiresOff(self) -> None: ...
    def OutlineCursorWiresOn(self) -> None: ...
    def OutlineFaceWiresOff(self) -> None: ...
    def OutlineFaceWiresOn(self) -> None: ...
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    def RegisterPickers(self) -> None: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkBoxRepresentation: ...
    def SetInsideOut(self, _arg: int) -> None: ...
    def SetInteractionState(self, state: int) -> None: ...
    def SetOutlineCursorWires(self, __a: int) -> None: ...
    def SetOutlineFaceWires(self, __a: int) -> None: ...
    def SetSnapToAxes(self, _arg: bool) -> None: ...
    def SetTransform(self, t: vtkmodules.vtkCommonTransforms.vtkTransform) -> None: ...
    def SetTranslationAxis(self, _arg: int) -> None: ...
    def SetTranslationAxisOff(self) -> None: ...
    def SetTwoPlaneMode(self, __a: bool) -> None: ...
    def SetXTranslationAxisOn(self) -> None: ...
    def SetYTranslationAxisOn(self) -> None: ...
    def SetZTranslationAxisOn(self) -> None: ...
    def StartComplexInteraction(
        self,
        iren: vtkmodules.vtkRenderingCore.vtkRenderWindowInteractor,
        widget: vtkAbstractWidget,
        event: int,
        calldata: Pointer,
    ) -> None: ...
    def StartWidgetInteraction(self, e: MutableSequence[float]) -> None: ...
    def StepBackward(self) -> None: ...
    def StepForward(self) -> None: ...
    def WidgetInteraction(self, e: MutableSequence[float]) -> None: ...

class vtkBoxWidget(vtk3DWidget):
    def GetFaceProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetHandleProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetInsideOut(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetOutlineCursorWires(self) -> int: ...
    def GetOutlineFaceWires(self) -> int: ...
    def GetOutlineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetPlanes(self, planes: vtkmodules.vtkCommonDataModel.vtkPlanes) -> None: ...
    def GetPolyData(self, pd: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    def GetRotationEnabled(self) -> int: ...
    def GetScalingEnabled(self) -> int: ...
    def GetSelectedFaceProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedHandleProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedOutlineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetTransform(self, t: vtkmodules.vtkCommonTransforms.vtkTransform) -> None: ...
    def GetTranslationEnabled(self) -> int: ...
    def HandlesOff(self) -> None: ...
    def HandlesOn(self) -> None: ...
    def InsideOutOff(self) -> None: ...
    def InsideOutOn(self) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkBoxWidget: ...
    def OutlineCursorWiresOff(self) -> None: ...
    def OutlineCursorWiresOn(self) -> None: ...
    def OutlineFaceWiresOff(self) -> None: ...
    def OutlineFaceWiresOn(self) -> None: ...
    @overload
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    @overload
    def PlaceWidget(self) -> None: ...
    @overload
    def PlaceWidget(self, xmin: float, xmax: float, ymin: float, ymax: float, zmin: float, zmax: float) -> None: ...
    def RotationEnabledOff(self) -> None: ...
    def RotationEnabledOn(self) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkBoxWidget: ...
    def ScalingEnabledOff(self) -> None: ...
    def ScalingEnabledOn(self) -> None: ...
    def SetEnabled(self, __a: int) -> None: ...
    def SetInsideOut(self, _arg: int) -> None: ...
    def SetOutlineCursorWires(self, __a: int) -> None: ...
    def SetOutlineFaceWires(self, __a: int) -> None: ...
    def SetRotationEnabled(self, _arg: int) -> None: ...
    def SetScalingEnabled(self, _arg: int) -> None: ...
    def SetTransform(self, t: vtkmodules.vtkCommonTransforms.vtkTransform) -> None: ...
    def SetTranslationEnabled(self, _arg: int) -> None: ...
    def TranslationEnabledOff(self) -> None: ...
    def TranslationEnabledOn(self) -> None: ...

class vtkBoxWidget2(vtkAbstractWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetMoveFacesEnabled(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetRotationEnabled(self) -> int: ...
    def GetScalingEnabled(self) -> int: ...
    def GetTranslationEnabled(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def MoveFacesEnabledOff(self) -> None: ...
    def MoveFacesEnabledOn(self) -> None: ...
    def NewInstance(self) -> vtkBoxWidget2: ...
    def RotationEnabledOff(self) -> None: ...
    def RotationEnabledOn(self) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkBoxWidget2: ...
    def ScalingEnabledOff(self) -> None: ...
    def ScalingEnabledOn(self) -> None: ...
    def SetEnabled(self, enabling: int) -> None: ...
    def SetMoveFacesEnabled(self, _arg: int) -> None: ...
    def SetRepresentation(self, r: vtkBoxRepresentation) -> None: ...
    def SetRotationEnabled(self, _arg: int) -> None: ...
    def SetScalingEnabled(self, _arg: int) -> None: ...
    def SetTranslationEnabled(self, _arg: int) -> None: ...
    def TranslationEnabledOff(self) -> None: ...
    def TranslationEnabledOn(self) -> None: ...

class vtkBrokenLineWidget(vtk3DWidget):
    @overload
    def GetHandlePosition(self, handle: int, xyz: MutableSequence[float]) -> None: ...
    @overload
    def GetHandlePosition(self, handle: int) -> Pointer: ...
    def GetHandleProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetHandleSizeFactor(self) -> float: ...
    def GetHandleSizeFactorMaxValue(self) -> float: ...
    def GetHandleSizeFactorMinValue(self) -> float: ...
    def GetLineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetNumberOfHandles(self) -> int: ...
    def GetPolyData(self, pd: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    def GetProcessEvents(self) -> int: ...
    def GetProcessEventsMaxValue(self) -> int: ...
    def GetProcessEventsMinValue(self) -> int: ...
    def GetProjectToPlane(self) -> int: ...
    def GetProjectionNormal(self) -> int: ...
    def GetProjectionNormalMaxValue(self) -> int: ...
    def GetProjectionNormalMinValue(self) -> int: ...
    def GetProjectionPosition(self) -> float: ...
    def GetSelectedHandleProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedLineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSummedLength(self) -> float: ...
    def InitializeHandles(self, points: vtkmodules.vtkCommonCore.vtkPoints) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkBrokenLineWidget: ...
    @overload
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    @overload
    def PlaceWidget(self) -> None: ...
    @overload
    def PlaceWidget(self, xmin: float, xmax: float, ymin: float, ymax: float, zmin: float, zmax: float) -> None: ...
    def ProcessEventsOff(self) -> None: ...
    def ProcessEventsOn(self) -> None: ...
    def ProjectToPlaneOff(self) -> None: ...
    def ProjectToPlaneOn(self) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkBrokenLineWidget: ...
    def SetEnabled(self, __a: int) -> None: ...
    @overload
    def SetHandlePosition(self, handle: int, x: float, y: float, z: float) -> None: ...
    @overload
    def SetHandlePosition(self, handle: int, xyz: MutableSequence[float]) -> None: ...
    def SetHandleProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...
    def SetHandleSizeFactor(self, _arg: float) -> None: ...
    def SetLineProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...
    def SetNumberOfHandles(self, npts: int) -> None: ...
    def SetPlaneSource(self, plane: vtkmodules.vtkFiltersSources.vtkPlaneSource) -> None: ...
    def SetProcessEvents(self, _arg: int) -> None: ...
    def SetProjectToPlane(self, _arg: int) -> None: ...
    def SetProjectionNormal(self, _arg: int) -> None: ...
    def SetProjectionNormalToOblique(self) -> None: ...
    def SetProjectionNormalToXAxes(self) -> None: ...
    def SetProjectionNormalToYAxes(self) -> None: ...
    def SetProjectionNormalToZAxes(self) -> None: ...
    def SetProjectionPosition(self, position: float) -> None: ...
    def SetSelectedHandleProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...
    def SetSelectedLineProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...

class vtkButtonRepresentation(vtkWidgetRepresentation):
    class HighlightStateType(int): ...
    class InteractionStateType(int): ...
    HighlightHovering: HighlightStateType
    HighlightNormal: HighlightStateType
    HighlightSelecting: HighlightStateType
    Inside: vtkmodules.vtkGeovisCore.InteractionStateType
    Outside: vtkmodules.vtkGeovisCore.InteractionStateType
    def GetHighlightState(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetNumberOfStatesMaxValue(self) -> int: ...
    def GetNumberOfStatesMinValue(self) -> int: ...
    def GetState(self) -> int: ...
    def Highlight(self, __a: int) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkButtonRepresentation: ...
    def NextState(self) -> None: ...
    def PreviousState(self) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkButtonRepresentation: ...
    def SetNumberOfStates(self, _arg: int) -> None: ...
    def SetState(self, state: int) -> None: ...
    def ShallowCopy(self, prop: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...

class vtkButtonWidget(vtkAbstractWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetSliderRepresentation(self) -> vtkButtonRepresentation: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkButtonWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkButtonWidget: ...
    def SetEnabled(self, __a: int) -> None: ...
    def SetRepresentation(self, r: vtkButtonRepresentation) -> None: ...

class vtkCameraHandleSource(vtkmodules.vtkFiltersSources.vtkHandleSource):
    @overload
    def GetDirection(self) -> Pointer: ...
    @overload
    def GetDirection(self, dir: MutableSequence[float]) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    @overload
    def GetPosition(self) -> Pointer: ...
    @overload
    def GetPosition(self, pos: MutableSequence[float]) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkCameraHandleSource: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkCameraHandleSource: ...
    def SetCamera(self, cam: vtkmodules.vtkRenderingCore.vtkCamera) -> None: ...
    @overload
    def SetDirection(self, xTarget: float, yTarget: float, zTarget: float) -> None: ...
    @overload
    def SetDirection(self, dir: Sequence[float]) -> None: ...
    @overload
    def SetPosition(self, xPos: float, yPos: float, zPos: float) -> None: ...
    @overload
    def SetPosition(self, pos: Sequence[float]) -> None: ...

class vtkCameraOrientationRepresentation(vtkWidgetRepresentation):
    class AnchorType(int):
        LowerLeft: AnchorType
        LowerRight: AnchorType
        UpperLeft: AnchorType
        UpperRight: AnchorType

    class InteractionStateType(int):
        Hovering: vtkmodules.vtkGeovisCore.InteractionStateType
        Outside: vtkmodules.vtkGeovisCore.InteractionStateType
        Rotating: vtkmodules.vtkGeovisCore.InteractionStateType
    def AnchorToLowerLeft(self) -> None: ...
    def AnchorToLowerRight(self) -> None: ...
    def AnchorToUpperLeft(self) -> None: ...
    def AnchorToUpperRight(self) -> None: ...
    @overload
    def ApplyInteractionState(self, state: vtkmodules.vtkGeovisCore.InteractionStateType) -> None: ...
    @overload
    def ApplyInteractionState(self, state: int) -> None: ...
    def BuildRepresentation(self) -> None: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def ContainerVisibilityOff(self) -> None: ...
    def ContainerVisibilityOn(self) -> None: ...
    def EndWidgetInteraction(self, newEventPos: MutableSequence[float]) -> None: ...
    def GetActors(self, __a: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetAnchorPosition(self) -> AnchorType: ...
    def GetAzimuth(self) -> float: ...
    def GetBack(self) -> Tuple[float, float, float]: ...
    def GetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetContainerCircumferentialResolution(self) -> int: ...
    def GetContainerCircumferentialResolutionMaxValue(self) -> int: ...
    def GetContainerCircumferentialResolutionMinValue(self) -> int: ...
    def GetContainerProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetContainerRadialResolution(self) -> int: ...
    def GetContainerRadialResolutionMaxValue(self) -> int: ...
    def GetContainerRadialResolutionMinValue(self) -> int: ...
    def GetContainerVisibility(self) -> bool: ...
    def GetElevation(self) -> float: ...
    def GetHandleCircumferentialResolution(self) -> int: ...
    def GetHandleCircumferentialResolutionMaxValue(self) -> int: ...
    def GetHandleCircumferentialResolutionMinValue(self) -> int: ...
    def GetInteractionStateAsEnum(self) -> vtkmodules.vtkGeovisCore.InteractionStateType: ...
    def GetNormalizedHandleDia(self) -> float: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPadding(self) -> Tuple[int, int]: ...
    def GetPickedAxis(self) -> int: ...
    def GetPickedDir(self) -> int: ...
    def GetShaftResolution(self) -> int: ...
    def GetShaftResolutionMaxValue(self) -> int: ...
    def GetShaftResolutionMinValue(self) -> int: ...
    def GetSize(self) -> Tuple[int, int]: ...
    def GetTotalLength(self) -> float: ...
    def GetTransform(self) -> vtkmodules.vtkCommonTransforms.vtkTransform: ...
    def GetUp(self) -> Tuple[float, float, float]: ...
    def GetXMinusLabelProperty(self) -> vtkmodules.vtkRenderingCore.vtkTextProperty: ...
    def GetXPlusLabelProperty(self) -> vtkmodules.vtkRenderingCore.vtkTextProperty: ...
    def GetYMinusLabelProperty(self) -> vtkmodules.vtkRenderingCore.vtkTextProperty: ...
    def GetYPlusLabelProperty(self) -> vtkmodules.vtkRenderingCore.vtkTextProperty: ...
    def GetZMinusLabelProperty(self) -> vtkmodules.vtkRenderingCore.vtkTextProperty: ...
    def GetZPlusLabelProperty(self) -> vtkmodules.vtkRenderingCore.vtkTextProperty: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    def IsAnyHandleSelected(self) -> bool: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkCameraOrientationRepresentation: ...
    def PlaceWidget(self, __a: MutableSequence[float]) -> None: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkCameraOrientationRepresentation: ...
    def SetContainerCircumferentialResolution(self, _arg: int) -> None: ...
    def SetContainerRadialResolution(self, _arg: int) -> None: ...
    def SetContainerVisibility(self, state: bool) -> None: ...
    def SetHandleCircumferentialResolution(self, _arg: int) -> None: ...
    def SetNormalizedHandleDia(self, _arg: float) -> None: ...
    @overload
    def SetPadding(self, _arg1: int, _arg2: int) -> None: ...
    @overload
    def SetPadding(self, _arg: Sequence[int]) -> None: ...
    def SetShaftResolution(self, _arg: int) -> None: ...
    @overload
    def SetSize(self, _arg1: int, _arg2: int) -> None: ...
    @overload
    def SetSize(self, _arg: Sequence[int]) -> None: ...
    def SetTotalLength(self, _arg: float) -> None: ...
    def ShallowCopy(self, prop: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...
    def StartWidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...
    def WidgetInteraction(self, newEventPos: MutableSequence[float]) -> None: ...

class vtkCameraOrientationWidget(vtkAbstractWidget):
    def AnimateOff(self) -> None: ...
    def AnimateOn(self) -> None: ...
    def CreateDefaultRepresentation(self) -> None: ...
    def GetAnimate(self) -> bool: ...
    def GetAnimatorTotalFrames(self) -> int: ...
    def GetAnimatorTotalFramesMaxValue(self) -> int: ...
    def GetAnimatorTotalFramesMinValue(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetParentRenderer(self) -> vtkmodules.vtkRenderingCore.vtkRenderer: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkCameraOrientationWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkCameraOrientationWidget: ...
    def SetAnimate(self, _arg: bool) -> None: ...
    def SetAnimatorTotalFrames(self, _arg: int) -> None: ...
    def SetParentRenderer(self, renderer: vtkmodules.vtkRenderingCore.vtkRenderer) -> None: ...
    def SquareResize(self) -> None: ...

class vtkCameraPathRepresentation(vtkAbstractSplineRepresentation):
    def AddCameraAt(self, camera: vtkmodules.vtkRenderingCore.vtkCamera, index: int) -> None: ...
    def BuildRepresentation(self) -> None: ...
    def DeleteCameraAt(self, index: int) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def InitializeHandles(self, points: vtkmodules.vtkCommonCore.vtkPoints) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkCameraPathRepresentation: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkCameraPathRepresentation: ...
    def SetDirectional(self, val: bool) -> None: ...
    def SetNumberOfHandles(self, npts: int) -> None: ...
    def SetParametricSpline(self, spline: vtkmodules.vtkCommonComputationalGeometry.vtkParametricSpline) -> None: ...

class vtkCameraPathWidget(vtkAbstractWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkCameraPathWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkCameraPathWidget: ...
    def SetEnabled(self, enabling: int) -> None: ...
    def SetRepresentation(self, r: vtkCameraPathRepresentation) -> None: ...

class vtkCameraRepresentation(vtkBorderRepresentation):
    def AddCameraToPath(self) -> None: ...
    def AnimatePath(self, rwi: vtkmodules.vtkRenderingCore.vtkRenderWindowInteractor) -> None: ...
    def BuildRepresentation(self) -> None: ...
    def GetActors2D(self, __a: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetCamera(self) -> vtkmodules.vtkRenderingCore.vtkCamera: ...
    def GetInterpolator(self) -> vtkmodules.vtkRenderingCore.vtkCameraInterpolator: ...
    def GetNumberOfFrames(self) -> int: ...
    def GetNumberOfFramesMaxValue(self) -> int: ...
    def GetNumberOfFramesMinValue(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty2D: ...
    def GetSize(self, size: MutableSequence[float]) -> None: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def InitializePath(self) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkCameraRepresentation: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderOverlay(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkCameraRepresentation: ...
    def SetCamera(self, camera: vtkmodules.vtkRenderingCore.vtkCamera) -> None: ...
    def SetInterpolator(self, camInt: vtkmodules.vtkRenderingCore.vtkCameraInterpolator) -> None: ...
    def SetNumberOfFrames(self, _arg: int) -> None: ...

class vtkCameraWidget(vtkBorderWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkCameraWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkCameraWidget: ...
    def SetRepresentation(self, r: vtkCameraRepresentation) -> None: ...

class vtkCaptionRepresentation(vtkBorderRepresentation):
    def BuildRepresentation(self) -> None: ...
    def GetActors2D(self, __a: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetAnchorPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetAnchorRepresentation(self) -> vtkPointHandleRepresentation3D: ...
    def GetCaptionActor2D(self) -> vtkmodules.vtkRenderingAnnotation.vtkCaptionActor2D: ...
    def GetFontFactor(self) -> float: ...
    def GetFontFactorMaxValue(self) -> float: ...
    def GetFontFactorMinValue(self) -> float: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetSize(self, size: MutableSequence[float]) -> None: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkCaptionRepresentation: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderOverlay(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkCaptionRepresentation: ...
    def SetAnchorPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetAnchorRepresentation(self, __a: vtkPointHandleRepresentation3D) -> None: ...
    def SetCaptionActor2D(self, captionActor: vtkmodules.vtkRenderingAnnotation.vtkCaptionActor2D) -> None: ...
    def SetFontFactor(self, _arg: float) -> None: ...

class vtkCaptionWidget(vtkBorderWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetCaptionActor2D(self) -> vtkmodules.vtkRenderingAnnotation.vtkCaptionActor2D: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkCaptionWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkCaptionWidget: ...
    def SetCaptionActor2D(self, capActor: vtkmodules.vtkRenderingAnnotation.vtkCaptionActor2D) -> None: ...
    def SetEnabled(self, enabling: int) -> None: ...
    def SetRepresentation(self, r: vtkCaptionRepresentation) -> None: ...

class vtkCellCentersPointPlacer(vtkPointPlacer):
    CellPointsMean: int
    None_: int
    ParametricCenter: int
    def AddProp(self, __a: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...
    @overload
    def ComputeWorldPosition(
        self,
        ren: vtkmodules.vtkRenderingCore.vtkRenderer,
        displayPos: MutableSequence[float],
        worldPos: MutableSequence[float],
        worldOrient: MutableSequence[float],
    ) -> int: ...
    @overload
    def ComputeWorldPosition(
        self,
        ren: vtkmodules.vtkRenderingCore.vtkRenderer,
        displayPos: MutableSequence[float],
        refWorldPos: MutableSequence[float],
        worldPos: MutableSequence[float],
        worldOrient: MutableSequence[float],
    ) -> int: ...
    def GetCellPicker(self) -> vtkmodules.vtkRenderingCore.vtkCellPicker: ...
    def GetMode(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetNumberOfProps(self) -> int: ...
    def HasProp(self, __a: vtkmodules.vtkRenderingCore.vtkProp) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkCellCentersPointPlacer: ...
    def RemoveAllProps(self) -> None: ...
    def RemoveViewProp(self, prop: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkCellCentersPointPlacer: ...
    def SetMode(self, _arg: int) -> None: ...
    def ValidateDisplayPosition(
        self, __a: vtkmodules.vtkRenderingCore.vtkRenderer, displayPos: MutableSequence[float]
    ) -> int: ...
    @overload
    def ValidateWorldPosition(self, worldPos: MutableSequence[float]) -> int: ...
    @overload
    def ValidateWorldPosition(self, worldPos: MutableSequence[float], worldOrient: MutableSequence[float]) -> int: ...

class vtkSliderRepresentation(vtkWidgetRepresentation):
    class InteractionStateType(int): ...
    LeftCap: vtkmodules.vtkGeovisCore.InteractionStateType
    Outside: vtkmodules.vtkGeovisCore.InteractionStateType
    RightCap: vtkmodules.vtkGeovisCore.InteractionStateType
    Slider: vtkmodules.vtkGeovisCore.InteractionStateType
    Tube: vtkmodules.vtkGeovisCore.InteractionStateType
    def GetCurrentT(self) -> float: ...
    def GetEndCapLength(self) -> float: ...
    def GetEndCapLengthMaxValue(self) -> float: ...
    def GetEndCapLengthMinValue(self) -> float: ...
    def GetEndCapWidth(self) -> float: ...
    def GetEndCapWidthMaxValue(self) -> float: ...
    def GetEndCapWidthMinValue(self) -> float: ...
    def GetLabelFormat(self) -> str: ...
    def GetLabelHeight(self) -> float: ...
    def GetLabelHeightMaxValue(self) -> float: ...
    def GetLabelHeightMinValue(self) -> float: ...
    def GetMaximumValue(self) -> float: ...
    def GetMinimumValue(self) -> float: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPickedT(self) -> float: ...
    def GetShowSliderLabel(self) -> int: ...
    def GetSliderLength(self) -> float: ...
    def GetSliderLengthMaxValue(self) -> float: ...
    def GetSliderLengthMinValue(self) -> float: ...
    def GetSliderWidth(self) -> float: ...
    def GetSliderWidthMaxValue(self) -> float: ...
    def GetSliderWidthMinValue(self) -> float: ...
    def GetTitleHeight(self) -> float: ...
    def GetTitleHeightMaxValue(self) -> float: ...
    def GetTitleHeightMinValue(self) -> float: ...
    def GetTitleText(self) -> str: ...
    def GetTubeWidth(self) -> float: ...
    def GetTubeWidthMaxValue(self) -> float: ...
    def GetTubeWidthMinValue(self) -> float: ...
    def GetValue(self) -> float: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkSliderRepresentation: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkSliderRepresentation: ...
    def SetEndCapLength(self, _arg: float) -> None: ...
    def SetEndCapWidth(self, _arg: float) -> None: ...
    def SetLabelFormat(self, _arg: str) -> None: ...
    def SetLabelHeight(self, _arg: float) -> None: ...
    def SetMaximumValue(self, value: float) -> None: ...
    def SetMinimumValue(self, value: float) -> None: ...
    def SetShowSliderLabel(self, _arg: int) -> None: ...
    def SetSliderLength(self, _arg: float) -> None: ...
    def SetSliderWidth(self, _arg: float) -> None: ...
    def SetTitleHeight(self, _arg: float) -> None: ...
    def SetTitleText(self, __a: str) -> None: ...
    def SetTubeWidth(self, _arg: float) -> None: ...
    def SetValue(self, value: float) -> None: ...
    def ShowSliderLabelOff(self) -> None: ...
    def ShowSliderLabelOn(self) -> None: ...

class vtkCenteredSliderRepresentation(vtkSliderRepresentation):
    def BuildRepresentation(self) -> None: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def GetActors(self, __a: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetLabelProperty(self) -> vtkmodules.vtkRenderingCore.vtkTextProperty: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPoint1Coordinate(self) -> vtkmodules.vtkRenderingCore.vtkCoordinate: ...
    def GetPoint2Coordinate(self) -> vtkmodules.vtkRenderingCore.vtkCoordinate: ...
    def GetSelectedProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty2D: ...
    def GetSliderProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty2D: ...
    def GetTitleText(self) -> str: ...
    def GetTubeProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty2D: ...
    def Highlight(self, __a: int) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkCenteredSliderRepresentation: ...
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderOverlay(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkCenteredSliderRepresentation: ...
    def SetTitleText(self, __a: str) -> None: ...
    def StartWidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...
    def WidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...

class vtkCenteredSliderWidget(vtkAbstractWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetSliderRepresentation(self) -> vtkSliderRepresentation: ...
    def GetValue(self) -> float: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkCenteredSliderWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkCenteredSliderWidget: ...
    def SetRepresentation(self, r: vtkSliderRepresentation) -> None: ...

class vtkCheckerboardRepresentation(vtkWidgetRepresentation):
    BottomSlider: int
    LeftSlider: int
    RightSlider: int
    TopSlider: int
    def BuildRepresentation(self) -> None: ...
    def GetActors(self, __a: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetBottomRepresentation(self) -> vtkSliderRepresentation3D: ...
    def GetCheckerboard(self) -> vtkmodules.vtkImagingGeneral.vtkImageCheckerboard: ...
    def GetCornerOffset(self) -> float: ...
    def GetCornerOffsetMaxValue(self) -> float: ...
    def GetCornerOffsetMinValue(self) -> float: ...
    def GetImageActor(self) -> vtkmodules.vtkRenderingCore.vtkImageActor: ...
    def GetLeftRepresentation(self) -> vtkSliderRepresentation3D: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetRightRepresentation(self) -> vtkSliderRepresentation3D: ...
    def GetTopRepresentation(self) -> vtkSliderRepresentation3D: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkCheckerboardRepresentation: ...
    def ReleaseGraphicsResources(self, w: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderOverlay(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkCheckerboardRepresentation: ...
    def SetBottomRepresentation(self, __a: vtkSliderRepresentation3D) -> None: ...
    def SetCheckerboard(self, chkrbrd: vtkmodules.vtkImagingGeneral.vtkImageCheckerboard) -> None: ...
    def SetCornerOffset(self, _arg: float) -> None: ...
    def SetImageActor(self, imageActor: vtkmodules.vtkRenderingCore.vtkImageActor) -> None: ...
    def SetLeftRepresentation(self, __a: vtkSliderRepresentation3D) -> None: ...
    def SetRightRepresentation(self, __a: vtkSliderRepresentation3D) -> None: ...
    def SetTopRepresentation(self, __a: vtkSliderRepresentation3D) -> None: ...
    def SliderValueChanged(self, sliderNum: int) -> None: ...

class vtkCheckerboardWidget(vtkAbstractWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetCheckerboardRepresentation(self) -> vtkCheckerboardRepresentation: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkCheckerboardWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkCheckerboardWidget: ...
    def SetEnabled(self, __a: int) -> None: ...
    def SetRepresentation(self, r: vtkCheckerboardRepresentation) -> None: ...

class vtkClosedSurfacePointPlacer(vtkPointPlacer):
    def AddBoundingPlane(self, plane: vtkmodules.vtkCommonDataModel.vtkPlane) -> None: ...
    @overload
    def ComputeWorldPosition(
        self,
        ren: vtkmodules.vtkRenderingCore.vtkRenderer,
        displayPos: MutableSequence[float],
        worldPos: MutableSequence[float],
        worldOrient: MutableSequence[float],
    ) -> int: ...
    @overload
    def ComputeWorldPosition(
        self,
        ren: vtkmodules.vtkRenderingCore.vtkRenderer,
        displayPos: MutableSequence[float],
        refWorldPos: MutableSequence[float],
        worldPos: MutableSequence[float],
        worldOrient: MutableSequence[float],
    ) -> int: ...
    def GetBoundingPlanes(self) -> vtkmodules.vtkCommonDataModel.vtkPlaneCollection: ...
    def GetMinimumDistance(self) -> float: ...
    def GetMinimumDistanceMaxValue(self) -> float: ...
    def GetMinimumDistanceMinValue(self) -> float: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkClosedSurfacePointPlacer: ...
    def RemoveAllBoundingPlanes(self) -> None: ...
    def RemoveBoundingPlane(self, plane: vtkmodules.vtkCommonDataModel.vtkPlane) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkClosedSurfacePointPlacer: ...
    @overload
    def SetBoundingPlanes(self, __a: vtkmodules.vtkCommonDataModel.vtkPlaneCollection) -> None: ...
    @overload
    def SetBoundingPlanes(self, planes: vtkmodules.vtkCommonDataModel.vtkPlanes) -> None: ...
    def SetMinimumDistance(self, _arg: float) -> None: ...
    @overload
    def ValidateWorldPosition(self, worldPos: MutableSequence[float]) -> int: ...
    @overload
    def ValidateWorldPosition(self, worldPos: MutableSequence[float], worldOrient: MutableSequence[float]) -> int: ...

class vtkConstrainedPointHandleRepresentation(vtkHandleRepresentation):
    Oblique: int
    XAxis: int
    YAxis: int
    ZAxis: int
    def AddBoundingPlane(self, plane: vtkmodules.vtkCommonDataModel.vtkPlane) -> None: ...
    def BuildRepresentation(self) -> None: ...
    def CheckConstraint(self, renderer: vtkmodules.vtkRenderingCore.vtkRenderer, pos: MutableSequence[float]) -> int: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int) -> int: ...
    def GetActiveCursorShape(self) -> vtkmodules.vtkCommonDataModel.vtkPolyData: ...
    def GetActiveProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetActors(self, __a: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetBoundingPlanes(self) -> vtkmodules.vtkCommonDataModel.vtkPlaneCollection: ...
    def GetCursorShape(self) -> vtkmodules.vtkCommonDataModel.vtkPolyData: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetObliquePlane(self) -> vtkmodules.vtkCommonDataModel.vtkPlane: ...
    @overload
    def GetPosition(self) -> Pointer: ...
    @overload
    def GetPosition(self, xyz: MutableSequence[float]) -> None: ...
    def GetProjectionNormal(self) -> int: ...
    def GetProjectionNormalMaxValue(self) -> int: ...
    def GetProjectionNormalMinValue(self) -> int: ...
    def GetProjectionPosition(self) -> float: ...
    def GetProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def Highlight(self, highlight: int) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkConstrainedPointHandleRepresentation: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RemoveAllBoundingPlanes(self) -> None: ...
    def RemoveBoundingPlane(self, plane: vtkmodules.vtkCommonDataModel.vtkPlane) -> None: ...
    def RenderOpaqueGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderOverlay(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkConstrainedPointHandleRepresentation: ...
    def SetActiveCursorShape(self, activeShape: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    @overload
    def SetBoundingPlanes(self, __a: vtkmodules.vtkCommonDataModel.vtkPlaneCollection) -> None: ...
    @overload
    def SetBoundingPlanes(self, planes: vtkmodules.vtkCommonDataModel.vtkPlanes) -> None: ...
    def SetCursorShape(self, cursorShape: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    def SetDisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetObliquePlane(self, __a: vtkmodules.vtkCommonDataModel.vtkPlane) -> None: ...
    @overload
    def SetPosition(self, x: float, y: float, z: float) -> None: ...
    @overload
    def SetPosition(self, xyz: MutableSequence[float]) -> None: ...
    def SetProjectionNormal(self, _arg: int) -> None: ...
    def SetProjectionNormalToOblique(self) -> None: ...
    def SetProjectionNormalToXAxis(self) -> None: ...
    def SetProjectionNormalToYAxis(self) -> None: ...
    def SetProjectionNormalToZAxis(self) -> None: ...
    def SetProjectionPosition(self, position: float) -> None: ...
    def SetRenderer(self, ren: vtkmodules.vtkRenderingCore.vtkRenderer) -> None: ...
    def ShallowCopy(self, prop: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...
    def StartWidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...
    def Translate(self, p1: Sequence[float], p2: Sequence[float]) -> None: ...
    def WidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...

class vtkContinuousValueWidget(vtkAbstractWidget):
    def GetContinuousValueWidgetRepresentation(self) -> vtkContinuousValueWidgetRepresentation: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetValue(self) -> float: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkContinuousValueWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkContinuousValueWidget: ...
    def SetRepresentation(self, r: vtkContinuousValueWidgetRepresentation) -> None: ...
    def SetValue(self, v: float) -> None: ...

class vtkContinuousValueWidgetRepresentation(vtkWidgetRepresentation):
    class InteractionStateType(int): ...
    Adjusting: vtkmodules.vtkGeovisCore.InteractionStateType
    Inside: vtkmodules.vtkGeovisCore.InteractionStateType
    Outside: vtkmodules.vtkGeovisCore.InteractionStateType
    def BuildRepresentation(self) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetValue(self) -> float: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkContinuousValueWidgetRepresentation: ...
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkContinuousValueWidgetRepresentation: ...
    def SetValue(self, value: float) -> None: ...
    def StartWidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...
    def WidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...

class vtkContourRepresentation(vtkWidgetRepresentation):
    Inactive: int
    Nearby: int
    Outside: int
    Scale: int
    Shift: int
    Translate: int
    @overload
    def ActivateNode(self, displayPos: MutableSequence[float]) -> int: ...
    @overload
    def ActivateNode(self, displayPos: MutableSequence[int]) -> int: ...
    @overload
    def ActivateNode(self, X: int, Y: int) -> int: ...
    @overload
    def AddIntermediatePointWorldPosition(self, n: int, point: MutableSequence[float]) -> int: ...
    @overload
    def AddIntermediatePointWorldPosition(self, n: int, point: MutableSequence[float], ptId: int) -> int: ...
    @overload
    def AddNodeAtDisplayPosition(self, displayPos: MutableSequence[float]) -> int: ...
    @overload
    def AddNodeAtDisplayPosition(self, displayPos: MutableSequence[int]) -> int: ...
    @overload
    def AddNodeAtDisplayPosition(self, X: int, Y: int) -> int: ...
    @overload
    def AddNodeAtWorldPosition(self, x: float, y: float, z: float) -> int: ...
    @overload
    def AddNodeAtWorldPosition(self, worldPos: MutableSequence[float]) -> int: ...
    @overload
    def AddNodeAtWorldPosition(self, worldPos: MutableSequence[float], worldOrient: MutableSequence[float]) -> int: ...
    def AddNodeOnContour(self, X: int, Y: int) -> int: ...
    def BuildRepresentation(self) -> None: ...
    def ClearAllNodes(self) -> None: ...
    def ClosedLoopOff(self) -> None: ...
    def ClosedLoopOn(self) -> None: ...
    def ComputeInteractionState(self, X: int, Y: int, modified: int = 0) -> int: ...
    def DeleteActiveNode(self) -> int: ...
    def DeleteLastNode(self) -> int: ...
    def DeleteNthNode(self, n: int) -> int: ...
    def GetActiveNodeDisplayPosition(self, pos: MutableSequence[float]) -> int: ...
    def GetActiveNodeSelected(self) -> int: ...
    def GetActiveNodeWorldOrientation(self, orient: MutableSequence[float]) -> int: ...
    def GetActiveNodeWorldPosition(self, pos: MutableSequence[float]) -> int: ...
    def GetClosedLoop(self) -> int: ...
    def GetContourRepresentationAsPolyData(self) -> vtkmodules.vtkCommonDataModel.vtkPolyData: ...
    def GetCurrentOperation(self) -> int: ...
    def GetCurrentOperationMaxValue(self) -> int: ...
    def GetCurrentOperationMinValue(self) -> int: ...
    def GetIntermediatePointWorldPosition(self, n: int, idx: int, point: MutableSequence[float]) -> int: ...
    def GetLineInterpolator(self) -> vtkContourLineInterpolator: ...
    def GetNodePolyData(self, poly: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    def GetNthNodeDisplayPosition(self, n: int, pos: MutableSequence[float]) -> int: ...
    def GetNthNodeSelected(self, __a: int) -> int: ...
    def GetNthNodeSlope(self, idx: int, slope: MutableSequence[float]) -> int: ...
    def GetNthNodeWorldOrientation(self, n: int, orient: MutableSequence[float]) -> int: ...
    def GetNthNodeWorldPosition(self, n: int, pos: MutableSequence[float]) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetNumberOfIntermediatePoints(self, n: int) -> int: ...
    def GetNumberOfNodes(self) -> int: ...
    def GetPixelTolerance(self) -> int: ...
    def GetPixelToleranceMaxValue(self) -> int: ...
    def GetPixelToleranceMinValue(self) -> int: ...
    def GetPointPlacer(self) -> vtkPointPlacer: ...
    def GetShowSelectedNodes(self) -> int: ...
    def GetWorldTolerance(self) -> float: ...
    def GetWorldToleranceMaxValue(self) -> float: ...
    def GetWorldToleranceMinValue(self) -> float: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkContourRepresentation: ...
    def ReleaseGraphicsResources(self, w: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderOverlay(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkContourRepresentation: ...
    @overload
    def SetActiveNodeToDisplayPosition(self, pos: MutableSequence[float]) -> int: ...
    @overload
    def SetActiveNodeToDisplayPosition(self, pos: MutableSequence[int]) -> int: ...
    @overload
    def SetActiveNodeToDisplayPosition(self, X: int, Y: int) -> int: ...
    @overload
    def SetActiveNodeToWorldPosition(self, pos: MutableSequence[float]) -> int: ...
    @overload
    def SetActiveNodeToWorldPosition(self, pos: MutableSequence[float], orient: MutableSequence[float]) -> int: ...
    def SetClosedLoop(self, val: int) -> None: ...
    def SetCurrentOperation(self, _arg: int) -> None: ...
    def SetCurrentOperationToInactive(self) -> None: ...
    def SetCurrentOperationToScale(self) -> None: ...
    def SetCurrentOperationToShift(self) -> None: ...
    def SetCurrentOperationToTranslate(self) -> None: ...
    def SetLineInterpolator(self, __a: vtkContourLineInterpolator) -> None: ...
    @overload
    def SetNthNodeDisplayPosition(self, n: int, X: int, Y: int) -> int: ...
    @overload
    def SetNthNodeDisplayPosition(self, n: int, pos: MutableSequence[int]) -> int: ...
    @overload
    def SetNthNodeDisplayPosition(self, n: int, pos: MutableSequence[float]) -> int: ...
    def SetNthNodeSelected(self, __a: int) -> int: ...
    @overload
    def SetNthNodeWorldPosition(self, n: int, pos: MutableSequence[float]) -> int: ...
    @overload
    def SetNthNodeWorldPosition(self, n: int, pos: MutableSequence[float], orient: MutableSequence[float]) -> int: ...
    def SetPixelTolerance(self, _arg: int) -> None: ...
    def SetPointPlacer(self, __a: vtkPointPlacer) -> None: ...
    def SetRebuildLocator(self, _arg: bool) -> None: ...
    def SetShowSelectedNodes(self, __a: int) -> None: ...
    def SetWorldTolerance(self, _arg: float) -> None: ...
    def ShowSelectedNodesOff(self) -> None: ...
    def ShowSelectedNodesOn(self) -> None: ...
    def StartWidgetInteraction(self, e: MutableSequence[float]) -> None: ...
    def ToggleActiveNodeSelected(self) -> int: ...
    def WidgetInteraction(self, e: MutableSequence[float]) -> None: ...

class vtkContourRepresentationInternals:
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, __a: vtkContourRepresentationInternals) -> None: ...
    def ClearNodes(self) -> None: ...

class vtkContourRepresentationNode:
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, __a: vtkContourRepresentationNode) -> None: ...

class vtkContourRepresentationPoint:
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, __a: vtkContourRepresentationPoint) -> None: ...

class vtkContourWidget(vtkAbstractWidget):
    Define: int
    Manipulate: int
    Start: int
    def AllowNodePickingOff(self) -> None: ...
    def AllowNodePickingOn(self) -> None: ...
    def CloseLoop(self) -> None: ...
    def ContinuousDrawOff(self) -> None: ...
    def ContinuousDrawOn(self) -> None: ...
    def CreateDefaultRepresentation(self) -> None: ...
    def FollowCursorOff(self) -> None: ...
    def FollowCursorOn(self) -> None: ...
    def GetAllowNodePicking(self) -> int: ...
    def GetContinuousDraw(self) -> int: ...
    def GetContourRepresentation(self) -> vtkContourRepresentation: ...
    def GetFollowCursor(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetWidgetState(self) -> int: ...
    @overload
    def Initialize(
        self, poly: vtkmodules.vtkCommonDataModel.vtkPolyData, state: int = 1, idList: vtkmodules.vtkCommonCore.vtkIdList = ...
    ) -> None: ...
    @overload
    def Initialize(self) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkContourWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkContourWidget: ...
    def SetAllowNodePicking(self, __a: int) -> None: ...
    def SetContinuousDraw(self, _arg: int) -> None: ...
    def SetEnabled(self, __a: int) -> None: ...
    def SetFollowCursor(self, _arg: int) -> None: ...
    def SetRepresentation(self, r: vtkContourRepresentation) -> None: ...
    def SetWidgetState(self, _arg: int) -> None: ...

class vtkCoordinateFrameRepresentation(vtkWidgetRepresentation):
    class InteractionStateType(int): ...
    ModifyingLockerXVector: InteractionStateType
    ModifyingLockerYVector: InteractionStateType
    ModifyingLockerZVector: InteractionStateType
    Moving: InteractionStateType
    MovingOrigin: InteractionStateType
    Outside: InteractionStateType
    RotatingXVector: InteractionStateType
    RotatingYVector: InteractionStateType
    RotatingZVector: InteractionStateType
    def BuildRepresentation(self) -> None: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def EndWidgetInteraction(self, newEventPos: MutableSequence[float]) -> None: ...
    def GetActors(self, pc: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetInteractionStateMaxValue(self) -> int: ...
    def GetInteractionStateMinValue(self) -> int: ...
    def GetLengthFactor(self) -> float: ...
    def GetLengthFactorMaxValue(self) -> float: ...
    def GetLengthFactorMinValue(self) -> float: ...
    def GetLockNormalToCamera(self) -> int: ...
    def GetLockedAxis(self) -> int: ...
    def GetLockedXVectorProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetLockedYVectorProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetLockedZVectorProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetOrigin(self) -> Tuple[float, float, float]: ...
    def GetOriginProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetPickCameraFocalInfo(self) -> bool: ...
    def GetRepresentationState(self) -> int: ...
    def GetSelectedLockedXVectorProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedLockedYVectorProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedLockedZVectorProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedOriginProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedUnlockedXVectorProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedUnlockedYVectorProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedUnlockedZVectorProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedXVectorProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedYVectorProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedZVectorProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetUnlockedXVectorProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetUnlockedYVectorProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetUnlockedZVectorProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetXVectorNormal(self) -> Tuple[float, float, float]: ...
    def GetXVectorProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetYVectorNormal(self) -> Tuple[float, float, float]: ...
    def GetYVectorProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetZVectorNormal(self) -> Tuple[float, float, float]: ...
    def GetZVectorProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    def IsTranslationConstrained(self) -> bool: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def LockNormalToCameraOff(self) -> None: ...
    def LockNormalToCameraOn(self) -> None: ...
    def NewInstance(self) -> vtkCoordinateFrameRepresentation: ...
    def PickCameraFocalInfoOff(self) -> None: ...
    def PickCameraFocalInfoOn(self) -> None: ...
    def PickDirectionPoint(self, X: int, Y: int, snapToMeshPoint: bool = False) -> bool: ...
    def PickNormal(self, X: int, Y: int, snapToMeshPoint: bool = False) -> bool: ...
    def PickOrigin(self, X: int, Y: int, snapToMeshPoint: bool = False) -> bool: ...
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def Reset(self) -> None: ...
    def ResetAxes(self) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkCoordinateFrameRepresentation: ...
    @overload
    def SetDirection(self, x: float, y: float, z: float) -> None: ...
    @overload
    def SetDirection(self, d: MutableSequence[float]) -> None: ...
    def SetInteractionState(self, _arg: int) -> None: ...
    def SetLengthFactor(self, _arg: float) -> None: ...
    def SetLockNormalToCamera(self, __a: int) -> None: ...
    def SetLockedAxis(self, axis: int) -> None: ...
    @overload
    def SetNormal(self, x: float, y: float, z: float) -> None: ...
    @overload
    def SetNormal(self, n: MutableSequence[float]) -> None: ...
    def SetNormalToCamera(self) -> None: ...
    @overload
    def SetOrigin(self, x: float, y: float, z: float) -> None: ...
    @overload
    def SetOrigin(self, x: MutableSequence[float]) -> None: ...
    def SetPickCameraFocalInfo(self, _arg: bool) -> None: ...
    def SetRepresentationState(self, __a: int) -> None: ...
    def SetTranslationAxisOff(self) -> None: ...
    @overload
    def SetXAxisVector(self, v: Sequence[float]) -> None: ...
    @overload
    def SetXAxisVector(self, x: float, y: float, z: float) -> None: ...
    def SetXTranslationAxisOn(self) -> None: ...
    @overload
    def SetYAxisVector(self, v: Sequence[float]) -> None: ...
    @overload
    def SetYAxisVector(self, x: float, y: float, z: float) -> None: ...
    def SetYTranslationAxisOn(self) -> None: ...
    @overload
    def SetZAxisVector(self, v: Sequence[float]) -> None: ...
    @overload
    def SetZAxisVector(self, x: float, y: float, z: float) -> None: ...
    def SetZTranslationAxisOn(self) -> None: ...
    def StartWidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...
    def UpdatePlacement(self) -> None: ...
    def WidgetInteraction(self, newEventPos: MutableSequence[float]) -> None: ...

class vtkCoordinateFrameWidget(vtkAbstractWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetCoordinateFrameRepresentation(self) -> vtkCoordinateFrameRepresentation: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkCoordinateFrameWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkCoordinateFrameWidget: ...
    def SetEnabled(self, enabling: int) -> None: ...
    def SetRepresentation(self, rep: vtkCoordinateFrameRepresentation) -> None: ...

class vtkDijkstraImageContourLineInterpolator(vtkContourLineInterpolator):
    def GetCostImage(self) -> vtkmodules.vtkCommonDataModel.vtkImageData: ...
    def GetDijkstraImageGeodesicPath(self) -> vtkmodules.vtkFiltersModeling.vtkDijkstraImageGeodesicPath: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def InterpolateLine(
        self, ren: vtkmodules.vtkRenderingCore.vtkRenderer, rep: vtkContourRepresentation, idx1: int, idx2: int
    ) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkDijkstraImageContourLineInterpolator: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkDijkstraImageContourLineInterpolator: ...
    def SetCostImage(self, __a: vtkmodules.vtkCommonDataModel.vtkImageData) -> None: ...

class vtkDisplaySizedImplicitPlaneRepresentation(vtkWidgetRepresentation):
    class InteractionStateType(int): ...
    Moving: InteractionStateType
    MovingOrigin: InteractionStateType
    MovingOutline: InteractionStateType
    Outside: InteractionStateType
    Pushing: InteractionStateType
    ResizeDiskRadius: InteractionStateType
    Rotating: InteractionStateType
    Scaling: InteractionStateType
    def BuildRepresentation(self) -> None: ...
    def BumpPlane(self, dir: int, factor: float) -> None: ...
    def ComplexInteraction(
        self,
        iren: vtkmodules.vtkRenderingCore.vtkRenderWindowInteractor,
        widget: vtkAbstractWidget,
        event: int,
        calldata: Pointer,
    ) -> None: ...
    def ComputeComplexInteractionState(
        self,
        iren: vtkmodules.vtkRenderingCore.vtkRenderWindowInteractor,
        widget: vtkAbstractWidget,
        event: int,
        calldata: Pointer,
        modify: int = 0,
    ) -> int: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def ConstrainMaximumSizeToWidgetBoundsOff(self) -> None: ...
    def ConstrainMaximumSizeToWidgetBoundsOn(self) -> None: ...
    def ConstrainToWidgetBoundsOff(self) -> None: ...
    def ConstrainToWidgetBoundsOn(self) -> None: ...
    def DrawIntersectionEdgesOff(self) -> None: ...
    def DrawIntersectionEdgesOn(self) -> None: ...
    def DrawOutlineOff(self) -> None: ...
    def DrawOutlineOn(self) -> None: ...
    def DrawPlaneOff(self) -> None: ...
    def DrawPlaneOn(self) -> None: ...
    def EndComplexInteraction(
        self,
        iren: vtkmodules.vtkRenderingCore.vtkRenderWindowInteractor,
        widget: vtkAbstractWidget,
        event: int,
        calldata: Pointer,
    ) -> None: ...
    def EndWidgetInteraction(self, newEventPos: MutableSequence[float]) -> None: ...
    def GetActors(self, pc: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetAlwaysSnapToNearestAxis(self) -> bool: ...
    def GetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetBumpDistance(self) -> float: ...
    def GetBumpDistanceMaxValue(self) -> float: ...
    def GetBumpDistanceMinValue(self) -> float: ...
    def GetConstrainMaximumSizeToWidgetBounds(self) -> int: ...
    def GetConstrainToWidgetBounds(self) -> int: ...
    def GetDrawIntersectionEdges(self) -> int: ...
    def GetDrawOutline(self) -> int: ...
    def GetDrawPlane(self) -> int: ...
    def GetEdgesProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetInteractionStateMaxValue(self) -> int: ...
    def GetInteractionStateMinValue(self) -> int: ...
    def GetIntersectionEdgesProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetLockNormalToCamera(self) -> int: ...
    @overload
    def GetNormal(self) -> Tuple[float, float, float]: ...
    @overload
    def GetNormal(self, xyz: MutableSequence[float]) -> None: ...
    def GetNormalProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetNormalToXAxis(self) -> int: ...
    def GetNormalToYAxis(self) -> int: ...
    def GetNormalToZAxis(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    @overload
    def GetOrigin(self) -> Tuple[float, float, float]: ...
    @overload
    def GetOrigin(self, xyz: MutableSequence[float]) -> None: ...
    def GetOutlineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetOutlineTranslation(self) -> int: ...
    def GetOutsideBounds(self) -> int: ...
    def GetPickCameraFocalInfo(self) -> bool: ...
    def GetPlane(self, plane: vtkmodules.vtkCommonDataModel.vtkPlane) -> None: ...
    def GetPlaneProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetPolyData(self, pd: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    def GetPolyDataAlgorithm(self) -> vtkmodules.vtkCommonExecutionModel.vtkPolyDataAlgorithm: ...
    def GetRadiusMultiplier(self) -> float: ...
    def GetRadiusMultiplierMaxValue(self) -> float: ...
    def GetRadiusMultiplierMinValue(self) -> float: ...
    def GetRepresentationState(self) -> int: ...
    def GetScaleEnabled(self) -> int: ...
    def GetSelectedEdgesProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedNormalProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedOutlineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedPlaneProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedSphereProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSnapToAxes(self) -> bool: ...
    def GetSphereProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetUnderlyingPlane(self) -> vtkmodules.vtkCommonDataModel.vtkPlane: ...
    def GetWidgetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    def IsTranslationConstrained(self) -> bool: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def LockNormalToCameraOff(self) -> None: ...
    def LockNormalToCameraOn(self) -> None: ...
    def NewInstance(self) -> vtkDisplaySizedImplicitPlaneRepresentation: ...
    def NormalToXAxisOff(self) -> None: ...
    def NormalToXAxisOn(self) -> None: ...
    def NormalToYAxisOff(self) -> None: ...
    def NormalToYAxisOn(self) -> None: ...
    def NormalToZAxisOff(self) -> None: ...
    def NormalToZAxisOn(self) -> None: ...
    def OutlineTranslationOff(self) -> None: ...
    def OutlineTranslationOn(self) -> None: ...
    def OutsideBoundsOff(self) -> None: ...
    def OutsideBoundsOn(self) -> None: ...
    def PickCameraFocalInfoOff(self) -> None: ...
    def PickCameraFocalInfoOn(self) -> None: ...
    def PickNormal(self, X: int, Y: int, snapToMeshPoint: bool = False) -> bool: ...
    def PickOrigin(self, X: int, Y: int, snapToMeshPoint: bool = False) -> bool: ...
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    def PushPlane(self, distance: float) -> None: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkDisplaySizedImplicitPlaneRepresentation: ...
    def ScaleEnabledOff(self) -> None: ...
    def ScaleEnabledOn(self) -> None: ...
    def SetAlwaysSnapToNearestAxis(self, snap: bool) -> None: ...
    def SetBumpDistance(self, _arg: float) -> None: ...
    def SetConstrainMaximumSizeToWidgetBounds(self, _arg: int) -> None: ...
    def SetConstrainToWidgetBounds(self, _arg: int) -> None: ...
    def SetDrawIntersectionEdges(self, intersectionEdges: int) -> None: ...
    def SetDrawOutline(self, outline: int) -> None: ...
    def SetDrawPlane(self, plane: int) -> None: ...
    def SetInteractionState(self, _arg: int) -> None: ...
    def SetLockNormalToCamera(self, __a: int) -> None: ...
    @overload
    def SetNormal(self, x: float, y: float, z: float) -> None: ...
    @overload
    def SetNormal(self, n: MutableSequence[float]) -> None: ...
    def SetNormalToCamera(self) -> None: ...
    def SetNormalToXAxis(self, __a: int) -> None: ...
    def SetNormalToYAxis(self, __a: int) -> None: ...
    def SetNormalToZAxis(self, __a: int) -> None: ...
    @overload
    def SetOrigin(self, x: float, y: float, z: float) -> None: ...
    @overload
    def SetOrigin(self, x: MutableSequence[float]) -> None: ...
    def SetOutlineTranslation(self, _arg: int) -> None: ...
    def SetOutsideBounds(self, _arg: int) -> None: ...
    def SetPickCameraFocalInfo(self, _arg: bool) -> None: ...
    def SetPlane(self, plane: vtkmodules.vtkCommonDataModel.vtkPlane) -> None: ...
    def SetRadiusMultiplier(self, radiusMultiplier: float) -> None: ...
    def SetRepresentationState(self, __a: int) -> None: ...
    def SetScaleEnabled(self, _arg: int) -> None: ...
    @overload
    def SetSelectedWidgetColor(self, __a: float, __b: float, __c: float) -> None: ...
    @overload
    def SetSelectedWidgetColor(self, c: MutableSequence[float]) -> None: ...
    def SetSnapToAxes(self, _arg: bool) -> None: ...
    def SetTranslationAxisOff(self) -> None: ...
    @overload
    def SetUnselectedWidgetColor(self, __a: float, __b: float, __c: float) -> None: ...
    @overload
    def SetUnselectedWidgetColor(self, c: MutableSequence[float]) -> None: ...
    @overload
    def SetWidgetBounds(self, _arg1: float, _arg2: float, _arg3: float, _arg4: float, _arg5: float, _arg6: float) -> None: ...
    @overload
    def SetWidgetBounds(self, _arg: Sequence[float]) -> None: ...
    def SetXTranslationAxisOn(self) -> None: ...
    def SetYTranslationAxisOn(self) -> None: ...
    def SetZTranslationAxisOn(self) -> None: ...
    def SnapToAxesOff(self) -> None: ...
    def SnapToAxesOn(self) -> None: ...
    def StartComplexInteraction(
        self,
        iren: vtkmodules.vtkRenderingCore.vtkRenderWindowInteractor,
        widget: vtkAbstractWidget,
        event: int,
        calldata: Pointer,
    ) -> None: ...
    def StartWidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...
    def UpdatePlacement(self) -> None: ...
    def WidgetInteraction(self, newEventPos: MutableSequence[float]) -> None: ...

class vtkDisplaySizedImplicitPlaneWidget(vtkAbstractWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetDisplaySizedImplicitPlaneRepresentation(self) -> vtkDisplaySizedImplicitPlaneRepresentation: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkDisplaySizedImplicitPlaneWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkDisplaySizedImplicitPlaneWidget: ...
    def SetEnabled(self, enabling: int) -> None: ...
    def SetLockNormalToCamera(self, lock: int) -> None: ...
    def SetRepresentation(self, rep: vtkDisplaySizedImplicitPlaneRepresentation) -> None: ...

class vtkDistanceRepresentation(vtkWidgetRepresentation):
    NearP1: int
    NearP2: int
    Outside: int
    def BuildRepresentation(self) -> None: ...
    def ComplexInteraction(
        self,
        iren: vtkmodules.vtkRenderingCore.vtkRenderWindowInteractor,
        widget: vtkAbstractWidget,
        event: int,
        calldata: Pointer,
    ) -> None: ...
    def ComputeComplexInteractionState(
        self,
        iren: vtkmodules.vtkRenderingCore.vtkRenderWindowInteractor,
        widget: vtkAbstractWidget,
        event: int,
        calldata: Pointer,
        modify: int = 0,
    ) -> int: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def GetDistance(self) -> float: ...
    def GetLabelFormat(self) -> str: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetNumberOfRulerTicks(self) -> int: ...
    def GetNumberOfRulerTicksMaxValue(self) -> int: ...
    def GetNumberOfRulerTicksMinValue(self) -> int: ...
    def GetPoint1DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetPoint1Representation(self) -> vtkHandleRepresentation: ...
    @overload
    def GetPoint1WorldPosition(self, pos: MutableSequence[float]) -> None: ...
    @overload
    def GetPoint1WorldPosition(self) -> Tuple[float, float, float]: ...
    def GetPoint2DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetPoint2Representation(self) -> vtkHandleRepresentation: ...
    @overload
    def GetPoint2WorldPosition(self, pos: MutableSequence[float]) -> None: ...
    @overload
    def GetPoint2WorldPosition(self) -> Tuple[float, float, float]: ...
    def GetRulerDistance(self) -> float: ...
    def GetRulerDistanceMaxValue(self) -> float: ...
    def GetRulerDistanceMinValue(self) -> float: ...
    def GetRulerMode(self) -> int: ...
    def GetScale(self) -> float: ...
    def GetTolerance(self) -> int: ...
    def GetToleranceMaxValue(self) -> int: ...
    def GetToleranceMinValue(self) -> int: ...
    def InstantiateHandleRepresentation(self) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkDistanceRepresentation: ...
    def RulerModeOff(self) -> None: ...
    def RulerModeOn(self) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkDistanceRepresentation: ...
    def SetHandleRepresentation(self, handle: vtkHandleRepresentation) -> None: ...
    def SetLabelFormat(self, _arg: str) -> None: ...
    def SetNumberOfRulerTicks(self, _arg: int) -> None: ...
    def SetPoint1DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetPoint1WorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetPoint2DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetPoint2WorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetRulerDistance(self, _arg: float) -> None: ...
    def SetRulerMode(self, _arg: int) -> None: ...
    def SetScale(self, _arg: float) -> None: ...
    def SetTolerance(self, _arg: int) -> None: ...
    def StartComplexInteraction(
        self,
        iren: vtkmodules.vtkRenderingCore.vtkRenderWindowInteractor,
        widget: vtkAbstractWidget,
        event: int,
        calldata: Pointer,
    ) -> None: ...
    def StartWidgetInteraction(self, e: MutableSequence[float]) -> None: ...
    def WidgetInteraction(self, e: MutableSequence[float]) -> None: ...

class vtkDistanceRepresentation2D(vtkDistanceRepresentation):
    def BuildRepresentation(self) -> None: ...
    def GetAxis(self) -> vtkmodules.vtkRenderingAnnotation.vtkAxisActor2D: ...
    def GetAxisProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty2D: ...
    def GetDistance(self) -> float: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPoint1DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    @overload
    def GetPoint1WorldPosition(self) -> Tuple[float, float, float]: ...
    @overload
    def GetPoint1WorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetPoint2DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    @overload
    def GetPoint2WorldPosition(self) -> Tuple[float, float, float]: ...
    @overload
    def GetPoint2WorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkDistanceRepresentation2D: ...
    def ReleaseGraphicsResources(self, w: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderOverlay(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkDistanceRepresentation2D: ...
    def SetPoint1DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetPoint1WorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetPoint2DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetPoint2WorldPosition(self, pos: MutableSequence[float]) -> None: ...

class vtkDistanceRepresentation3D(vtkDistanceRepresentation):
    def BuildRepresentation(self) -> None: ...
    def GetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetDistance(self) -> float: ...
    def GetGlyphActor(self) -> vtkmodules.vtkRenderingCore.vtkActor: ...
    def GetGlyphScale(self) -> float: ...
    def GetLabelActor(self) -> vtkmodules.vtkRenderingCore.vtkFollower: ...
    def GetLabelPosition(self) -> float: ...
    def GetLabelProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetLabelScale(self) -> Pointer: ...
    def GetLineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetMaximumNumberOfRulerTicks(self) -> int: ...
    def GetMaximumNumberOfRulerTicksMaxValue(self) -> int: ...
    def GetMaximumNumberOfRulerTicksMinValue(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPoint1DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    @overload
    def GetPoint1WorldPosition(self) -> Tuple[float, float, float]: ...
    @overload
    def GetPoint1WorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetPoint2DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    @overload
    def GetPoint2WorldPosition(self) -> Tuple[float, float, float]: ...
    @overload
    def GetPoint2WorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkDistanceRepresentation3D: ...
    def ReleaseGraphicsResources(self, w: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkDistanceRepresentation3D: ...
    def SetGlyphScale(self, scale: float) -> None: ...
    def SetLabelActor(self, __a: vtkmodules.vtkRenderingCore.vtkFollower) -> None: ...
    def SetLabelPosition(self, labelPosition: float) -> None: ...
    @overload
    def SetLabelScale(self, x: float, y: float, z: float) -> None: ...
    @overload
    def SetLabelScale(self, scale: MutableSequence[float]) -> None: ...
    def SetMaximumNumberOfRulerTicks(self, _arg: int) -> None: ...
    def SetPoint1DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetPoint1WorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetPoint2DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetPoint2WorldPosition(self, pos: MutableSequence[float]) -> None: ...

class vtkDistanceWidget(vtkAbstractWidget):
    Define: int
    Manipulate: int
    Start: int
    def CreateDefaultRepresentation(self) -> None: ...
    def GetDistanceRepresentation(self) -> vtkDistanceRepresentation: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetWidgetState(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkDistanceWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkDistanceWidget: ...
    def SetEnabled(self, __a: int) -> None: ...
    def SetProcessEvents(self, __a: int) -> None: ...
    def SetRepresentation(self, r: vtkDistanceRepresentation) -> None: ...
    def SetWidgetStateToManipulate(self) -> None: ...
    def SetWidgetStateToStart(self) -> None: ...

class vtkTensorProbeRepresentation(vtkWidgetRepresentation):
    def BuildRepresentation(self) -> None: ...
    def GetActors(self, __a: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetProbeCellId(self) -> int: ...
    def GetProbePosition(self) -> Tuple[float, float, float]: ...
    def Initialize(self) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def Move(self, motionVector: MutableSequence[float]) -> int: ...
    def NewInstance(self) -> vtkTensorProbeRepresentation: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkTensorProbeRepresentation: ...
    def SelectProbe(self, pos: MutableSequence[int]) -> int: ...
    def SetProbeCellId(self, _arg: int) -> None: ...
    @overload
    def SetProbePosition(self, _arg1: float, _arg2: float, _arg3: float) -> None: ...
    @overload
    def SetProbePosition(self, _arg: Sequence[float]) -> None: ...
    def SetTrajectory(self, __a: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...

class vtkEllipsoidTensorProbeRepresentation(vtkTensorProbeRepresentation):
    def BuildRepresentation(self) -> None: ...
    def GetActors(self, __a: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkEllipsoidTensorProbeRepresentation: ...
    def RegisterPickers(self) -> None: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkEllipsoidTensorProbeRepresentation: ...
    def SelectProbe(self, pos: MutableSequence[int]) -> int: ...

class vtkEqualizerContextItem(vtkmodules.vtkRenderingContext2D.vtkContextItem):
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPoints(self) -> str: ...
    def Hit(self, mouse: vtkmodules.vtkRenderingContext2D.vtkContextMouseEvent) -> bool: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def MouseButtonPressEvent(self, mouse: vtkmodules.vtkRenderingContext2D.vtkContextMouseEvent) -> bool: ...
    def MouseButtonReleaseEvent(self, mouse: vtkmodules.vtkRenderingContext2D.vtkContextMouseEvent) -> bool: ...
    def MouseEnterEvent(self, mouse: vtkmodules.vtkRenderingContext2D.vtkContextMouseEvent) -> bool: ...
    def MouseLeaveEvent(self, mouse: vtkmodules.vtkRenderingContext2D.vtkContextMouseEvent) -> bool: ...
    def MouseMoveEvent(self, mouse: vtkmodules.vtkRenderingContext2D.vtkContextMouseEvent) -> bool: ...
    def NewInstance(self) -> vtkEqualizerContextItem: ...
    def Paint(self, painter: vtkmodules.vtkRenderingContext2D.vtkContext2D) -> bool: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkEqualizerContextItem: ...
    def SetPoints(self, points: str) -> None: ...

class vtkEvent(vtkmodules.vtkCommonCore.vtkObject):
    class EventModifiers(int): ...
    AltModifier: EventModifiers
    AnyModifier: EventModifiers
    ControlModifier: EventModifiers
    NoModifier: EventModifiers
    ShiftModifier: EventModifiers
    def GetEventId(self) -> int: ...
    def GetKeyCode(self) -> str: ...
    def GetKeySym(self) -> str: ...
    @overload
    def GetModifier(self) -> int: ...
    @overload
    @staticmethod
    def GetModifier(__a: vtkmodules.vtkRenderingCore.vtkRenderWindowInteractor) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetRepeatCount(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkEvent: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkEvent: ...
    def SetEventId(self, _arg: int) -> None: ...
    def SetKeyCode(self, _arg: str) -> None: ...
    def SetKeySym(self, _arg: str) -> None: ...
    def SetModifier(self, _arg: int) -> None: ...
    def SetRepeatCount(self, _arg: int) -> None: ...

class vtkFinitePlaneRepresentation(vtkWidgetRepresentation):
    class InteractionStateType(int): ...
    ModifyV1: vtkmodules.vtkGeovisCore.InteractionStateType
    ModifyV2: vtkmodules.vtkGeovisCore.InteractionStateType
    MoveOrigin: vtkmodules.vtkGeovisCore.InteractionStateType
    Moving: vtkmodules.vtkGeovisCore.InteractionStateType
    Outside: vtkmodules.vtkGeovisCore.InteractionStateType
    Pushing: vtkmodules.vtkGeovisCore.InteractionStateType
    Rotating: vtkmodules.vtkGeovisCore.InteractionStateType
    def BuildRepresentation(self) -> None: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def DrawPlaneOff(self) -> None: ...
    def DrawPlaneOn(self) -> None: ...
    def GetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetDrawPlane(self) -> bool: ...
    def GetInteractionStateMaxValue(self) -> int: ...
    def GetInteractionStateMinValue(self) -> int: ...
    def GetNormal(self) -> Tuple[float, float, float]: ...
    def GetNormalProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetOrigin(self) -> Tuple[float, float, float]: ...
    def GetPlaneProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetPolyData(self, pd: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    def GetRepresentationState(self) -> int: ...
    def GetSelectedHandleProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedNormalProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedPlaneProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetTubing(self) -> bool: ...
    def GetV1(self) -> Tuple[float, float]: ...
    def GetV1HandleProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetV2(self) -> Tuple[float, float]: ...
    def GetV2HandleProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def HandlesOff(self) -> None: ...
    def HandlesOn(self) -> None: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def MovePoint1(self, p1: MutableSequence[float], p2: MutableSequence[float]) -> None: ...
    def MovePoint2(self, p1: MutableSequence[float], p2: MutableSequence[float]) -> None: ...
    def NewInstance(self) -> vtkFinitePlaneRepresentation: ...
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    def Push(self, p1: MutableSequence[float], p2: MutableSequence[float]) -> None: ...
    def RegisterPickers(self) -> None: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def Rotate(
        self, X: int, Y: int, p1: MutableSequence[float], p2: MutableSequence[float], vpn: MutableSequence[float]
    ) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkFinitePlaneRepresentation: ...
    def SetDrawPlane(self, plane: bool) -> None: ...
    def SetHandles(self, handles: bool) -> None: ...
    def SetInteractionState(self, _arg: int) -> None: ...
    @overload
    def SetNormal(self, x: float, y: float, z: float) -> None: ...
    @overload
    def SetNormal(self, n: MutableSequence[float]) -> None: ...
    @overload
    def SetOrigin(self, x: float, y: float, z: float) -> None: ...
    @overload
    def SetOrigin(self, x: MutableSequence[float]) -> None: ...
    def SetRepresentationState(self, __a: int) -> None: ...
    def SetTubing(self, _arg: bool) -> None: ...
    @overload
    def SetV1(self, x: float, y: float) -> None: ...
    @overload
    def SetV1(self, x: MutableSequence[float]) -> None: ...
    @overload
    def SetV2(self, x: float, y: float) -> None: ...
    @overload
    def SetV2(self, x: MutableSequence[float]) -> None: ...
    def StartWidgetInteraction(self, e: MutableSequence[float]) -> None: ...
    def TranslateOrigin(self, p1: MutableSequence[float], p2: MutableSequence[float]) -> None: ...
    def TubingOff(self) -> None: ...
    def TubingOn(self) -> None: ...
    def WidgetInteraction(self, e: MutableSequence[float]) -> None: ...

class vtkFinitePlaneWidget(vtkAbstractWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkFinitePlaneWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkFinitePlaneWidget: ...
    def SetRepresentation(self, r: vtkFinitePlaneRepresentation) -> None: ...

class vtkPolygonalHandleRepresentation3D(vtkAbstractPolygonalHandleRepresentation3D):
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetOffset(self) -> Tuple[float, float, float]: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkPolygonalHandleRepresentation3D: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkPolygonalHandleRepresentation3D: ...
    @overload
    def SetOffset(self, _arg1: float, _arg2: float, _arg3: float) -> None: ...
    @overload
    def SetOffset(self, _arg: Sequence[float]) -> None: ...
    def SetWorldPosition(self, p: MutableSequence[float]) -> None: ...

class vtkFixedSizeHandleRepresentation3D(vtkPolygonalHandleRepresentation3D):
    def GetHandleSizeInPixels(self) -> float: ...
    def GetHandleSizeToleranceInPixels(self) -> float: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetSphereSource(self) -> vtkmodules.vtkFiltersSources.vtkSphereSource: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkFixedSizeHandleRepresentation3D: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkFixedSizeHandleRepresentation3D: ...
    def SetHandleSizeInPixels(self, _arg: float) -> None: ...
    def SetHandleSizeToleranceInPixels(self, _arg: float) -> None: ...

class vtkFocalPlaneContourRepresentation(vtkContourRepresentation):
    def GetIntermediatePointDisplayPosition(self, n: int, idx: int, point: MutableSequence[float]) -> int: ...
    def GetIntermediatePointWorldPosition(self, n: int, idx: int, point: MutableSequence[float]) -> int: ...
    def GetNthNodeDisplayPosition(self, n: int, pos: MutableSequence[float]) -> int: ...
    def GetNthNodeWorldPosition(self, n: int, pos: MutableSequence[float]) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkFocalPlaneContourRepresentation: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkFocalPlaneContourRepresentation: ...
    def UpdateContour(self) -> int: ...
    def UpdateContourWorldPositionsBasedOnDisplayPositions(self) -> None: ...
    def UpdateLines(self, index: int) -> None: ...

class vtkFocalPlanePointPlacer(vtkPointPlacer):
    @overload
    def ComputeWorldPosition(
        self,
        ren: vtkmodules.vtkRenderingCore.vtkRenderer,
        displayPos: MutableSequence[float],
        worldPos: MutableSequence[float],
        worldOrient: MutableSequence[float],
    ) -> int: ...
    @overload
    def ComputeWorldPosition(
        self,
        ren: vtkmodules.vtkRenderingCore.vtkRenderer,
        displayPos: MutableSequence[float],
        refWorldPos: MutableSequence[float],
        worldPos: MutableSequence[float],
        worldOrient: MutableSequence[float],
    ) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetOffset(self) -> float: ...
    def GetPointBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkFocalPlanePointPlacer: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkFocalPlanePointPlacer: ...
    def SetOffset(self, _arg: float) -> None: ...
    @overload
    def SetPointBounds(self, _arg1: float, _arg2: float, _arg3: float, _arg4: float, _arg5: float, _arg6: float) -> None: ...
    @overload
    def SetPointBounds(self, _arg: Sequence[float]) -> None: ...
    @overload
    def ValidateWorldPosition(self, worldPos: MutableSequence[float]) -> int: ...
    @overload
    def ValidateWorldPosition(self, worldPos: MutableSequence[float], worldOrient: MutableSequence[float]) -> int: ...

class vtkHandleWidget(vtkAbstractWidget):
    class WidgetStateType(int): ...
    Active: vtkmodules.vtkRenderingVR.WidgetStateType
    Inactive: vtkmodules.vtkRenderingVR.WidgetStateType
    Start: vtkmodules.vtkRenderingVR.WidgetStateType
    def AllowHandleResizeOff(self) -> None: ...
    def AllowHandleResizeOn(self) -> None: ...
    def CreateDefaultRepresentation(self) -> None: ...
    def EnableAxisConstraintOff(self) -> None: ...
    def EnableAxisConstraintOn(self) -> None: ...
    def EnableTranslationOff(self) -> None: ...
    def EnableTranslationOn(self) -> None: ...
    def GetAllowHandleResize(self) -> int: ...
    def GetEnableAxisConstraint(self) -> int: ...
    def GetEnableTranslation(self) -> int: ...
    def GetHandleRepresentation(self) -> vtkHandleRepresentation: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetShowInactive(self) -> int: ...
    def GetWidgetState(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkHandleWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkHandleWidget: ...
    def SetAllowHandleResize(self, _arg: int) -> None: ...
    def SetEnableAxisConstraint(self, _arg: int) -> None: ...
    def SetEnableTranslation(self, _arg: int) -> None: ...
    def SetEnabled(self, enabling: int) -> None: ...
    def SetRepresentation(self, r: vtkHandleRepresentation) -> None: ...
    def SetShowInactive(self, _arg: int) -> None: ...
    def ShowInactiveOff(self) -> None: ...
    def ShowInactiveOn(self) -> None: ...

class vtkImageActorPointPlacer(vtkPointPlacer):
    @overload
    def ComputeWorldPosition(
        self,
        ren: vtkmodules.vtkRenderingCore.vtkRenderer,
        displayPos: MutableSequence[float],
        worldPos: MutableSequence[float],
        worldOrient: MutableSequence[float],
    ) -> int: ...
    @overload
    def ComputeWorldPosition(
        self,
        ren: vtkmodules.vtkRenderingCore.vtkRenderer,
        displayPos: MutableSequence[float],
        refWorldPos: MutableSequence[float],
        worldPos: MutableSequence[float],
        worldOrient: MutableSequence[float],
    ) -> int: ...
    def GetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetImageActor(self) -> vtkmodules.vtkRenderingCore.vtkImageActor: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkImageActorPointPlacer: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkImageActorPointPlacer: ...
    @overload
    def SetBounds(self, _arg1: float, _arg2: float, _arg3: float, _arg4: float, _arg5: float, _arg6: float) -> None: ...
    @overload
    def SetBounds(self, _arg: Sequence[float]) -> None: ...
    def SetImageActor(self, __a: vtkmodules.vtkRenderingCore.vtkImageActor) -> None: ...
    def SetWorldTolerance(self, tol: float) -> None: ...
    def UpdateInternalState(self) -> int: ...
    def UpdateWorldPosition(
        self, ren: vtkmodules.vtkRenderingCore.vtkRenderer, worldPos: MutableSequence[float], worldOrient: MutableSequence[float]
    ) -> int: ...
    @overload
    def ValidateWorldPosition(self, worldPos: MutableSequence[float]) -> int: ...
    @overload
    def ValidateWorldPosition(self, worldPos: MutableSequence[float], worldOrient: MutableSequence[float]) -> int: ...

class vtkImageCroppingRegionsWidget(vtk3DWidget):
    class WidgetEventIds(int): ...
    CroppingPlanesPositionChangedEvent: WidgetEventIds
    SLICE_ORIENTATION_XY: int
    SLICE_ORIENTATION_XZ: int
    SLICE_ORIENTATION_YZ: int
    def GetCroppingRegionFlags(self) -> int: ...
    @overload
    def GetLine1Color(self) -> Pointer: ...
    @overload
    def GetLine1Color(self, rgb: MutableSequence[float]) -> None: ...
    @overload
    def GetLine2Color(self) -> Pointer: ...
    @overload
    def GetLine2Color(self, rgb: MutableSequence[float]) -> None: ...
    @overload
    def GetLine3Color(self) -> Pointer: ...
    @overload
    def GetLine3Color(self, rgb: MutableSequence[float]) -> None: ...
    @overload
    def GetLine4Color(self) -> Pointer: ...
    @overload
    def GetLine4Color(self, rgb: MutableSequence[float]) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPlanePositions(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetSlice(self) -> int: ...
    def GetSliceOrientation(self) -> int: ...
    def GetVolumeMapper(self) -> vtkmodules.vtkRenderingVolume.vtkVolumeMapper: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def MoveHorizontalLine(self) -> None: ...
    def MoveIntersectingLines(self) -> None: ...
    def MoveVerticalLine(self) -> None: ...
    def NewInstance(self) -> vtkImageCroppingRegionsWidget: ...
    def OnButtonPress(self) -> None: ...
    def OnButtonRelease(self) -> None: ...
    def OnMouseMove(self) -> None: ...
    @overload
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    @overload
    def PlaceWidget(self) -> None: ...
    @overload
    def PlaceWidget(self, xmin: float, xmax: float, ymin: float, ymax: float, zmin: float, zmax: float) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkImageCroppingRegionsWidget: ...
    def SetCroppingRegionFlags(self, flags: int) -> None: ...
    def SetEnabled(self, enabling: int) -> None: ...
    @overload
    def SetLine1Color(self, r: float, g: float, b: float) -> None: ...
    @overload
    def SetLine1Color(self, rgb: MutableSequence[float]) -> None: ...
    @overload
    def SetLine2Color(self, r: float, g: float, b: float) -> None: ...
    @overload
    def SetLine2Color(self, rgb: MutableSequence[float]) -> None: ...
    @overload
    def SetLine3Color(self, r: float, g: float, b: float) -> None: ...
    @overload
    def SetLine3Color(self, rgb: MutableSequence[float]) -> None: ...
    @overload
    def SetLine4Color(self, r: float, g: float, b: float) -> None: ...
    @overload
    def SetLine4Color(self, rgb: MutableSequence[float]) -> None: ...
    @overload
    def SetPlanePositions(self, pos: MutableSequence[float]) -> None: ...
    @overload
    def SetPlanePositions(self, xMin: float, xMax: float, yMin: float, yMax: float, zMin: float, zMax: float) -> None: ...
    def SetSlice(self, num: int) -> None: ...
    def SetSliceOrientation(self, orientation: int) -> None: ...
    def SetSliceOrientationToXY(self) -> None: ...
    def SetSliceOrientationToXZ(self) -> None: ...
    def SetSliceOrientationToYZ(self) -> None: ...
    def SetVolumeMapper(self, mapper: vtkmodules.vtkRenderingVolume.vtkVolumeMapper) -> None: ...
    def UpdateAccordingToInput(self) -> None: ...
    def UpdateCursorIcon(self) -> None: ...

class vtkImageOrthoPlanes(vtkmodules.vtkCommonCore.vtkObject):
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPlane(self, i: int) -> vtkImagePlaneWidget: ...
    def GetTransform(self) -> vtkmodules.vtkCommonTransforms.vtkTransform: ...
    def HandlePlaneEvent(self, imagePlaneWidget: vtkImagePlaneWidget) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkImageOrthoPlanes: ...
    def ResetPlanes(self) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkImageOrthoPlanes: ...
    def SetPlane(self, i: int, imagePlaneWidget: vtkImagePlaneWidget) -> None: ...

class vtkPolyDataSourceWidget(vtk3DWidget):
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPolyDataAlgorithm(self) -> vtkmodules.vtkCommonExecutionModel.vtkPolyDataAlgorithm: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkPolyDataSourceWidget: ...
    @overload
    def PlaceWidget(self) -> None: ...
    @overload
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    @overload
    def PlaceWidget(self, xmin: float, xmax: float, ymin: float, ymax: float, zmin: float, zmax: float) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkPolyDataSourceWidget: ...
    def UpdatePlacement(self) -> None: ...

class vtkImagePlaneWidget(vtkPolyDataSourceWidget):
    VTK_CONTROL_MODIFIER: int
    VTK_CURSOR_ACTION: int
    VTK_NO_MODIFIER: int
    VTK_SHIFT_MODIFIER: int
    VTK_SLICE_MOTION_ACTION: int
    VTK_WINDOW_LEVEL_ACTION: int
    def DisplayTextOff(self) -> None: ...
    def DisplayTextOn(self) -> None: ...
    @overload
    def GetCenter(self) -> Tuple[float, float, float]: ...
    @overload
    def GetCenter(self, xyz: MutableSequence[float]) -> None: ...
    def GetColorMap(self) -> vtkmodules.vtkImagingCore.vtkImageMapToColors: ...
    def GetCurrentCursorPosition(self) -> Tuple[float, float, float]: ...
    def GetCurrentImageValue(self) -> float: ...
    def GetCursorData(self, xyzv: MutableSequence[float]) -> int: ...
    def GetCursorDataStatus(self) -> int: ...
    def GetCursorProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetDisplayText(self) -> int: ...
    def GetInteraction(self) -> int: ...
    def GetLeftButtonAction(self) -> int: ...
    def GetLeftButtonActionMaxValue(self) -> int: ...
    def GetLeftButtonActionMinValue(self) -> int: ...
    def GetLeftButtonAutoModifier(self) -> int: ...
    def GetLeftButtonAutoModifierMaxValue(self) -> int: ...
    def GetLeftButtonAutoModifierMinValue(self) -> int: ...
    def GetLevel(self) -> float: ...
    def GetLookupTable(self) -> vtkmodules.vtkCommonCore.vtkLookupTable: ...
    def GetMarginProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetMarginSizeX(self) -> float: ...
    def GetMarginSizeXMaxValue(self) -> float: ...
    def GetMarginSizeXMinValue(self) -> float: ...
    def GetMarginSizeY(self) -> float: ...
    def GetMarginSizeYMaxValue(self) -> float: ...
    def GetMarginSizeYMinValue(self) -> float: ...
    def GetMiddleButtonAction(self) -> int: ...
    def GetMiddleButtonActionMaxValue(self) -> int: ...
    def GetMiddleButtonActionMinValue(self) -> int: ...
    def GetMiddleButtonAutoModifier(self) -> int: ...
    def GetMiddleButtonAutoModifierMaxValue(self) -> int: ...
    def GetMiddleButtonAutoModifierMinValue(self) -> int: ...
    @overload
    def GetNormal(self) -> Tuple[float, float, float]: ...
    @overload
    def GetNormal(self, xyz: MutableSequence[float]) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    @overload
    def GetOrigin(self) -> Tuple[float, float, float]: ...
    @overload
    def GetOrigin(self, xyz: MutableSequence[float]) -> None: ...
    def GetPlaneOrientation(self) -> int: ...
    def GetPlaneProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    @overload
    def GetPoint1(self) -> Tuple[float, float, float]: ...
    @overload
    def GetPoint1(self, xyz: MutableSequence[float]) -> None: ...
    @overload
    def GetPoint2(self) -> Tuple[float, float, float]: ...
    @overload
    def GetPoint2(self, xyz: MutableSequence[float]) -> None: ...
    def GetPolyData(self, pd: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    def GetPolyDataAlgorithm(self) -> vtkmodules.vtkCommonExecutionModel.vtkPolyDataAlgorithm: ...
    def GetReslice(self) -> vtkmodules.vtkImagingCore.vtkImageReslice: ...
    def GetResliceAxes(self) -> vtkmodules.vtkCommonMath.vtkMatrix4x4: ...
    def GetResliceInterpolate(self) -> int: ...
    def GetResliceOutput(self) -> vtkmodules.vtkCommonDataModel.vtkImageData: ...
    def GetRestrictPlaneToVolume(self) -> int: ...
    def GetRightButtonAction(self) -> int: ...
    def GetRightButtonActionMaxValue(self) -> int: ...
    def GetRightButtonActionMinValue(self) -> int: ...
    def GetRightButtonAutoModifier(self) -> int: ...
    def GetRightButtonAutoModifierMaxValue(self) -> int: ...
    def GetRightButtonAutoModifierMinValue(self) -> int: ...
    def GetSelectedPlaneProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSliceIndex(self) -> int: ...
    def GetSlicePosition(self) -> float: ...
    def GetTextProperty(self) -> vtkmodules.vtkRenderingCore.vtkTextProperty: ...
    def GetTexture(self) -> vtkmodules.vtkRenderingCore.vtkTexture: ...
    def GetTextureInterpolate(self) -> int: ...
    def GetTexturePlaneProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetTextureVisibility(self) -> int: ...
    def GetUseContinuousCursor(self) -> int: ...
    def GetUserControlledLookupTable(self) -> int: ...
    def GetVector1(self, v1: MutableSequence[float]) -> None: ...
    def GetVector2(self, v2: MutableSequence[float]) -> None: ...
    def GetWindow(self) -> float: ...
    def GetWindowLevel(self, wl: MutableSequence[float]) -> None: ...
    def InteractionOff(self) -> None: ...
    def InteractionOn(self) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkImagePlaneWidget: ...
    @overload
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    @overload
    def PlaceWidget(self) -> None: ...
    @overload
    def PlaceWidget(self, xmin: float, xmax: float, ymin: float, ymax: float, zmin: float, zmax: float) -> None: ...
    def RestrictPlaneToVolumeOff(self) -> None: ...
    def RestrictPlaneToVolumeOn(self) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkImagePlaneWidget: ...
    def SetColorMap(self, __a: vtkmodules.vtkImagingCore.vtkImageMapToColors) -> None: ...
    def SetCursorProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...
    def SetDisplayText(self, _arg: int) -> None: ...
    def SetEnabled(self, __a: int) -> None: ...
    def SetInputConnection(self, aout: vtkmodules.vtkCommonExecutionModel.vtkAlgorithmOutput) -> None: ...
    def SetInteraction(self, interact: int) -> None: ...
    def SetLeftButtonAction(self, _arg: int) -> None: ...
    def SetLeftButtonAutoModifier(self, _arg: int) -> None: ...
    def SetLookupTable(self, __a: vtkmodules.vtkCommonCore.vtkLookupTable) -> None: ...
    def SetMarginProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...
    def SetMarginSizeX(self, _arg: float) -> None: ...
    def SetMarginSizeY(self, _arg: float) -> None: ...
    def SetMiddleButtonAction(self, _arg: int) -> None: ...
    def SetMiddleButtonAutoModifier(self, _arg: int) -> None: ...
    @overload
    def SetOrigin(self, x: float, y: float, z: float) -> None: ...
    @overload
    def SetOrigin(self, xyz: MutableSequence[float]) -> None: ...
    def SetPicker(self, __a: vtkmodules.vtkRenderingCore.vtkAbstractPropPicker) -> None: ...
    def SetPlaneOrientation(self, __a: int) -> None: ...
    def SetPlaneOrientationToXAxes(self) -> None: ...
    def SetPlaneOrientationToYAxes(self) -> None: ...
    def SetPlaneOrientationToZAxes(self) -> None: ...
    def SetPlaneProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...
    @overload
    def SetPoint1(self, x: float, y: float, z: float) -> None: ...
    @overload
    def SetPoint1(self, xyz: MutableSequence[float]) -> None: ...
    @overload
    def SetPoint2(self, x: float, y: float, z: float) -> None: ...
    @overload
    def SetPoint2(self, xyz: MutableSequence[float]) -> None: ...
    def SetResliceInterpolate(self, __a: int) -> None: ...
    def SetResliceInterpolateToCubic(self) -> None: ...
    def SetResliceInterpolateToLinear(self) -> None: ...
    def SetResliceInterpolateToNearestNeighbour(self) -> None: ...
    def SetRestrictPlaneToVolume(self, _arg: int) -> None: ...
    def SetRightButtonAction(self, _arg: int) -> None: ...
    def SetRightButtonAutoModifier(self, _arg: int) -> None: ...
    def SetSelectedPlaneProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...
    def SetSliceIndex(self, index: int) -> None: ...
    def SetSlicePosition(self, position: float) -> None: ...
    def SetTextProperty(self, tprop: vtkmodules.vtkRenderingCore.vtkTextProperty) -> None: ...
    def SetTextureInterpolate(self, _arg: int) -> None: ...
    def SetTexturePlaneProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...
    def SetTextureVisibility(self, __a: int) -> None: ...
    def SetUseContinuousCursor(self, _arg: int) -> None: ...
    def SetUserControlledLookupTable(self, _arg: int) -> None: ...
    def SetWindowLevel(self, window: float, level: float, copy: int = 0) -> None: ...
    def TextureInterpolateOff(self) -> None: ...
    def TextureInterpolateOn(self) -> None: ...
    def TextureVisibilityOff(self) -> None: ...
    def TextureVisibilityOn(self) -> None: ...
    def UpdatePlacement(self) -> None: ...
    def UseContinuousCursorOff(self) -> None: ...
    def UseContinuousCursorOn(self) -> None: ...
    def UserControlledLookupTableOff(self) -> None: ...
    def UserControlledLookupTableOn(self) -> None: ...

class vtkImageTracerWidget(vtk3DWidget):
    def AutoCloseOff(self) -> None: ...
    def AutoCloseOn(self) -> None: ...
    def GetAutoClose(self) -> int: ...
    def GetCaptureRadius(self) -> float: ...
    def GetGlyphSource(self) -> vtkmodules.vtkFiltersSources.vtkGlyphSource2D: ...
    def GetHandleLeftMouseButton(self) -> int: ...
    def GetHandleMiddleMouseButton(self) -> int: ...
    @overload
    def GetHandlePosition(self, handle: int, xyz: MutableSequence[float]) -> None: ...
    @overload
    def GetHandlePosition(self, handle: int) -> Tuple[float, float, float]: ...
    def GetHandleProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetHandleRightMouseButton(self) -> int: ...
    def GetImageSnapType(self) -> int: ...
    def GetImageSnapTypeMaxValue(self) -> int: ...
    def GetImageSnapTypeMinValue(self) -> int: ...
    def GetInteraction(self) -> int: ...
    def GetLineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetNumberOfHandles(self) -> int: ...
    def GetPath(self, pd: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    def GetProjectToPlane(self) -> int: ...
    def GetProjectionNormal(self) -> int: ...
    def GetProjectionNormalMaxValue(self) -> int: ...
    def GetProjectionNormalMinValue(self) -> int: ...
    def GetProjectionPosition(self) -> float: ...
    def GetSelectedHandleProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedLineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSnapToImage(self) -> int: ...
    def HandleLeftMouseButtonOff(self) -> None: ...
    def HandleLeftMouseButtonOn(self) -> None: ...
    def HandleMiddleMouseButtonOff(self) -> None: ...
    def HandleMiddleMouseButtonOn(self) -> None: ...
    def HandleRightMouseButtonOff(self) -> None: ...
    def HandleRightMouseButtonOn(self) -> None: ...
    def InitializeHandles(self, __a: vtkmodules.vtkCommonCore.vtkPoints) -> None: ...
    def InteractionOff(self) -> None: ...
    def InteractionOn(self) -> None: ...
    def IsA(self, type: str) -> int: ...
    def IsClosed(self) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkImageTracerWidget: ...
    @overload
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    @overload
    def PlaceWidget(self) -> None: ...
    @overload
    def PlaceWidget(self, xmin: float, xmax: float, ymin: float, ymax: float, zmin: float, zmax: float) -> None: ...
    def ProjectToPlaneOff(self) -> None: ...
    def ProjectToPlaneOn(self) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkImageTracerWidget: ...
    def SetAutoClose(self, _arg: int) -> None: ...
    def SetCaptureRadius(self, _arg: float) -> None: ...
    def SetEnabled(self, __a: int) -> None: ...
    def SetHandleLeftMouseButton(self, _arg: int) -> None: ...
    def SetHandleMiddleMouseButton(self, _arg: int) -> None: ...
    @overload
    def SetHandlePosition(self, handle: int, xyz: MutableSequence[float]) -> None: ...
    @overload
    def SetHandlePosition(self, handle: int, x: float, y: float, z: float) -> None: ...
    def SetHandleProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...
    def SetHandleRightMouseButton(self, _arg: int) -> None: ...
    def SetImageSnapType(self, _arg: int) -> None: ...
    def SetInteraction(self, interact: int) -> None: ...
    def SetLineProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...
    def SetProjectToPlane(self, _arg: int) -> None: ...
    def SetProjectionNormal(self, _arg: int) -> None: ...
    def SetProjectionNormalToXAxes(self) -> None: ...
    def SetProjectionNormalToYAxes(self) -> None: ...
    def SetProjectionNormalToZAxes(self) -> None: ...
    def SetProjectionPosition(self, position: float) -> None: ...
    def SetSelectedHandleProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...
    def SetSelectedLineProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...
    def SetSnapToImage(self, snap: int) -> None: ...
    def SetViewProp(self, prop: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...
    def SnapToImageOff(self) -> None: ...
    def SnapToImageOn(self) -> None: ...

class vtkImplicitCylinderRepresentation(vtkWidgetRepresentation):
    class InteractionStateType(int): ...
    AdjustingRadius: InteractionStateType
    Moving: InteractionStateType
    MovingCenter: InteractionStateType
    MovingOutline: InteractionStateType
    Outside: InteractionStateType
    RotatingAxis: InteractionStateType
    Scaling: InteractionStateType
    TranslatingCenter: InteractionStateType
    def AlongXAxisOff(self) -> None: ...
    def AlongXAxisOn(self) -> None: ...
    def AlongYAxisOff(self) -> None: ...
    def AlongYAxisOn(self) -> None: ...
    def AlongZAxisOff(self) -> None: ...
    def AlongZAxisOn(self) -> None: ...
    def BuildRepresentation(self) -> None: ...
    def BumpCylinder(self, dir: int, factor: float) -> None: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def ConstrainToWidgetBoundsOff(self) -> None: ...
    def ConstrainToWidgetBoundsOn(self) -> None: ...
    def DrawCylinderOff(self) -> None: ...
    def DrawCylinderOn(self) -> None: ...
    def EndWidgetInteraction(self, newEventPos: MutableSequence[float]) -> None: ...
    def GetActors(self, pc: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetAlongXAxis(self) -> int: ...
    def GetAlongYAxis(self) -> int: ...
    def GetAlongZAxis(self) -> int: ...
    @overload
    def GetAxis(self) -> Tuple[float, float, float]: ...
    @overload
    def GetAxis(self, a: MutableSequence[float]) -> None: ...
    def GetAxisProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetBumpDistance(self) -> float: ...
    def GetBumpDistanceMaxValue(self) -> float: ...
    def GetBumpDistanceMinValue(self) -> float: ...
    @overload
    def GetCenter(self) -> Tuple[float, float, float]: ...
    @overload
    def GetCenter(self, xyz: MutableSequence[float]) -> None: ...
    def GetConstrainToWidgetBounds(self) -> int: ...
    def GetCylinder(self, cyl: vtkmodules.vtkCommonDataModel.vtkCylinder) -> None: ...
    def GetCylinderProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetDrawCylinder(self) -> int: ...
    def GetEdgesProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetInteractionStateMaxValue(self) -> int: ...
    def GetInteractionStateMinValue(self) -> int: ...
    def GetMaxRadius(self) -> float: ...
    def GetMaxRadiusMaxValue(self) -> float: ...
    def GetMaxRadiusMinValue(self) -> float: ...
    def GetMinRadius(self) -> float: ...
    def GetMinRadiusMaxValue(self) -> float: ...
    def GetMinRadiusMinValue(self) -> float: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetOutlineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetOutlineTranslation(self) -> int: ...
    def GetOutsideBounds(self) -> int: ...
    def GetPolyData(self, pd: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    def GetRadius(self) -> float: ...
    def GetRepresentationState(self) -> int: ...
    def GetResolution(self) -> int: ...
    def GetResolutionMaxValue(self) -> int: ...
    def GetResolutionMinValue(self) -> int: ...
    def GetScaleEnabled(self) -> int: ...
    def GetSelectedAxisProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedCylinderProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedOutlineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetTranslationAxis(self) -> int: ...
    def GetTranslationAxisMaxValue(self) -> int: ...
    def GetTranslationAxisMinValue(self) -> int: ...
    def GetTubing(self) -> int: ...
    def GetWidgetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    def IsTranslationConstrained(self) -> bool: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkImplicitCylinderRepresentation: ...
    def OutlineTranslationOff(self) -> None: ...
    def OutlineTranslationOn(self) -> None: ...
    def OutsideBoundsOff(self) -> None: ...
    def OutsideBoundsOn(self) -> None: ...
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    def PushCylinder(self, distance: float) -> None: ...
    def RegisterPickers(self) -> None: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkImplicitCylinderRepresentation: ...
    def ScaleEnabledOff(self) -> None: ...
    def ScaleEnabledOn(self) -> None: ...
    def SetAlongXAxis(self, __a: int) -> None: ...
    def SetAlongYAxis(self, __a: int) -> None: ...
    def SetAlongZAxis(self, __a: int) -> None: ...
    @overload
    def SetAxis(self, x: float, y: float, z: float) -> None: ...
    @overload
    def SetAxis(self, a: MutableSequence[float]) -> None: ...
    def SetBumpDistance(self, _arg: float) -> None: ...
    @overload
    def SetCenter(self, x: float, y: float, z: float) -> None: ...
    @overload
    def SetCenter(self, x: MutableSequence[float]) -> None: ...
    def SetConstrainToWidgetBounds(self, _arg: int) -> None: ...
    def SetDrawCylinder(self, drawCyl: int) -> None: ...
    @overload
    def SetEdgeColor(self, __a: vtkmodules.vtkCommonCore.vtkLookupTable) -> None: ...
    @overload
    def SetEdgeColor(self, __a: float, __b: float, __c: float) -> None: ...
    @overload
    def SetEdgeColor(self, c: MutableSequence[float]) -> None: ...
    def SetInteractionState(self, _arg: int) -> None: ...
    def SetMaxRadius(self, _arg: float) -> None: ...
    def SetMinRadius(self, _arg: float) -> None: ...
    def SetOutlineTranslation(self, _arg: int) -> None: ...
    def SetOutsideBounds(self, _arg: int) -> None: ...
    def SetRadius(self, r: float) -> None: ...
    def SetRepresentationState(self, __a: int) -> None: ...
    def SetResolution(self, _arg: int) -> None: ...
    def SetScaleEnabled(self, _arg: int) -> None: ...
    def SetTranslationAxis(self, _arg: int) -> None: ...
    def SetTranslationAxisOff(self) -> None: ...
    def SetTubing(self, _arg: int) -> None: ...
    @overload
    def SetWidgetBounds(self, _arg1: float, _arg2: float, _arg3: float, _arg4: float, _arg5: float, _arg6: float) -> None: ...
    @overload
    def SetWidgetBounds(self, _arg: Sequence[float]) -> None: ...
    def SetXTranslationAxisOn(self) -> None: ...
    def SetYTranslationAxisOn(self) -> None: ...
    def SetZTranslationAxisOn(self) -> None: ...
    def StartWidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...
    def TubingOff(self) -> None: ...
    def TubingOn(self) -> None: ...
    def UpdatePlacement(self) -> None: ...
    def WidgetInteraction(self, newEventPos: MutableSequence[float]) -> None: ...

class vtkImplicitCylinderWidget(vtkAbstractWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetCylinderRepresentation(self) -> vtkImplicitCylinderRepresentation: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkImplicitCylinderWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkImplicitCylinderWidget: ...
    def SetRepresentation(self, rep: vtkImplicitCylinderRepresentation) -> None: ...

class vtkImplicitPlaneRepresentation(vtkWidgetRepresentation):
    class InteractionStateType(int): ...
    Moving: InteractionStateType
    MovingOrigin: InteractionStateType
    MovingOutline: InteractionStateType
    Outside: InteractionStateType
    Pushing: InteractionStateType
    Rotating: InteractionStateType
    Scaling: InteractionStateType
    def BuildRepresentation(self) -> None: ...
    def BumpPlane(self, dir: int, factor: float) -> None: ...
    def ComplexInteraction(
        self,
        iren: vtkmodules.vtkRenderingCore.vtkRenderWindowInteractor,
        widget: vtkAbstractWidget,
        event: int,
        calldata: Pointer,
    ) -> None: ...
    def ComputeComplexInteractionState(
        self,
        iren: vtkmodules.vtkRenderingCore.vtkRenderWindowInteractor,
        widget: vtkAbstractWidget,
        event: int,
        calldata: Pointer,
        modify: int = 0,
    ) -> int: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def ConstrainToWidgetBoundsOff(self) -> None: ...
    def ConstrainToWidgetBoundsOn(self) -> None: ...
    def CropPlaneToBoundingBoxOff(self) -> None: ...
    def CropPlaneToBoundingBoxOn(self) -> None: ...
    def DrawOutlineOff(self) -> None: ...
    def DrawOutlineOn(self) -> None: ...
    def DrawPlaneOff(self) -> None: ...
    def DrawPlaneOn(self) -> None: ...
    def EndComplexInteraction(
        self,
        iren: vtkmodules.vtkRenderingCore.vtkRenderWindowInteractor,
        widget: vtkAbstractWidget,
        event: int,
        calldata: Pointer,
    ) -> None: ...
    def EndWidgetInteraction(self, newEventPos: MutableSequence[float]) -> None: ...
    def GetActors(self, pc: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetAlwaysSnapToNearestAxis(self) -> bool: ...
    def GetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetBumpDistance(self) -> float: ...
    def GetBumpDistanceMaxValue(self) -> float: ...
    def GetBumpDistanceMinValue(self) -> float: ...
    def GetConstrainToWidgetBounds(self) -> int: ...
    def GetCropPlaneToBoundingBox(self) -> bool: ...
    def GetDrawOutline(self) -> int: ...
    def GetDrawPlane(self) -> int: ...
    def GetEdgesProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetInteractionStateMaxValue(self) -> int: ...
    def GetInteractionStateMinValue(self) -> int: ...
    def GetLockNormalToCamera(self) -> int: ...
    @overload
    def GetNormal(self) -> Tuple[float, float, float]: ...
    @overload
    def GetNormal(self, xyz: MutableSequence[float]) -> None: ...
    def GetNormalProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetNormalToXAxis(self) -> int: ...
    def GetNormalToYAxis(self) -> int: ...
    def GetNormalToZAxis(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    @overload
    def GetOrigin(self) -> Tuple[float, float, float]: ...
    @overload
    def GetOrigin(self, xyz: MutableSequence[float]) -> None: ...
    def GetOutlineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetOutlineTranslation(self) -> int: ...
    def GetOutsideBounds(self) -> int: ...
    def GetPlane(self, plane: vtkmodules.vtkCommonDataModel.vtkPlane) -> None: ...
    def GetPlaneProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetPolyData(self, pd: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    def GetPolyDataAlgorithm(self) -> vtkmodules.vtkCommonExecutionModel.vtkPolyDataAlgorithm: ...
    def GetRepresentationState(self) -> int: ...
    def GetScaleEnabled(self) -> int: ...
    def GetSelectedNormalProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedOutlineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedPlaneProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSnapToAxes(self) -> bool: ...
    def GetTubing(self) -> int: ...
    def GetUnderlyingPlane(self) -> vtkmodules.vtkCommonDataModel.vtkPlane: ...
    def GetWidgetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    def IsTranslationConstrained(self) -> bool: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def LockNormalToCameraOff(self) -> None: ...
    def LockNormalToCameraOn(self) -> None: ...
    def NewInstance(self) -> vtkImplicitPlaneRepresentation: ...
    def NormalToXAxisOff(self) -> None: ...
    def NormalToXAxisOn(self) -> None: ...
    def NormalToYAxisOff(self) -> None: ...
    def NormalToYAxisOn(self) -> None: ...
    def NormalToZAxisOff(self) -> None: ...
    def NormalToZAxisOn(self) -> None: ...
    def OutlineTranslationOff(self) -> None: ...
    def OutlineTranslationOn(self) -> None: ...
    def OutsideBoundsOff(self) -> None: ...
    def OutsideBoundsOn(self) -> None: ...
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    def PushPlane(self, distance: float) -> None: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkImplicitPlaneRepresentation: ...
    def ScaleEnabledOff(self) -> None: ...
    def ScaleEnabledOn(self) -> None: ...
    def SetAlwaysSnapToNearestAxis(self, snap: bool) -> None: ...
    def SetBumpDistance(self, _arg: float) -> None: ...
    def SetConstrainToWidgetBounds(self, _arg: int) -> None: ...
    def SetCropPlaneToBoundingBox(self, __a: bool) -> None: ...
    def SetDrawOutline(self, plane: int) -> None: ...
    def SetDrawPlane(self, plane: int) -> None: ...
    @overload
    def SetEdgeColor(self, __a: vtkmodules.vtkCommonCore.vtkLookupTable) -> None: ...
    @overload
    def SetEdgeColor(self, __a: float, __b: float, __c: float) -> None: ...
    @overload
    def SetEdgeColor(self, c: MutableSequence[float]) -> None: ...
    def SetInteractionState(self, _arg: int) -> None: ...
    def SetLockNormalToCamera(self, __a: int) -> None: ...
    @overload
    def SetNormal(self, x: float, y: float, z: float) -> None: ...
    @overload
    def SetNormal(self, n: MutableSequence[float]) -> None: ...
    def SetNormalToCamera(self) -> None: ...
    def SetNormalToXAxis(self, __a: int) -> None: ...
    def SetNormalToYAxis(self, __a: int) -> None: ...
    def SetNormalToZAxis(self, __a: int) -> None: ...
    @overload
    def SetOrigin(self, x: float, y: float, z: float) -> None: ...
    @overload
    def SetOrigin(self, x: MutableSequence[float]) -> None: ...
    def SetOutlineTranslation(self, _arg: int) -> None: ...
    def SetOutsideBounds(self, _arg: int) -> None: ...
    def SetPlane(self, plane: vtkmodules.vtkCommonDataModel.vtkPlane) -> None: ...
    def SetRepresentationState(self, __a: int) -> None: ...
    def SetScaleEnabled(self, _arg: int) -> None: ...
    def SetSnapToAxes(self, _arg: bool) -> None: ...
    def SetTranslationAxisOff(self) -> None: ...
    def SetTubing(self, _arg: int) -> None: ...
    @overload
    def SetWidgetBounds(self, _arg1: float, _arg2: float, _arg3: float, _arg4: float, _arg5: float, _arg6: float) -> None: ...
    @overload
    def SetWidgetBounds(self, _arg: Sequence[float]) -> None: ...
    def SetXTranslationAxisOn(self) -> None: ...
    def SetYTranslationAxisOn(self) -> None: ...
    def SetZTranslationAxisOn(self) -> None: ...
    def StartComplexInteraction(
        self,
        iren: vtkmodules.vtkRenderingCore.vtkRenderWindowInteractor,
        widget: vtkAbstractWidget,
        event: int,
        calldata: Pointer,
    ) -> None: ...
    def StartWidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...
    def TubingOff(self) -> None: ...
    def TubingOn(self) -> None: ...
    def UpdatePlacement(self) -> None: ...
    def WidgetInteraction(self, newEventPos: MutableSequence[float]) -> None: ...

class vtkImplicitImageRepresentation(vtkImplicitPlaneRepresentation):
    def BuildRepresentation(self) -> None: ...
    def GetColorMap(self) -> vtkmodules.vtkImagingCore.vtkImageMapToColors: ...
    def GetLookupTable(self) -> vtkmodules.vtkCommonCore.vtkLookupTable: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetReslice(self) -> vtkmodules.vtkImagingCore.vtkImageReslice: ...
    def GetResliceInterpolate(self) -> int: ...
    def GetTextureInterpolate(self) -> bool: ...
    def GetUserControlledLookupTable(self) -> bool: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkImplicitImageRepresentation: ...
    @overload
    def PlaceImage(self, img: vtkmodules.vtkCommonDataModel.vtkImageData) -> None: ...
    @overload
    def PlaceImage(self, aout: vtkmodules.vtkCommonExecutionModel.vtkAlgorithmOutput) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkImplicitImageRepresentation: ...
    def SetColorMap(self, __a: vtkmodules.vtkImagingCore.vtkImageMapToColors) -> None: ...
    def SetCropPlaneToBoundingBox(self, __a: bool) -> None: ...
    def SetLookupTable(self, __a: vtkmodules.vtkCommonCore.vtkLookupTable) -> None: ...
    def SetResliceInterpolate(self, __a: int) -> None: ...
    def SetResliceInterpolateToCubic(self) -> None: ...
    def SetResliceInterpolateToLinear(self) -> None: ...
    def SetResliceInterpolateToNearestNeighbour(self) -> None: ...
    def SetTextureInterpolate(self, _arg: bool) -> None: ...
    def SetUserControlledLookupTable(self, _arg: bool) -> None: ...
    def TextureInterpolateOff(self) -> None: ...
    def TextureInterpolateOn(self) -> None: ...
    def UserControlledLookupTableOff(self) -> None: ...
    def UserControlledLookupTableOn(self) -> None: ...

class vtkImplicitPlaneWidget(vtkPolyDataSourceWidget):
    def DrawPlaneOff(self) -> None: ...
    def DrawPlaneOn(self) -> None: ...
    def GetDiagonalRatio(self) -> float: ...
    def GetDiagonalRatioMaxValue(self) -> float: ...
    def GetDiagonalRatioMinValue(self) -> float: ...
    def GetDrawPlane(self) -> int: ...
    def GetEdgesProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    @overload
    def GetNormal(self) -> Tuple[float, float, float]: ...
    @overload
    def GetNormal(self, xyz: MutableSequence[float]) -> None: ...
    def GetNormalProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetNormalToXAxis(self) -> int: ...
    def GetNormalToYAxis(self) -> int: ...
    def GetNormalToZAxis(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    @overload
    def GetOrigin(self) -> Tuple[float, float, float]: ...
    @overload
    def GetOrigin(self, xyz: MutableSequence[float]) -> None: ...
    def GetOriginTranslation(self) -> int: ...
    def GetOutlineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetOutlineTranslation(self) -> int: ...
    def GetOutsideBounds(self) -> int: ...
    def GetPlane(self, plane: vtkmodules.vtkCommonDataModel.vtkPlane) -> None: ...
    def GetPlaneProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetPolyData(self, pd: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    def GetPolyDataAlgorithm(self) -> vtkmodules.vtkCommonExecutionModel.vtkPolyDataAlgorithm: ...
    def GetScaleEnabled(self) -> int: ...
    def GetSelectedNormalProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedOutlineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedPlaneProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetTubing(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkImplicitPlaneWidget: ...
    def NormalToXAxisOff(self) -> None: ...
    def NormalToXAxisOn(self) -> None: ...
    def NormalToYAxisOff(self) -> None: ...
    def NormalToYAxisOn(self) -> None: ...
    def NormalToZAxisOff(self) -> None: ...
    def NormalToZAxisOn(self) -> None: ...
    def OriginTranslationOff(self) -> None: ...
    def OriginTranslationOn(self) -> None: ...
    def OutlineTranslationOff(self) -> None: ...
    def OutlineTranslationOn(self) -> None: ...
    def OutsideBoundsOff(self) -> None: ...
    def OutsideBoundsOn(self) -> None: ...
    @overload
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    @overload
    def PlaceWidget(self) -> None: ...
    @overload
    def PlaceWidget(self, xmin: float, xmax: float, ymin: float, ymax: float, zmin: float, zmax: float) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkImplicitPlaneWidget: ...
    def ScaleEnabledOff(self) -> None: ...
    def ScaleEnabledOn(self) -> None: ...
    def SetDiagonalRatio(self, _arg: float) -> None: ...
    def SetDrawPlane(self, plane: int) -> None: ...
    def SetEnabled(self, __a: int) -> None: ...
    @overload
    def SetNormal(self, x: float, y: float, z: float) -> None: ...
    @overload
    def SetNormal(self, n: MutableSequence[float]) -> None: ...
    def SetNormalToXAxis(self, __a: int) -> None: ...
    def SetNormalToYAxis(self, __a: int) -> None: ...
    def SetNormalToZAxis(self, __a: int) -> None: ...
    @overload
    def SetOrigin(self, x: float, y: float, z: float) -> None: ...
    @overload
    def SetOrigin(self, x: MutableSequence[float]) -> None: ...
    def SetOriginTranslation(self, _arg: int) -> None: ...
    def SetOutlineTranslation(self, _arg: int) -> None: ...
    def SetOutsideBounds(self, _arg: int) -> None: ...
    def SetScaleEnabled(self, _arg: int) -> None: ...
    def SetTubing(self, _arg: int) -> None: ...
    def SizeHandles(self) -> None: ...
    def TubingOff(self) -> None: ...
    def TubingOn(self) -> None: ...
    def UpdatePlacement(self) -> None: ...

class vtkImplicitPlaneWidget2(vtkAbstractWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetImplicitPlaneRepresentation(self) -> vtkImplicitPlaneRepresentation: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkImplicitPlaneWidget2: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkImplicitPlaneWidget2: ...
    def SetEnabled(self, enabling: int) -> None: ...
    def SetLockNormalToCamera(self, lock: int) -> None: ...
    def SetRepresentation(self, rep: vtkImplicitPlaneRepresentation) -> None: ...

class vtkLightRepresentation(vtkWidgetRepresentation):
    MovingFocalPoint: int
    MovingLight: int
    MovingPositionalFocalPoint: int
    Outside: int
    ScalingConeAngle: int
    def BuildRepresentation(self) -> None: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def GetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetConeAngle(self) -> float: ...
    def GetFocalPoint(self) -> Tuple[float, float, float]: ...
    def GetInteractionStateMaxValue(self) -> int: ...
    def GetInteractionStateMinValue(self) -> int: ...
    def GetLightColor(self) -> Tuple[float, float, float]: ...
    def GetLightPosition(self) -> Tuple[float, float, float]: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPositional(self) -> bool: ...
    def GetProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkLightRepresentation: ...
    def PositionalOff(self) -> None: ...
    def PositionalOn(self) -> None: ...
    def ReleaseGraphicsResources(self, w: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkLightRepresentation: ...
    def SetConeAngle(self, angle: float) -> None: ...
    def SetFocalPoint(self, pos: MutableSequence[float]) -> None: ...
    def SetInteractionState(self, _arg: int) -> None: ...
    def SetLightColor(self, color: MutableSequence[float]) -> None: ...
    def SetLightPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetPositional(self, _arg: bool) -> None: ...
    def StartWidgetInteraction(self, eventPosition: MutableSequence[float]) -> None: ...
    def WidgetInteraction(self, eventPosition: MutableSequence[float]) -> None: ...

class vtkLightWidget(vtkAbstractWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetLightRepresentation(self) -> vtkLightRepresentation: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkLightWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkLightWidget: ...
    def SetRepresentation(self, r: vtkLightRepresentation) -> None: ...

class vtkLineRepresentation(vtkWidgetRepresentation):
    OnLine: int
    OnP1: int
    OnP2: int
    Outside: int
    RestrictNone: int
    RestrictToX: int
    RestrictToY: int
    RestrictToZ: int
    Scaling: int
    TranslatingP1: int
    TranslatingP2: int
    def BuildRepresentation(self) -> None: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def DirectionalLineOff(self) -> None: ...
    def DirectionalLineOn(self) -> None: ...
    def DistanceAnnotationVisibilityOff(self) -> None: ...
    def DistanceAnnotationVisibilityOn(self) -> None: ...
    def GetActors(self, pc: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetDirectionalLine(self) -> bool: ...
    def GetDistance(self) -> float: ...
    def GetDistanceAnnotationFormat(self) -> str: ...
    def GetDistanceAnnotationProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetDistanceAnnotationScale(self) -> Tuple[float, float, float]: ...
    def GetDistanceAnnotationVisibility(self) -> int: ...
    def GetEndPoint2Property(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetEndPointProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetInteractionStateMaxValue(self) -> int: ...
    def GetInteractionStateMinValue(self) -> int: ...
    def GetLineHandleRepresentation(self) -> vtkPointHandleRepresentation3D: ...
    def GetLineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetMTime(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    @overload
    def GetPoint1DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    @overload
    def GetPoint1DisplayPosition(self) -> Tuple[float, float, float]: ...
    def GetPoint1Representation(self) -> vtkPointHandleRepresentation3D: ...
    @overload
    def GetPoint1WorldPosition(self, pos: MutableSequence[float]) -> None: ...
    @overload
    def GetPoint1WorldPosition(self) -> Tuple[float, float, float]: ...
    @overload
    def GetPoint2DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    @overload
    def GetPoint2DisplayPosition(self) -> Tuple[float, float, float]: ...
    def GetPoint2Representation(self) -> vtkPointHandleRepresentation3D: ...
    @overload
    def GetPoint2WorldPosition(self, pos: MutableSequence[float]) -> None: ...
    @overload
    def GetPoint2WorldPosition(self) -> Tuple[float, float, float]: ...
    def GetPolyData(self, pd: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    def GetRepresentationState(self) -> int: ...
    def GetResolution(self) -> int: ...
    def GetSelectedEndPoint2Property(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedEndPointProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedLineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetTextActor(self) -> vtkmodules.vtkRenderingCore.vtkFollower: ...
    def GetTolerance(self) -> int: ...
    def GetToleranceMaxValue(self) -> int: ...
    def GetToleranceMinValue(self) -> int: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def InstantiateHandleRepresentation(self) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkLineRepresentation: ...
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkLineRepresentation: ...
    def SetDirectionalLine(self, val: bool) -> None: ...
    def SetDistanceAnnotationFormat(self, _arg: str) -> None: ...
    @overload
    def SetDistanceAnnotationScale(self, x: float, y: float, z: float) -> None: ...
    @overload
    def SetDistanceAnnotationScale(self, scale: MutableSequence[float]) -> None: ...
    def SetDistanceAnnotationVisibility(self, _arg: int) -> None: ...
    def SetHandleRepresentation(self, handle: vtkPointHandleRepresentation3D) -> None: ...
    def SetInteractionState(self, _arg: int) -> None: ...
    def SetLineColor(self, r: float, g: float, b: float) -> None: ...
    def SetPoint1DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetPoint1WorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetPoint2DisplayPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetPoint2WorldPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetRenderer(self, ren: vtkmodules.vtkRenderingCore.vtkRenderer) -> None: ...
    def SetRepresentationState(self, __a: int) -> None: ...
    def SetResolution(self, res: int) -> None: ...
    def SetTolerance(self, _arg: int) -> None: ...
    def StartWidgetInteraction(self, e: MutableSequence[float]) -> None: ...
    def WidgetInteraction(self, e: MutableSequence[float]) -> None: ...

class vtkLineWidget(vtk3DWidget):
    def ClampToBoundsOff(self) -> None: ...
    def ClampToBoundsOn(self) -> None: ...
    def GetAlign(self) -> int: ...
    def GetAlignMaxValue(self) -> int: ...
    def GetAlignMinValue(self) -> int: ...
    def GetClampToBounds(self) -> int: ...
    def GetHandleProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetLineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    @overload
    def GetPoint1(self) -> Tuple[float, float, float]: ...
    @overload
    def GetPoint1(self, xyz: MutableSequence[float]) -> None: ...
    @overload
    def GetPoint2(self) -> Tuple[float, float, float]: ...
    @overload
    def GetPoint2(self, xyz: MutableSequence[float]) -> None: ...
    def GetPolyData(self, pd: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    def GetResolution(self) -> int: ...
    def GetSelectedHandleProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedLineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkLineWidget: ...
    @overload
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    @overload
    def PlaceWidget(self) -> None: ...
    @overload
    def PlaceWidget(self, xmin: float, xmax: float, ymin: float, ymax: float, zmin: float, zmax: float) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkLineWidget: ...
    def SetAlign(self, _arg: int) -> None: ...
    def SetAlignToNone(self) -> None: ...
    def SetAlignToXAxis(self) -> None: ...
    def SetAlignToYAxis(self) -> None: ...
    def SetAlignToZAxis(self) -> None: ...
    def SetClampToBounds(self, _arg: int) -> None: ...
    def SetEnabled(self, __a: int) -> None: ...
    @overload
    def SetPoint1(self, x: float, y: float, z: float) -> None: ...
    @overload
    def SetPoint1(self, x: MutableSequence[float]) -> None: ...
    @overload
    def SetPoint2(self, x: float, y: float, z: float) -> None: ...
    @overload
    def SetPoint2(self, x: MutableSequence[float]) -> None: ...
    def SetResolution(self, r: int) -> None: ...

class vtkLineWidget2(vtkAbstractWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetLineRepresentation(self) -> vtkLineRepresentation: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkLineWidget2: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkLineWidget2: ...
    def SetEnabled(self, enabling: int) -> None: ...
    def SetProcessEvents(self, __a: int) -> None: ...
    def SetRepresentation(self, r: vtkLineRepresentation) -> None: ...

class vtkLinearContourLineInterpolator(vtkContourLineInterpolator):
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def InterpolateLine(
        self, ren: vtkmodules.vtkRenderingCore.vtkRenderer, rep: vtkContourRepresentation, idx1: int, idx2: int
    ) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkLinearContourLineInterpolator: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkLinearContourLineInterpolator: ...

class vtkLogoRepresentation(vtkBorderRepresentation):
    def BuildRepresentation(self) -> None: ...
    def GetActors2D(self, pc: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetImage(self) -> vtkmodules.vtkCommonDataModel.vtkImageData: ...
    def GetImageProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty2D: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkLogoRepresentation: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOverlay(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkLogoRepresentation: ...
    def SetImage(self, img: vtkmodules.vtkCommonDataModel.vtkImageData) -> None: ...
    def SetImageProperty(self, p: vtkmodules.vtkRenderingCore.vtkProperty2D) -> None: ...

class vtkLogoWidget(vtkBorderWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkLogoWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkLogoWidget: ...
    def SetRepresentation(self, r: vtkLogoRepresentation) -> None: ...

class vtkMagnifierRepresentation(vtkWidgetRepresentation):
    class InteractionStateType(int): ...
    Invisible: InteractionStateType
    Visible: InteractionStateType
    def AddViewProp(self, __a: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...
    def BorderOff(self) -> None: ...
    def BorderOn(self) -> None: ...
    def BuildRepresentation(self) -> None: ...
    def GetBorder(self) -> bool: ...
    def GetBorderProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty2D: ...
    def GetInteractionStateMaxValue(self) -> int: ...
    def GetInteractionStateMinValue(self) -> int: ...
    def GetMTime(self) -> int: ...
    def GetMagnificationFactor(self) -> float: ...
    def GetMagnificationFactorMaxValue(self) -> float: ...
    def GetMagnificationFactorMinValue(self) -> float: ...
    def GetMagnificationRenderer(self) -> vtkmodules.vtkRenderingCore.vtkRenderer: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetSize(self) -> Tuple[int, int]: ...
    def GetViewProps(self) -> vtkmodules.vtkRenderingCore.vtkPropCollection: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def HasViewProp(self, __a: vtkmodules.vtkRenderingCore.vtkProp) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkMagnifierRepresentation: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RemoveAllViewProps(self) -> None: ...
    def RemoveViewProp(self, __a: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...
    def RenderOpaqueGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderOverlay(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkMagnifierRepresentation: ...
    def SetBorder(self, _arg: bool) -> None: ...
    def SetInteractionState(self, _arg: int) -> None: ...
    def SetMagnificationFactor(self, _arg: float) -> None: ...
    def SetRenderer(self, ren: vtkmodules.vtkRenderingCore.vtkRenderer) -> None: ...
    @overload
    def SetSize(self, _arg1: int, _arg2: int) -> None: ...
    @overload
    def SetSize(self, _arg: Sequence[int]) -> None: ...
    def WidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...

class vtkMagnifierWidget(vtkAbstractWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetKeyPressDecreaseValue(self) -> str: ...
    def GetKeyPressIncreaseValue(self) -> str: ...
    def GetMagnifierRepresentation(self) -> vtkMagnifierRepresentation: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkMagnifierWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkMagnifierWidget: ...
    def SetEnabled(self, enabling: int) -> None: ...
    def SetKeyPressDecreaseValue(self, _arg: str) -> None: ...
    def SetKeyPressIncreaseValue(self, _arg: str) -> None: ...
    def SetRepresentation(self, r: vtkMagnifierRepresentation) -> None: ...

class vtkMeasurementCubeHandleRepresentation3D(vtkHandleRepresentation):
    def AdaptiveScalingOff(self) -> None: ...
    def AdaptiveScalingOn(self) -> None: ...
    def BuildRepresentation(self) -> None: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def DeepCopy(self, prop: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...
    def GetActors(self, __a: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetAdaptiveScaling(self) -> int: ...
    def GetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetHandle(self) -> vtkmodules.vtkCommonDataModel.vtkPolyData: ...
    def GetHandleVisibility(self) -> int: ...
    def GetLabelText(self) -> vtkmodules.vtkRenderingCore.vtkBillboardTextActor3D: ...
    def GetLabelTextInput(self) -> str: ...
    def GetLabelVisibility(self) -> int: ...
    def GetLengthUnit(self) -> str: ...
    def GetMaxRelativeCubeScreenArea(self) -> float: ...
    def GetMinRelativeCubeScreenArea(self) -> float: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetRescaleFactor(self) -> float: ...
    def GetRescaleFactorMaxValue(self) -> float: ...
    def GetRescaleFactorMinValue(self) -> float: ...
    def GetSelectedLabelVisibility(self) -> int: ...
    def GetSelectedProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSideLength(self) -> float: ...
    def GetSmoothMotion(self) -> int: ...
    def GetTransform(self) -> vtkmodules.vtkCommonTransforms.vtkAbstractTransform: ...
    def HandleVisibilityOff(self) -> None: ...
    def HandleVisibilityOn(self) -> None: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def Highlight(self, highlight: int) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def LabelVisibilityOff(self) -> None: ...
    def LabelVisibilityOn(self) -> None: ...
    def NewInstance(self) -> vtkMeasurementCubeHandleRepresentation3D: ...
    def RegisterPickers(self) -> None: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkMeasurementCubeHandleRepresentation3D: ...
    def SelectedLabelVisibilityOff(self) -> None: ...
    def SelectedLabelVisibilityOn(self) -> None: ...
    def SetAdaptiveScaling(self, _arg: int) -> None: ...
    def SetDisplayPosition(self, p: MutableSequence[float]) -> None: ...
    def SetHandleVisibility(self, _arg: int) -> None: ...
    def SetLabelTextInput(self, label: str) -> None: ...
    def SetLabelVisibility(self, _arg: int) -> None: ...
    def SetLengthUnit(self, _arg: str) -> None: ...
    def SetMaxRelativeCubeScreenArea(self, __a: float) -> None: ...
    def SetMinRelativeCubeScreenArea(self, __a: float) -> None: ...
    def SetProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...
    def SetRescaleFactor(self, _arg: float) -> None: ...
    def SetSelectedLabelVisibility(self, _arg: int) -> None: ...
    def SetSelectedProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...
    def SetSideLength(self, __a: float) -> None: ...
    def SetSmoothMotion(self, _arg: int) -> None: ...
    def SetWorldPosition(self, p: MutableSequence[float]) -> None: ...
    def ShallowCopy(self, prop: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...
    def SmoothMotionOff(self) -> None: ...
    def SmoothMotionOn(self) -> None: ...
    def StartWidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...
    def WidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...

class vtkOrientationMarkerWidget(vtkmodules.vtkRenderingCore.vtkInteractorObserver):
    def EndInteraction(self) -> None: ...
    def ExecuteCameraUpdateEvent(self, o: vtkmodules.vtkCommonCore.vtkObject, event: int, calldata: Pointer) -> None: ...
    def GetInteractive(self) -> int: ...
    def GetMaxDimensionSize(self) -> int: ...
    def GetMinDimensionSize(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetOrientationMarker(self) -> vtkmodules.vtkRenderingCore.vtkProp: ...
    def GetOutlineColor(self) -> Tuple[float, float, float]: ...
    def GetShouldConstrainSize(self) -> int: ...
    def GetTolerance(self) -> int: ...
    def GetToleranceMaxValue(self) -> int: ...
    def GetToleranceMinValue(self) -> int: ...
    def GetViewport(self) -> Tuple[float, float, float, float]: ...
    def GetZoom(self) -> float: ...
    def GetZoomMaxValue(self) -> float: ...
    def GetZoomMinValue(self) -> float: ...
    def InteractiveOff(self) -> None: ...
    def InteractiveOn(self) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def Modified(self) -> None: ...
    def NewInstance(self) -> vtkOrientationMarkerWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkOrientationMarkerWidget: ...
    def SetEnabled(self, __a: int) -> None: ...
    def SetInteractive(self, interact: int) -> None: ...
    def SetOrientationMarker(self, prop: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...
    def SetOutlineColor(self, r: float, g: float, b: float) -> None: ...
    def SetShouldConstrainSize(self, shouldConstrainSize: int) -> None: ...
    def SetSizeConstraintDimensionSizes(self, minDimensionSize: int, maxDimensionSize: int) -> bool: ...
    def SetTolerance(self, _arg: int) -> None: ...
    @overload
    def SetViewport(self, _arg1: float, _arg2: float, _arg3: float, _arg4: float) -> None: ...
    @overload
    def SetViewport(self, _arg: Sequence[float]) -> None: ...
    def SetZoom(self, _arg: float) -> None: ...

class vtkOrientedGlyphContourRepresentation(vtkContourRepresentation):
    def AlwaysOnTopOff(self) -> None: ...
    def AlwaysOnTopOn(self) -> None: ...
    def BuildRepresentation(self) -> None: ...
    def ComputeInteractionState(self, X: int, Y: int, modified: int = 0) -> int: ...
    def GetActiveCursorShape(self) -> vtkmodules.vtkCommonDataModel.vtkPolyData: ...
    def GetActiveProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetActors(self, __a: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetAlwaysOnTop(self) -> int: ...
    def GetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetContourRepresentationAsPolyData(self) -> vtkmodules.vtkCommonDataModel.vtkPolyData: ...
    def GetCursorShape(self) -> vtkmodules.vtkCommonDataModel.vtkPolyData: ...
    def GetLinesProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkOrientedGlyphContourRepresentation: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderOverlay(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkOrientedGlyphContourRepresentation: ...
    def SetActiveCursorShape(self, activeShape: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    def SetAlwaysOnTop(self, _arg: int) -> None: ...
    def SetCursorShape(self, cursorShape: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    def SetLineColor(self, r: float, g: float, b: float) -> None: ...
    def SetRenderer(self, ren: vtkmodules.vtkRenderingCore.vtkRenderer) -> None: ...
    def SetShowSelectedNodes(self, __a: int) -> None: ...
    def StartWidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...
    def WidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...

class vtkOrientedGlyphFocalPlaneContourRepresentation(vtkFocalPlaneContourRepresentation):
    def BuildRepresentation(self) -> None: ...
    def ComputeInteractionState(self, X: int, Y: int, modified: int = 0) -> int: ...
    def GetActiveCursorShape(self) -> vtkmodules.vtkCommonDataModel.vtkPolyData: ...
    def GetActiveProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty2D: ...
    def GetActors2D(self, __a: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetContourPlaneDirectionCosines(self, origin: Sequence[float]) -> vtkmodules.vtkCommonMath.vtkMatrix4x4: ...
    def GetContourRepresentationAsPolyData(self) -> vtkmodules.vtkCommonDataModel.vtkPolyData: ...
    def GetCursorShape(self) -> vtkmodules.vtkCommonDataModel.vtkPolyData: ...
    def GetLinesProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty2D: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty2D: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkOrientedGlyphFocalPlaneContourRepresentation: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderOverlay(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkOrientedGlyphFocalPlaneContourRepresentation: ...
    def SetActiveCursorShape(self, activeShape: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    def SetCursorShape(self, cursorShape: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    def SetRenderer(self, ren: vtkmodules.vtkRenderingCore.vtkRenderer) -> None: ...
    def StartWidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...
    def WidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...

class vtkOrientedPolygonalHandleRepresentation3D(vtkAbstractPolygonalHandleRepresentation3D):
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkOrientedPolygonalHandleRepresentation3D: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkOrientedPolygonalHandleRepresentation3D: ...

class vtkParallelopipedRepresentation(vtkWidgetRepresentation):
    class InteractionStateType(int): ...
    ChairMode: InteractionStateType
    Inside: InteractionStateType
    Outside: InteractionStateType
    RequestChairMode: InteractionStateType
    RequestResizeParallelopiped: InteractionStateType
    RequestResizeParallelopipedAlongAnAxis: InteractionStateType
    RequestRotateParallelopiped: InteractionStateType
    RequestScaleParallelopiped: InteractionStateType
    RequestTranslateParallelopiped: InteractionStateType
    ResizingParallelopiped: InteractionStateType
    ResizingParallelopipedAlongAnAxis: InteractionStateType
    RotatingParallelopiped: InteractionStateType
    ScalingParallelopiped: InteractionStateType
    TranslatingParallelopiped: InteractionStateType
    def BuildRepresentation(self) -> None: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def GetActors(self, pc: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetBoundingPlanes(self, pc: vtkmodules.vtkCommonDataModel.vtkPlaneCollection) -> None: ...
    def GetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetFaceProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetHandleProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetHandleRepresentation(self, index: int) -> vtkHandleRepresentation: ...
    def GetHoveredHandleProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetMinimumThickness(self) -> float: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetOutlineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetPolyData(self, pd: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    def GetSelectedFaceProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedHandleProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedOutlineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def HandlesOff(self) -> None: ...
    def HandlesOn(self) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkParallelopipedRepresentation: ...
    @overload
    def PlaceWidget(self, corners: MutableSequence[MutableSequence[float]]) -> None: ...
    @overload
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    def PositionHandles(self) -> None: ...
    def ReleaseGraphicsResources(self, w: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderOverlay(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkParallelopipedRepresentation: ...
    def Scale(self, X: int, Y: int) -> None: ...
    def SetHandleProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...
    def SetHandleRepresentation(self, handle: vtkHandleRepresentation) -> None: ...
    def SetHoveredHandleProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...
    def SetInteractionState(self, _arg: int) -> None: ...
    def SetMinimumThickness(self, _arg: float) -> None: ...
    def SetSelectedHandleProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...
    @overload
    def Translate(self, translation: MutableSequence[float]) -> None: ...
    @overload
    def Translate(self, X: int, Y: int) -> None: ...

class vtkParallelopipedWidget(vtkAbstractWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def EnableChairCreationOff(self) -> None: ...
    def EnableChairCreationOn(self) -> None: ...
    def GetEnableChairCreation(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetParallelopipedRepresentation(self) -> vtkParallelopipedRepresentation: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkParallelopipedWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkParallelopipedWidget: ...
    def SetEnableChairCreation(self, _arg: int) -> None: ...
    def SetEnabled(self, __a: int) -> None: ...
    def SetProcessEvents(self, __a: int) -> None: ...
    def SetRepresentation(self, r: vtkParallelopipedRepresentation) -> None: ...

class vtkPlaneWidget(vtkPolyDataSourceWidget):
    @overload
    def GetCenter(self) -> Tuple[float, float, float]: ...
    @overload
    def GetCenter(self, xyz: MutableSequence[float]) -> None: ...
    def GetHandleProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    @overload
    def GetNormal(self) -> Tuple[float, float, float]: ...
    @overload
    def GetNormal(self, xyz: MutableSequence[float]) -> None: ...
    def GetNormalToXAxis(self) -> int: ...
    def GetNormalToYAxis(self) -> int: ...
    def GetNormalToZAxis(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    @overload
    def GetOrigin(self) -> Tuple[float, float, float]: ...
    @overload
    def GetOrigin(self, xyz: MutableSequence[float]) -> None: ...
    def GetPlane(self, plane: vtkmodules.vtkCommonDataModel.vtkPlane) -> None: ...
    def GetPlaneProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    @overload
    def GetPoint1(self) -> Tuple[float, float, float]: ...
    @overload
    def GetPoint1(self, xyz: MutableSequence[float]) -> None: ...
    @overload
    def GetPoint2(self) -> Tuple[float, float, float]: ...
    @overload
    def GetPoint2(self, xyz: MutableSequence[float]) -> None: ...
    def GetPolyData(self, pd: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    def GetPolyDataAlgorithm(self) -> vtkmodules.vtkCommonExecutionModel.vtkPolyDataAlgorithm: ...
    def GetRepresentation(self) -> int: ...
    def GetRepresentationMaxValue(self) -> int: ...
    def GetRepresentationMinValue(self) -> int: ...
    def GetResolution(self) -> int: ...
    def GetSelectedHandleProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedPlaneProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkPlaneWidget: ...
    def NormalToXAxisOff(self) -> None: ...
    def NormalToXAxisOn(self) -> None: ...
    def NormalToYAxisOff(self) -> None: ...
    def NormalToYAxisOn(self) -> None: ...
    def NormalToZAxisOff(self) -> None: ...
    def NormalToZAxisOn(self) -> None: ...
    @overload
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    @overload
    def PlaceWidget(self) -> None: ...
    @overload
    def PlaceWidget(self, xmin: float, xmax: float, ymin: float, ymax: float, zmin: float, zmax: float) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkPlaneWidget: ...
    @overload
    def SetCenter(self, x: float, y: float, z: float) -> None: ...
    @overload
    def SetCenter(self, x: MutableSequence[float]) -> None: ...
    def SetEnabled(self, __a: int) -> None: ...
    @overload
    def SetNormal(self, x: float, y: float, z: float) -> None: ...
    @overload
    def SetNormal(self, x: MutableSequence[float]) -> None: ...
    def SetNormalToXAxis(self, _arg: int) -> None: ...
    def SetNormalToYAxis(self, _arg: int) -> None: ...
    def SetNormalToZAxis(self, _arg: int) -> None: ...
    @overload
    def SetOrigin(self, x: float, y: float, z: float) -> None: ...
    @overload
    def SetOrigin(self, x: MutableSequence[float]) -> None: ...
    def SetPlaneProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...
    @overload
    def SetPoint1(self, x: float, y: float, z: float) -> None: ...
    @overload
    def SetPoint1(self, x: MutableSequence[float]) -> None: ...
    @overload
    def SetPoint2(self, x: float, y: float, z: float) -> None: ...
    @overload
    def SetPoint2(self, x: MutableSequence[float]) -> None: ...
    def SetRepresentation(self, _arg: int) -> None: ...
    def SetRepresentationToOff(self) -> None: ...
    def SetRepresentationToOutline(self) -> None: ...
    def SetRepresentationToSurface(self) -> None: ...
    def SetRepresentationToWireframe(self) -> None: ...
    def SetResolution(self, r: int) -> None: ...
    def UpdatePlacement(self) -> None: ...

class vtkPlaybackRepresentation(vtkBorderRepresentation):
    def BackwardOneFrame(self) -> None: ...
    def BuildRepresentation(self) -> None: ...
    def ForwardOneFrame(self) -> None: ...
    def GetActors2D(self, __a: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty2D: ...
    def GetSize(self, size: MutableSequence[float]) -> None: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def JumpToBeginning(self) -> None: ...
    def JumpToEnd(self) -> None: ...
    def NewInstance(self) -> vtkPlaybackRepresentation: ...
    def Play(self) -> None: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderOverlay(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkPlaybackRepresentation: ...
    def Stop(self) -> None: ...

class vtkPlaybackWidget(vtkBorderWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkPlaybackWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkPlaybackWidget: ...
    def SetRepresentation(self, r: vtkPlaybackRepresentation) -> None: ...

class vtkPointCloudRepresentation(vtkWidgetRepresentation):
    class PickingModeType(int): ...
    class InteractionStateType(int): ...
    HARDWARE_PICKING: PickingModeType
    Outside: InteractionStateType
    Over: InteractionStateType
    OverOutline: InteractionStateType
    SOFTWARE_PICKING: PickingModeType
    Selecting: InteractionStateType
    def BuildRepresentation(self) -> None: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def GetActors(self, pc: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetActors2D(self, pc: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetHardwarePickingTolerance(self) -> int: ...
    def GetHighlighting(self) -> bool: ...
    def GetInteractionStateMaxValue(self) -> int: ...
    def GetInteractionStateMinValue(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPickingMode(self) -> int: ...
    def GetPickingModeMaxValue(self) -> int: ...
    def GetPickingModeMinValue(self) -> int: ...
    def GetPointCloudActor(self) -> vtkmodules.vtkRenderingCore.vtkActor: ...
    def GetPointCloudMapper(self) -> vtkmodules.vtkRenderingCore.vtkPolyDataMapper: ...
    @overload
    def GetPointCoordinates(self) -> Pointer: ...
    @overload
    def GetPointCoordinates(self, x: MutableSequence[float]) -> None: ...
    def GetPointId(self) -> int: ...
    def GetSoftwarePickingTolerance(self) -> float: ...
    def GetSoftwarePickingToleranceMaxValue(self) -> float: ...
    def GetSoftwarePickingToleranceMinValue(self) -> float: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def HighlightingOff(self) -> None: ...
    def HighlightingOn(self) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkPointCloudRepresentation: ...
    @overload
    def PlacePointCloud(self, a: vtkmodules.vtkRenderingCore.vtkActor) -> None: ...
    @overload
    def PlacePointCloud(self, ps: vtkmodules.vtkCommonDataModel.vtkPointSet) -> None: ...
    def RegisterPickers(self) -> None: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderOverlay(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkPointCloudRepresentation: ...
    def SetHardwarePickingTolerance(self, _arg: int) -> None: ...
    def SetHighlighting(self, _arg: bool) -> None: ...
    def SetInteractionState(self, _arg: int) -> None: ...
    def SetPickingMode(self, _arg: int) -> None: ...
    def SetPickingModeToHardware(self) -> None: ...
    def SetPickingModeToSoftware(self) -> None: ...
    def SetSoftwarePickingTolerance(self, _arg: float) -> None: ...

class vtkPointCloudWidget(vtkAbstractWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkPointCloudWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkPointCloudWidget: ...
    def SetEnabled(self, enabling: int) -> None: ...
    def SetRepresentation(self, r: vtkPointCloudRepresentation) -> None: ...

class vtkPointHandleRepresentation2D(vtkHandleRepresentation):
    def BuildRepresentation(self) -> None: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def DeepCopy(self, prop: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...
    def GetActors2D(self, __a: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetCursorShape(self) -> vtkmodules.vtkCommonDataModel.vtkPolyData: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty2D: ...
    def GetSelectedProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty2D: ...
    def Highlight(self, highlight: int) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkPointHandleRepresentation2D: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOverlay(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkPointHandleRepresentation2D: ...
    def SetCursorShape(self, cursorShape: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    def SetDisplayPosition(self, xyz: MutableSequence[float]) -> None: ...
    def SetPointPlacer(self, __a: vtkPointPlacer) -> None: ...
    def SetProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty2D) -> None: ...
    def SetSelectedProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty2D) -> None: ...
    def SetVisibility(self, visible: int) -> None: ...
    def ShallowCopy(self, prop: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...
    def StartWidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...
    def Translate(self, p1: Sequence[float], p2: Sequence[float]) -> None: ...
    def WidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...

class vtkPointHandleRepresentation3D(vtkHandleRepresentation):
    def AllOff(self) -> None: ...
    def AllOn(self) -> None: ...
    def BuildRepresentation(self) -> None: ...
    def ComplexInteraction(
        self,
        iren: vtkmodules.vtkRenderingCore.vtkRenderWindowInteractor,
        widget: vtkAbstractWidget,
        event: int,
        calldata: Pointer,
    ) -> None: ...
    def ComputeComplexInteractionState(
        self,
        iren: vtkmodules.vtkRenderingCore.vtkRenderWindowInteractor,
        widget: vtkAbstractWidget,
        event: int,
        calldata: Pointer,
        modify: int = 0,
    ) -> int: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def DeepCopy(self, prop: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...
    def GetActors(self, __a: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetHotSpotSize(self) -> float: ...
    def GetHotSpotSizeMaxValue(self) -> float: ...
    def GetHotSpotSizeMinValue(self) -> float: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetOutline(self) -> int: ...
    def GetProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSmoothMotion(self) -> int: ...
    def GetTranslationMode(self) -> int: ...
    def GetXShadows(self) -> int: ...
    def GetYShadows(self) -> int: ...
    def GetZShadows(self) -> int: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def Highlight(self, highlight: int) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkPointHandleRepresentation3D: ...
    def OutlineOff(self) -> None: ...
    def OutlineOn(self) -> None: ...
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    def RegisterPickers(self) -> None: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkPointHandleRepresentation3D: ...
    def SetDisplayPosition(self, p: MutableSequence[float]) -> None: ...
    def SetHandleSize(self, size: float) -> None: ...
    def SetHotSpotSize(self, _arg: float) -> None: ...
    def SetOutline(self, o: int) -> None: ...
    def SetProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...
    def SetSelectedProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...
    def SetSmoothMotion(self, _arg: int) -> None: ...
    def SetTranslationMode(self, mode: int) -> None: ...
    def SetVisibility(self, visible: int) -> None: ...
    def SetWorldPosition(self, p: MutableSequence[float]) -> None: ...
    def SetXShadows(self, o: int) -> None: ...
    def SetYShadows(self, o: int) -> None: ...
    def SetZShadows(self, o: int) -> None: ...
    def ShallowCopy(self, prop: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...
    def SmoothMotionOff(self) -> None: ...
    def SmoothMotionOn(self) -> None: ...
    def StartComplexInteraction(
        self,
        iren: vtkmodules.vtkRenderingCore.vtkRenderWindowInteractor,
        widget: vtkAbstractWidget,
        event: int,
        calldata: Pointer,
    ) -> None: ...
    def StartWidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...
    def Translate(self, v: Sequence[float]) -> None: ...
    def TranslationModeOff(self) -> None: ...
    def TranslationModeOn(self) -> None: ...
    def WidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...
    def XShadowsOff(self) -> None: ...
    def XShadowsOn(self) -> None: ...
    def YShadowsOff(self) -> None: ...
    def YShadowsOn(self) -> None: ...
    def ZShadowsOff(self) -> None: ...
    def ZShadowsOn(self) -> None: ...

class vtkPointWidget(vtk3DWidget):
    def AllOff(self) -> None: ...
    def AllOn(self) -> None: ...
    def GetHotSpotSize(self) -> float: ...
    def GetHotSpotSizeMaxValue(self) -> float: ...
    def GetHotSpotSizeMinValue(self) -> float: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetOutline(self) -> int: ...
    def GetPolyData(self, pd: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    @overload
    def GetPosition(self) -> Tuple[float, float, float]: ...
    @overload
    def GetPosition(self, xyz: MutableSequence[float]) -> None: ...
    def GetProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetTranslationMode(self) -> int: ...
    def GetXShadows(self) -> int: ...
    def GetYShadows(self) -> int: ...
    def GetZShadows(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkPointWidget: ...
    def OutlineOff(self) -> None: ...
    def OutlineOn(self) -> None: ...
    @overload
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    @overload
    def PlaceWidget(self) -> None: ...
    @overload
    def PlaceWidget(self, xmin: float, xmax: float, ymin: float, ymax: float, zmin: float, zmax: float) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkPointWidget: ...
    def SetEnabled(self, __a: int) -> None: ...
    def SetHotSpotSize(self, _arg: float) -> None: ...
    def SetOutline(self, o: int) -> None: ...
    @overload
    def SetPosition(self, x: float, y: float, z: float) -> None: ...
    @overload
    def SetPosition(self, x: MutableSequence[float]) -> None: ...
    def SetTranslationMode(self, mode: int) -> None: ...
    def SetXShadows(self, o: int) -> None: ...
    def SetYShadows(self, o: int) -> None: ...
    def SetZShadows(self, o: int) -> None: ...
    def TranslationModeOff(self) -> None: ...
    def TranslationModeOn(self) -> None: ...
    def XShadowsOff(self) -> None: ...
    def XShadowsOn(self) -> None: ...
    def YShadowsOff(self) -> None: ...
    def YShadowsOn(self) -> None: ...
    def ZShadowsOff(self) -> None: ...
    def ZShadowsOn(self) -> None: ...

class vtkPolyDataContourLineInterpolator(vtkContourLineInterpolator):
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPolys(self) -> vtkmodules.vtkCommonDataModel.vtkPolyDataCollection: ...
    def InterpolateLine(
        self, ren: vtkmodules.vtkRenderingCore.vtkRenderer, rep: vtkContourRepresentation, idx1: int, idx2: int
    ) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkPolyDataContourLineInterpolator: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkPolyDataContourLineInterpolator: ...
    def UpdateNode(
        self, __a: vtkmodules.vtkRenderingCore.vtkRenderer, __b: vtkContourRepresentation, node: MutableSequence[float], idx: int
    ) -> int: ...

class vtkPolyDataPointPlacer(vtkPointPlacer):
    def AddProp(self, __a: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...
    @overload
    def ComputeWorldPosition(
        self,
        ren: vtkmodules.vtkRenderingCore.vtkRenderer,
        displayPos: MutableSequence[float],
        worldPos: MutableSequence[float],
        worldOrient: MutableSequence[float],
    ) -> int: ...
    @overload
    def ComputeWorldPosition(
        self,
        ren: vtkmodules.vtkRenderingCore.vtkRenderer,
        displayPos: MutableSequence[float],
        refWorldPos: MutableSequence[float],
        worldPos: MutableSequence[float],
        worldOrient: MutableSequence[float],
    ) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetNumberOfProps(self) -> int: ...
    def GetPropPicker(self) -> vtkmodules.vtkRenderingCore.vtkPropPicker: ...
    def HasProp(self, __a: vtkmodules.vtkRenderingCore.vtkProp) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkPolyDataPointPlacer: ...
    def RemoveAllProps(self) -> None: ...
    def RemoveViewProp(self, prop: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkPolyDataPointPlacer: ...
    def ValidateDisplayPosition(
        self, __a: vtkmodules.vtkRenderingCore.vtkRenderer, displayPos: MutableSequence[float]
    ) -> int: ...
    @overload
    def ValidateWorldPosition(self, worldPos: MutableSequence[float]) -> int: ...
    @overload
    def ValidateWorldPosition(self, worldPos: MutableSequence[float], worldOrient: MutableSequence[float]) -> int: ...

class vtkPolyLineRepresentation(vtkCurveRepresentation):
    def BuildRepresentation(self) -> None: ...
    def GetHandlePositions(self) -> vtkmodules.vtkCommonCore.vtkDoubleArray: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPolyData(self, pd: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    def GetSummedLength(self) -> float: ...
    def InitializeHandles(self, points: vtkmodules.vtkCommonCore.vtkPoints) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkPolyLineRepresentation: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkPolyLineRepresentation: ...
    def SetNumberOfHandles(self, npts: int) -> None: ...

class vtkPolyLineWidget(vtkAbstractWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkPolyLineWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkPolyLineWidget: ...
    def SetEnabled(self, enabling: int) -> None: ...
    def SetRepresentation(self, r: vtkPolyLineRepresentation) -> None: ...

class vtkPolygonalSurfaceContourLineInterpolator(vtkPolyDataContourLineInterpolator):
    def GetContourPointIds(self, rep: vtkContourRepresentation, ids: vtkmodules.vtkCommonCore.vtkIdList) -> None: ...
    def GetDistanceOffset(self) -> float: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def InterpolateLine(
        self, ren: vtkmodules.vtkRenderingCore.vtkRenderer, rep: vtkContourRepresentation, idx1: int, idx2: int
    ) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkPolygonalSurfaceContourLineInterpolator: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkPolygonalSurfaceContourLineInterpolator: ...
    def SetDistanceOffset(self, _arg: float) -> None: ...
    def UpdateNode(
        self, __a: vtkmodules.vtkRenderingCore.vtkRenderer, __b: vtkContourRepresentation, node: MutableSequence[float], idx: int
    ) -> int: ...

class vtkPolygonalSurfacePointPlacer(vtkPolyDataPointPlacer):
    def AddProp(self, __a: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...
    @overload
    def ComputeWorldPosition(
        self,
        ren: vtkmodules.vtkRenderingCore.vtkRenderer,
        displayPos: MutableSequence[float],
        worldPos: MutableSequence[float],
        worldOrient: MutableSequence[float],
    ) -> int: ...
    @overload
    def ComputeWorldPosition(
        self,
        ren: vtkmodules.vtkRenderingCore.vtkRenderer,
        displayPos: MutableSequence[float],
        refWorldPos: MutableSequence[float],
        worldPos: MutableSequence[float],
        worldOrient: MutableSequence[float],
    ) -> int: ...
    def GetCellPicker(self) -> vtkmodules.vtkRenderingCore.vtkCellPicker: ...
    def GetDistanceOffset(self) -> float: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPolys(self) -> vtkmodules.vtkCommonDataModel.vtkPolyDataCollection: ...
    def GetSnapToClosestPoint(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkPolygonalSurfacePointPlacer: ...
    def RemoveAllProps(self) -> None: ...
    def RemoveViewProp(self, prop: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkPolygonalSurfacePointPlacer: ...
    def SetDistanceOffset(self, _arg: float) -> None: ...
    def SetSnapToClosestPoint(self, _arg: int) -> None: ...
    def SnapToClosestPointOff(self) -> None: ...
    def SnapToClosestPointOn(self) -> None: ...
    def UpdateNodeWorldPosition(self, worldPos: MutableSequence[float], nodePointId: int) -> int: ...
    def ValidateDisplayPosition(
        self, __a: vtkmodules.vtkRenderingCore.vtkRenderer, displayPos: MutableSequence[float]
    ) -> int: ...
    @overload
    def ValidateWorldPosition(self, worldPos: MutableSequence[float]) -> int: ...
    @overload
    def ValidateWorldPosition(self, worldPos: MutableSequence[float], worldOrient: MutableSequence[float]) -> int: ...

class vtkPolygonalSurfacePointPlacerNode:
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, __a: vtkPolygonalSurfacePointPlacerNode) -> None: ...

class vtkProgressBarRepresentation(vtkBorderRepresentation):
    def BuildRepresentation(self) -> None: ...
    def DrawBackgroundOff(self) -> None: ...
    def DrawBackgroundOn(self) -> None: ...
    def DrawFrameOff(self) -> None: ...
    def DrawFrameOn(self) -> None: ...
    def GetActors2D(self, __a: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetBackgroundColor(self) -> Tuple[float, float, float]: ...
    def GetDrawBackground(self) -> bool: ...
    def GetDrawFrame(self) -> bool: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPadding(self) -> Tuple[float, float]: ...
    def GetProgressBarColor(self) -> Tuple[float, float, float]: ...
    def GetProgressRate(self) -> float: ...
    def GetProgressRateMaxValue(self) -> float: ...
    def GetProgressRateMinValue(self) -> float: ...
    def GetProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty2D: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkProgressBarRepresentation: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderOverlay(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkProgressBarRepresentation: ...
    @overload
    def SetBackgroundColor(self, _arg1: float, _arg2: float, _arg3: float) -> None: ...
    @overload
    def SetBackgroundColor(self, _arg: Sequence[float]) -> None: ...
    def SetDrawBackground(self, _arg: bool) -> None: ...
    def SetDrawFrame(self, _arg: bool) -> None: ...
    @overload
    def SetPadding(self, _arg1: float, _arg2: float) -> None: ...
    @overload
    def SetPadding(self, _arg: Sequence[float]) -> None: ...
    @overload
    def SetProgressBarColor(self, _arg1: float, _arg2: float, _arg3: float) -> None: ...
    @overload
    def SetProgressBarColor(self, _arg: Sequence[float]) -> None: ...
    def SetProgressRate(self, _arg: float) -> None: ...

class vtkProgressBarWidget(vtkBorderWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkProgressBarWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkProgressBarWidget: ...
    def SetRepresentation(self, r: vtkProgressBarRepresentation) -> None: ...

class vtkProp3DButtonRepresentation(vtkButtonRepresentation):
    def BuildRepresentation(self) -> None: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def FollowCameraOff(self) -> None: ...
    def FollowCameraOn(self) -> None: ...
    def GetActors(self, pc: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetButtonProp(self, i: int) -> vtkmodules.vtkRenderingCore.vtkProp3D: ...
    def GetFollowCamera(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkProp3DButtonRepresentation: ...
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    def RegisterPickers(self) -> None: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderVolumetricGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkProp3DButtonRepresentation: ...
    def SetButtonProp(self, i: int, prop: vtkmodules.vtkRenderingCore.vtkProp3D) -> None: ...
    def SetFollowCamera(self, _arg: int) -> None: ...
    def SetState(self, state: int) -> None: ...
    def ShallowCopy(self, prop: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...

class vtkRectilinearWipeRepresentation(vtkWidgetRepresentation):
    class InteractionStateType(int): ...
    MovingCenter: InteractionStateType
    MovingHPane: InteractionStateType
    MovingVPane: InteractionStateType
    Outside: InteractionStateType
    def BuildRepresentation(self) -> None: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def GetActors2D(self, __a: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetImageActor(self) -> vtkmodules.vtkRenderingCore.vtkImageActor: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty2D: ...
    def GetRectilinearWipe(self) -> vtkmodules.vtkImagingHybrid.vtkImageRectilinearWipe: ...
    def GetTolerance(self) -> int: ...
    def GetToleranceMaxValue(self) -> int: ...
    def GetToleranceMinValue(self) -> int: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkRectilinearWipeRepresentation: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderOverlay(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkRectilinearWipeRepresentation: ...
    def SetImageActor(self, imageActor: vtkmodules.vtkRenderingCore.vtkImageActor) -> None: ...
    def SetRectilinearWipe(self, wipe: vtkmodules.vtkImagingHybrid.vtkImageRectilinearWipe) -> None: ...
    def SetTolerance(self, _arg: int) -> None: ...
    def StartWidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...
    def WidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...

class vtkRectilinearWipeWidget(vtkAbstractWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetRectilinearWipeRepresentation(self) -> vtkRectilinearWipeRepresentation: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkRectilinearWipeWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkRectilinearWipeWidget: ...
    def SetRepresentation(self, r: vtkRectilinearWipeRepresentation) -> None: ...

class vtkResliceCursor(vtkmodules.vtkCommonCore.vtkObject):
    def GetAxis(self, i: int) -> Pointer: ...
    def GetCenter(self) -> Tuple[float, float, float]: ...
    def GetCenterlineAxisPolyData(self, axis: int) -> vtkmodules.vtkCommonDataModel.vtkPolyData: ...
    def GetHole(self) -> int: ...
    def GetHoleWidth(self) -> float: ...
    def GetHoleWidthInPixels(self) -> float: ...
    def GetImage(self) -> vtkmodules.vtkCommonDataModel.vtkImageData: ...
    def GetMTime(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPlane(self, n: int) -> vtkmodules.vtkCommonDataModel.vtkPlane: ...
    def GetPolyData(self) -> vtkmodules.vtkCommonDataModel.vtkPolyData: ...
    def GetThickMode(self) -> int: ...
    def GetThickness(self) -> Tuple[float, float, float]: ...
    def GetViewUp(self, i: int) -> Pointer: ...
    def GetXAxis(self) -> Tuple[float, float, float]: ...
    def GetXViewUp(self) -> Tuple[float, float, float]: ...
    def GetYAxis(self) -> Tuple[float, float, float]: ...
    def GetYViewUp(self) -> Tuple[float, float, float]: ...
    def GetZAxis(self) -> Tuple[float, float, float]: ...
    def GetZViewUp(self) -> Tuple[float, float, float]: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkResliceCursor: ...
    def Reset(self) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkResliceCursor: ...
    @overload
    def SetCenter(self, __a: float, __b: float, __c: float) -> None: ...
    @overload
    def SetCenter(self, center: MutableSequence[float]) -> None: ...
    def SetHole(self, _arg: int) -> None: ...
    def SetHoleWidth(self, _arg: float) -> None: ...
    def SetHoleWidthInPixels(self, _arg: float) -> None: ...
    def SetImage(self, __a: vtkmodules.vtkCommonDataModel.vtkImageData) -> None: ...
    def SetThickMode(self, _arg: int) -> None: ...
    @overload
    def SetThickness(self, _arg1: float, _arg2: float, _arg3: float) -> None: ...
    @overload
    def SetThickness(self, _arg: Sequence[float]) -> None: ...
    @overload
    def SetXAxis(self, _arg1: float, _arg2: float, _arg3: float) -> None: ...
    @overload
    def SetXAxis(self, _arg: Sequence[float]) -> None: ...
    @overload
    def SetXViewUp(self, _arg1: float, _arg2: float, _arg3: float) -> None: ...
    @overload
    def SetXViewUp(self, _arg: Sequence[float]) -> None: ...
    @overload
    def SetYAxis(self, _arg1: float, _arg2: float, _arg3: float) -> None: ...
    @overload
    def SetYAxis(self, _arg: Sequence[float]) -> None: ...
    @overload
    def SetYViewUp(self, _arg1: float, _arg2: float, _arg3: float) -> None: ...
    @overload
    def SetYViewUp(self, _arg: Sequence[float]) -> None: ...
    @overload
    def SetZAxis(self, _arg1: float, _arg2: float, _arg3: float) -> None: ...
    @overload
    def SetZAxis(self, _arg: Sequence[float]) -> None: ...
    @overload
    def SetZViewUp(self, _arg1: float, _arg2: float, _arg3: float) -> None: ...
    @overload
    def SetZViewUp(self, _arg: Sequence[float]) -> None: ...
    def ThickModeOff(self) -> None: ...
    def ThickModeOn(self) -> None: ...
    def Update(self) -> None: ...

class vtkResliceCursorActor(vtkmodules.vtkRenderingCore.vtkProp3D):
    def GetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetCenterlineActor(self, axis: int) -> vtkmodules.vtkRenderingCore.vtkActor: ...
    def GetCenterlineProperty(self, i: int) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetCursorAlgorithm(self) -> vtkResliceCursorPolyDataAlgorithm: ...
    def GetMTime(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetThickSlabProperty(self, i: int) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkResliceCursorActor: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkResliceCursorActor: ...
    def SetUserMatrix(self, matrix: vtkmodules.vtkCommonMath.vtkMatrix4x4) -> None: ...

class vtkResliceCursorRepresentation(vtkWidgetRepresentation):
    NearAxis1: int
    NearAxis2: int
    NearCenter: int
    None_: int
    OnAxis1: int
    OnAxis2: int
    OnCenter: int
    Outside: int
    PanAndRotate: int
    ResizeThickness: int
    RotateBothAxes: int
    TranslateSingleAxis: int
    WindowLevelling: int
    def ActivateText(self, __a: int) -> None: ...
    @staticmethod
    def BoundPlane(
        bounds: MutableSequence[float], origin: MutableSequence[float], p1: MutableSequence[float], p2: MutableSequence[float]
    ) -> int: ...
    def BuildRepresentation(self) -> None: ...
    def DisplayTextOff(self) -> None: ...
    def DisplayTextOn(self) -> None: ...
    def GetColorMap(self) -> vtkmodules.vtkImagingCore.vtkImageMapToColors: ...
    def GetCursorAlgorithm(self) -> vtkResliceCursorPolyDataAlgorithm: ...
    def GetDisplayText(self) -> int: ...
    def GetImageActor(self) -> vtkmodules.vtkRenderingCore.vtkImageActor: ...
    def GetLevel(self) -> float: ...
    def GetLookupTable(self) -> vtkmodules.vtkCommonCore.vtkScalarsToColors: ...
    def GetManipulationMode(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPlaneSource(self) -> vtkmodules.vtkFiltersSources.vtkPlaneSource: ...
    def GetReslice(self) -> vtkmodules.vtkCommonExecutionModel.vtkImageAlgorithm: ...
    def GetResliceAxes(self) -> vtkmodules.vtkCommonMath.vtkMatrix4x4: ...
    def GetResliceCursor(self) -> vtkResliceCursor: ...
    def GetRestrictPlaneToVolume(self) -> int: ...
    def GetShowReslicedImage(self) -> int: ...
    def GetTextProperty(self) -> vtkmodules.vtkRenderingCore.vtkTextProperty: ...
    def GetThicknessLabelFormat(self) -> str: ...
    @overload
    def GetThicknessLabelPosition(self) -> Pointer: ...
    @overload
    def GetThicknessLabelPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetThicknessLabelText(self) -> str: ...
    def GetTolerance(self) -> int: ...
    def GetToleranceMaxValue(self) -> int: ...
    def GetToleranceMinValue(self) -> int: ...
    def GetUseImageActor(self) -> int: ...
    def GetWindow(self) -> float: ...
    def GetWindowLevel(self, wl: MutableSequence[float]) -> None: ...
    def GetWorldThicknessLabelPosition(self, pos: MutableSequence[float]) -> None: ...
    def InitializeReslicePlane(self) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def ManageTextDisplay(self) -> None: ...
    def NewInstance(self) -> vtkResliceCursorRepresentation: ...
    def ResetCamera(self) -> None: ...
    def RestrictPlaneToVolumeOff(self) -> None: ...
    def RestrictPlaneToVolumeOn(self) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkResliceCursorRepresentation: ...
    def SetColorMap(self, __a: vtkmodules.vtkImagingCore.vtkImageMapToColors) -> None: ...
    def SetDisplayText(self, _arg: int) -> None: ...
    def SetLookupTable(self, __a: vtkmodules.vtkCommonCore.vtkScalarsToColors) -> None: ...
    def SetManipulationMode(self, m: int) -> None: ...
    def SetRestrictPlaneToVolume(self, _arg: int) -> None: ...
    def SetShowReslicedImage(self, _arg: int) -> None: ...
    def SetTextProperty(self, tprop: vtkmodules.vtkRenderingCore.vtkTextProperty) -> None: ...
    def SetThicknessLabelFormat(self, _arg: str) -> None: ...
    def SetTolerance(self, _arg: int) -> None: ...
    def SetUseImageActor(self, _arg: int) -> None: ...
    def SetWindowLevel(self, window: float, level: float, copy: int = 0) -> None: ...
    def ShowReslicedImageOff(self) -> None: ...
    def ShowReslicedImageOn(self) -> None: ...
    @staticmethod
    def TransformPlane(
        planeToTransform: vtkmodules.vtkFiltersSources.vtkPlaneSource,
        targetCenter: MutableSequence[float],
        targetNormal: MutableSequence[float],
        targetViewUp: MutableSequence[float],
    ) -> None: ...
    def UseImageActorOff(self) -> None: ...
    def UseImageActorOn(self) -> None: ...

class vtkResliceCursorLineRepresentation(vtkResliceCursorRepresentation):
    def BuildRepresentation(self) -> None: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def GetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetResliceCursor(self) -> vtkResliceCursor: ...
    def GetResliceCursorActor(self) -> vtkResliceCursorActor: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def Highlight(self, highlightOn: int) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkResliceCursorLineRepresentation: ...
    def ReleaseGraphicsResources(self, w: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderOverlay(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkResliceCursorLineRepresentation: ...
    def SetTolerance(self, t: int) -> None: ...
    def SetUserMatrix(self, matrix: vtkmodules.vtkCommonMath.vtkMatrix4x4) -> None: ...
    def StartWidgetInteraction(self, startEventPos: MutableSequence[float]) -> None: ...
    def WidgetInteraction(self, e: MutableSequence[float]) -> None: ...

class vtkResliceCursorPicker(vtkmodules.vtkRenderingCore.vtkPicker):
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPickedAxis1(self) -> int: ...
    def GetPickedAxis2(self) -> int: ...
    def GetPickedCenter(self) -> int: ...
    def GetResliceCursorAlgorithm(self) -> vtkResliceCursorPolyDataAlgorithm: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkResliceCursorPicker: ...
    @overload
    def Pick(
        self, selectionX: float, selectionY: float, selectionZ: float, renderer: vtkmodules.vtkRenderingCore.vtkRenderer
    ) -> int: ...
    @overload
    def Pick(
        self, displayPos: MutableSequence[float], world: MutableSequence[float], ren: vtkmodules.vtkRenderingCore.vtkRenderer
    ) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkResliceCursorPicker: ...
    def SetResliceCursorAlgorithm(self, __a: vtkResliceCursorPolyDataAlgorithm) -> None: ...
    def SetTransformMatrix(self, __a: vtkmodules.vtkCommonMath.vtkMatrix4x4) -> None: ...

class vtkResliceCursorPolyDataAlgorithm(vtkmodules.vtkCommonExecutionModel.vtkPolyDataAlgorithm):
    XAxis: int
    YAxis: int
    ZAxis: int
    def GetAxis1(self) -> int: ...
    def GetAxis2(self) -> int: ...
    def GetCenterlineAxis1(self) -> vtkmodules.vtkCommonDataModel.vtkPolyData: ...
    def GetCenterlineAxis2(self) -> vtkmodules.vtkCommonDataModel.vtkPolyData: ...
    def GetMTime(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetOtherPlaneForAxis(self, p: int) -> int: ...
    def GetPlaneAxis1(self) -> int: ...
    def GetPlaneAxis2(self) -> int: ...
    def GetResliceCursor(self) -> vtkResliceCursor: ...
    def GetReslicePlaneNormal(self) -> int: ...
    def GetSliceBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetThickSlabAxis1(self) -> vtkmodules.vtkCommonDataModel.vtkPolyData: ...
    def GetThickSlabAxis2(self) -> vtkmodules.vtkCommonDataModel.vtkPolyData: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkResliceCursorPolyDataAlgorithm: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkResliceCursorPolyDataAlgorithm: ...
    def SetResliceCursor(self, __a: vtkResliceCursor) -> None: ...
    def SetReslicePlaneNormal(self, _arg: int) -> None: ...
    def SetReslicePlaneNormalToXAxis(self) -> None: ...
    def SetReslicePlaneNormalToYAxis(self) -> None: ...
    def SetReslicePlaneNormalToZAxis(self) -> None: ...
    @overload
    def SetSliceBounds(self, _arg1: float, _arg2: float, _arg3: float, _arg4: float, _arg5: float, _arg6: float) -> None: ...
    @overload
    def SetSliceBounds(self, _arg: Sequence[float]) -> None: ...

class vtkResliceCursorThickLineRepresentation(vtkResliceCursorLineRepresentation):
    def CreateDefaultResliceAlgorithm(self) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkResliceCursorThickLineRepresentation: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkResliceCursorThickLineRepresentation: ...
    def SetResliceParameters(self, outputSpacingX: float, outputSpacingY: float, extentX: int, extentY: int) -> None: ...

class vtkResliceCursorWidget(vtkAbstractWidget):
    ResetCursorEvent: int
    ResliceAxesChangedEvent: int
    ResliceThicknessChangedEvent: int
    WindowLevelEvent: int
    def CreateDefaultRepresentation(self) -> None: ...
    def GetManageWindowLevel(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetResliceCursorRepresentation(self) -> vtkResliceCursorRepresentation: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def ManageWindowLevelOff(self) -> None: ...
    def ManageWindowLevelOn(self) -> None: ...
    def NewInstance(self) -> vtkResliceCursorWidget: ...
    def ResetResliceCursor(self) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkResliceCursorWidget: ...
    def SetEnabled(self, __a: int) -> None: ...
    def SetManageWindowLevel(self, _arg: int) -> None: ...
    def SetRepresentation(self, r: vtkResliceCursorRepresentation) -> None: ...

class vtkScalarBarRepresentation(vtkBorderRepresentation):
    def BuildRepresentation(self) -> None: ...
    def GetActors2D(self, collection: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetAutoOrient(self) -> bool: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetOrientation(self) -> int: ...
    def GetScalarBarActor(self) -> vtkmodules.vtkRenderingAnnotation.vtkScalarBarActor: ...
    def GetSize(self, size: MutableSequence[float]) -> None: ...
    def GetVisibility(self) -> int: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkScalarBarRepresentation: ...
    def ReleaseGraphicsResources(self, window: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderOverlay(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkScalarBarRepresentation: ...
    def SetAutoOrient(self, _arg: bool) -> None: ...
    def SetOrientation(self, orient: int) -> None: ...
    def SetScalarBarActor(self, __a: vtkmodules.vtkRenderingAnnotation.vtkScalarBarActor) -> None: ...
    def SetVisibility(self, __a: int) -> None: ...
    def WidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...

class vtkScalarBarWidget(vtkBorderWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetProcessEvents(self) -> int: ...
    def GetRepositionable(self) -> int: ...
    def GetScalarBarActor(self) -> vtkmodules.vtkRenderingAnnotation.vtkScalarBarActor: ...
    def GetScalarBarRepresentation(self) -> vtkScalarBarRepresentation: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkScalarBarWidget: ...
    def RepositionableOff(self) -> None: ...
    def RepositionableOn(self) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkScalarBarWidget: ...
    def SetRepositionable(self, _arg: int) -> None: ...
    def SetRepresentation(self, rep: vtkScalarBarRepresentation) -> None: ...
    def SetScalarBarActor(self, actor: vtkmodules.vtkRenderingAnnotation.vtkScalarBarActor) -> None: ...

class vtkSeedRepresentation(vtkWidgetRepresentation):
    NearSeed: int
    Outside: int
    def BuildRepresentation(self) -> None: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def CreateHandle(self, e: MutableSequence[float]) -> int: ...
    def GetActiveHandle(self) -> int: ...
    def GetActors(self, __a: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    @overload
    def GetHandleRepresentation(self, num: int) -> vtkHandleRepresentation: ...
    @overload
    def GetHandleRepresentation(self) -> vtkHandleRepresentation: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetNumberOfSeeds(self) -> int: ...
    def GetSeedDisplayPosition(self, seedNum: int, pos: MutableSequence[float]) -> None: ...
    def GetSeedWorldPosition(self, seedNum: int, pos: MutableSequence[float]) -> None: ...
    def GetTolerance(self) -> int: ...
    def GetToleranceMaxValue(self) -> int: ...
    def GetToleranceMinValue(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkSeedRepresentation: ...
    def RemoveActiveHandle(self) -> None: ...
    def RemoveHandle(self, n: int) -> None: ...
    def RemoveLastHandle(self) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkSeedRepresentation: ...
    def SetActiveHandle(self, handleId: int) -> None: ...
    def SetHandleRepresentation(self, handle: vtkHandleRepresentation) -> None: ...
    def SetSeedDisplayPosition(self, seedNum: int, pos: MutableSequence[float]) -> None: ...
    def SetSeedWorldPosition(self, seedNum: int, pos: MutableSequence[float]) -> None: ...
    def SetTolerance(self, _arg: int) -> None: ...

class vtkSeedWidget(vtkAbstractWidget):
    MovingSeed: int
    PlacedSeeds: int
    PlacingSeeds: int
    Start: int
    def CompleteInteraction(self) -> None: ...
    def CreateDefaultRepresentation(self) -> None: ...
    def CreateNewHandle(self) -> vtkHandleWidget: ...
    def DeleteSeed(self, n: int) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetSeed(self, n: int) -> vtkHandleWidget: ...
    def GetSeedRepresentation(self) -> vtkSeedRepresentation: ...
    def GetWidgetState(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkSeedWidget: ...
    def RestartInteraction(self) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkSeedWidget: ...
    def SetCurrentRenderer(self, __a: vtkmodules.vtkRenderingCore.vtkRenderer) -> None: ...
    def SetEnabled(self, __a: int) -> None: ...
    def SetInteractor(self, __a: vtkmodules.vtkRenderingCore.vtkRenderWindowInteractor) -> None: ...
    def SetProcessEvents(self, __a: int) -> None: ...
    def SetRepresentation(self, rep: vtkSeedRepresentation) -> None: ...

class vtkSliderRepresentation2D(vtkSliderRepresentation):
    def BuildRepresentation(self) -> None: ...
    def GetActors2D(self, __a: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetCapProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty2D: ...
    def GetLabelProperty(self) -> vtkmodules.vtkRenderingCore.vtkTextProperty: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPoint1Coordinate(self) -> vtkmodules.vtkRenderingCore.vtkCoordinate: ...
    def GetPoint2Coordinate(self) -> vtkmodules.vtkRenderingCore.vtkCoordinate: ...
    def GetSelectedProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty2D: ...
    def GetSliderProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty2D: ...
    def GetTitleProperty(self) -> vtkmodules.vtkRenderingCore.vtkTextProperty: ...
    def GetTitleText(self) -> str: ...
    def GetTubeProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty2D: ...
    def Highlight(self, __a: int) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkSliderRepresentation2D: ...
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderOverlay(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkSliderRepresentation2D: ...
    def SetTitleText(self, __a: str) -> None: ...
    def StartWidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...
    def WidgetInteraction(self, newEventPos: MutableSequence[float]) -> None: ...

class vtkSliderRepresentation3D(vtkSliderRepresentation):
    def BuildRepresentation(self) -> None: ...
    def GetActors(self, __a: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetCapProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetMTime(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPoint1Coordinate(self) -> vtkmodules.vtkRenderingCore.vtkCoordinate: ...
    def GetPoint2Coordinate(self) -> vtkmodules.vtkRenderingCore.vtkCoordinate: ...
    def GetRotation(self) -> float: ...
    def GetSelectedProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSliderProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSliderShape(self) -> int: ...
    def GetSliderShapeMaxValue(self) -> int: ...
    def GetSliderShapeMinValue(self) -> int: ...
    def GetTitleText(self) -> str: ...
    def GetTubeProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def Highlight(self, __a: int) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkSliderRepresentation3D: ...
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    def RegisterPickers(self) -> None: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkSliderRepresentation3D: ...
    def SetPoint1InWorldCoordinates(self, x: float, y: float, z: float) -> None: ...
    def SetPoint2InWorldCoordinates(self, x: float, y: float, z: float) -> None: ...
    def SetRotation(self, _arg: float) -> None: ...
    def SetSliderShape(self, _arg: int) -> None: ...
    def SetSliderShapeToCylinder(self) -> None: ...
    def SetSliderShapeToSphere(self) -> None: ...
    def SetTitleText(self, __a: str) -> None: ...
    def StartWidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...
    def WidgetInteraction(self, newEventPos: MutableSequence[float]) -> None: ...

class vtkSliderWidget(vtkAbstractWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetAnimationMode(self) -> int: ...
    def GetAnimationModeMaxValue(self) -> int: ...
    def GetAnimationModeMinValue(self) -> int: ...
    def GetNumberOfAnimationSteps(self) -> int: ...
    def GetNumberOfAnimationStepsMaxValue(self) -> int: ...
    def GetNumberOfAnimationStepsMinValue(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetSliderRepresentation(self) -> vtkSliderRepresentation: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkSliderWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkSliderWidget: ...
    def SetAnimationMode(self, _arg: int) -> None: ...
    def SetAnimationModeToAnimate(self) -> None: ...
    def SetAnimationModeToJump(self) -> None: ...
    def SetAnimationModeToOff(self) -> None: ...
    def SetNumberOfAnimationSteps(self, _arg: int) -> None: ...
    def SetRepresentation(self, r: vtkSliderRepresentation) -> None: ...

class vtkSphereHandleRepresentation(vtkHandleRepresentation):
    def BuildRepresentation(self) -> None: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def DeepCopy(self, prop: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...
    def GetActors(self, __a: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetHotSpotSize(self) -> float: ...
    def GetHotSpotSizeMaxValue(self) -> float: ...
    def GetHotSpotSizeMinValue(self) -> float: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSphereRadius(self) -> float: ...
    def GetTranslationMode(self) -> int: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def Highlight(self, highlight: int) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkSphereHandleRepresentation: ...
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    def RegisterPickers(self) -> None: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, viewport: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkSphereHandleRepresentation: ...
    def SetDisplayPosition(self, p: MutableSequence[float]) -> None: ...
    def SetHandleSize(self, size: float) -> None: ...
    def SetHotSpotSize(self, _arg: float) -> None: ...
    def SetProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...
    def SetSelectedProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...
    def SetSphereRadius(self, __a: float) -> None: ...
    def SetTranslationMode(self, _arg: int) -> None: ...
    def SetVisibility(self, visible: int) -> None: ...
    def SetWorldPosition(self, p: MutableSequence[float]) -> None: ...
    def ShallowCopy(self, prop: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...
    def StartWidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...
    def Translate(self, v: Sequence[float]) -> None: ...
    def TranslationModeOff(self) -> None: ...
    def TranslationModeOn(self) -> None: ...
    def WidgetInteraction(self, eventPos: MutableSequence[float]) -> None: ...

class vtkSphereRepresentation(vtkWidgetRepresentation):
    MovingHandle: int
    OnSphere: int
    Outside: int
    Scaling: int
    Translating: int
    def BuildRepresentation(self) -> None: ...
    def CenterCursorOff(self) -> None: ...
    def CenterCursorOn(self) -> None: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def GetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    @overload
    def GetCenter(self) -> Tuple[float, float, float]: ...
    @overload
    def GetCenter(self, xyz: MutableSequence[float]) -> None: ...
    def GetCenterCursor(self) -> bool: ...
    def GetHandleDirection(self) -> Tuple[float, float, float]: ...
    def GetHandlePosition(self) -> Tuple[float, float, float]: ...
    def GetHandleProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetHandleText(self) -> int: ...
    def GetHandleTextProperty(self) -> vtkmodules.vtkRenderingCore.vtkTextProperty: ...
    def GetHandleVisibility(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPhiResolution(self) -> int: ...
    def GetPolyData(self, pd: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    def GetRadialLine(self) -> int: ...
    def GetRadialLineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetRadius(self) -> float: ...
    def GetRepresentation(self) -> int: ...
    def GetRepresentationMaxValue(self) -> int: ...
    def GetRepresentationMinValue(self) -> int: ...
    def GetSelectedHandleProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedSphereProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSphere(self, sphere: vtkmodules.vtkCommonDataModel.vtkSphere) -> None: ...
    def GetSphereProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetThetaResolution(self) -> int: ...
    def GetTranslationAxis(self) -> int: ...
    def GetTranslationAxisMaxValue(self) -> int: ...
    def GetTranslationAxisMinValue(self) -> int: ...
    def HandleTextOff(self) -> None: ...
    def HandleTextOn(self) -> None: ...
    def HandleVisibilityOff(self) -> None: ...
    def HandleVisibilityOn(self) -> None: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    def IsTranslationConstrained(self) -> bool: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkSphereRepresentation: ...
    @overload
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    @overload
    def PlaceWidget(self, center: MutableSequence[float], handlePosition: MutableSequence[float]) -> None: ...
    def RadialLineOff(self) -> None: ...
    def RadialLineOn(self) -> None: ...
    def RegisterPickers(self) -> None: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderOverlay(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkSphereRepresentation: ...
    @overload
    def SetCenter(self, c: MutableSequence[float]) -> None: ...
    @overload
    def SetCenter(self, x: float, y: float, z: float) -> None: ...
    def SetCenterCursor(self, _arg: bool) -> None: ...
    @overload
    def SetHandleDirection(self, dir: MutableSequence[float]) -> None: ...
    @overload
    def SetHandleDirection(self, dx: float, dy: float, dz: float) -> None: ...
    @overload
    def SetHandlePosition(self, handle: MutableSequence[float]) -> None: ...
    @overload
    def SetHandlePosition(self, x: float, y: float, z: float) -> None: ...
    def SetHandleText(self, _arg: int) -> None: ...
    def SetHandleVisibility(self, _arg: int) -> None: ...
    def SetInteractionState(self, state: int) -> None: ...
    def SetPhiResolution(self, r: int) -> None: ...
    def SetRadialLine(self, _arg: int) -> None: ...
    def SetRadius(self, r: float) -> None: ...
    def SetRepresentation(self, _arg: int) -> None: ...
    def SetRepresentationToOff(self) -> None: ...
    def SetRepresentationToSurface(self) -> None: ...
    def SetRepresentationToWireframe(self) -> None: ...
    def SetThetaResolution(self, r: int) -> None: ...
    def SetTranslationAxis(self, _arg: int) -> None: ...
    def SetTranslationAxisOff(self) -> None: ...
    def SetXTranslationAxisOn(self) -> None: ...
    def SetYTranslationAxisOn(self) -> None: ...
    def SetZTranslationAxisOn(self) -> None: ...
    def StartWidgetInteraction(self, e: MutableSequence[float]) -> None: ...
    def WidgetInteraction(self, e: MutableSequence[float]) -> None: ...

class vtkSphereWidget(vtk3DWidget):
    @overload
    def GetCenter(self) -> Tuple[float, float, float]: ...
    @overload
    def GetCenter(self, xyz: MutableSequence[float]) -> None: ...
    def GetHandleDirection(self) -> Tuple[float, float, float]: ...
    def GetHandlePosition(self) -> Tuple[float, float, float]: ...
    def GetHandleProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetHandleVisibility(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPhiResolution(self) -> int: ...
    def GetPolyData(self, pd: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    def GetRadius(self) -> float: ...
    def GetRepresentation(self) -> int: ...
    def GetRepresentationMaxValue(self) -> int: ...
    def GetRepresentationMinValue(self) -> int: ...
    def GetScale(self) -> int: ...
    def GetSelectedHandleProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedSphereProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSphere(self, sphere: vtkmodules.vtkCommonDataModel.vtkSphere) -> None: ...
    def GetSphereProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetThetaResolution(self) -> int: ...
    def GetTranslation(self) -> int: ...
    def HandleVisibilityOff(self) -> None: ...
    def HandleVisibilityOn(self) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkSphereWidget: ...
    @overload
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    @overload
    def PlaceWidget(self) -> None: ...
    @overload
    def PlaceWidget(self, xmin: float, xmax: float, ymin: float, ymax: float, zmin: float, zmax: float) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkSphereWidget: ...
    def ScaleOff(self) -> None: ...
    def ScaleOn(self) -> None: ...
    @overload
    def SetCenter(self, x: float, y: float, z: float) -> None: ...
    @overload
    def SetCenter(self, x: MutableSequence[float]) -> None: ...
    def SetEnabled(self, __a: int) -> None: ...
    @overload
    def SetHandleDirection(self, _arg1: float, _arg2: float, _arg3: float) -> None: ...
    @overload
    def SetHandleDirection(self, _arg: Sequence[float]) -> None: ...
    def SetHandleVisibility(self, _arg: int) -> None: ...
    def SetPhiResolution(self, r: int) -> None: ...
    def SetRadius(self, r: float) -> None: ...
    def SetRepresentation(self, _arg: int) -> None: ...
    def SetRepresentationToOff(self) -> None: ...
    def SetRepresentationToSurface(self) -> None: ...
    def SetRepresentationToWireframe(self) -> None: ...
    def SetScale(self, _arg: int) -> None: ...
    def SetThetaResolution(self, r: int) -> None: ...
    def SetTranslation(self, _arg: int) -> None: ...
    def TranslationOff(self) -> None: ...
    def TranslationOn(self) -> None: ...

class vtkSphereWidget2(vtkAbstractWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetScalingEnabled(self) -> int: ...
    def GetTranslationEnabled(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkSphereWidget2: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkSphereWidget2: ...
    def ScalingEnabledOff(self) -> None: ...
    def ScalingEnabledOn(self) -> None: ...
    def SetEnabled(self, enabling: int) -> None: ...
    def SetRepresentation(self, r: vtkSphereRepresentation) -> None: ...
    def SetScalingEnabled(self, _arg: int) -> None: ...
    def SetTranslationEnabled(self, _arg: int) -> None: ...
    def TranslationEnabledOff(self) -> None: ...
    def TranslationEnabledOn(self) -> None: ...

class vtkSplineRepresentation(vtkAbstractSplineRepresentation):
    def BuildRepresentation(self) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def InitializeHandles(self, points: vtkmodules.vtkCommonCore.vtkPoints) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkSplineRepresentation: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkSplineRepresentation: ...
    def SetNumberOfHandles(self, npts: int) -> None: ...
    def SetParametricSpline(self, spline: vtkmodules.vtkCommonComputationalGeometry.vtkParametricSpline) -> None: ...

class vtkSplineWidget(vtk3DWidget):
    def ClosedOff(self) -> None: ...
    def ClosedOn(self) -> None: ...
    def GetClosed(self) -> int: ...
    @overload
    def GetHandlePosition(self, handle: int, xyz: MutableSequence[float]) -> None: ...
    @overload
    def GetHandlePosition(self, handle: int) -> Tuple[float, float, float]: ...
    def GetHandleProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetLineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetNumberOfHandles(self) -> int: ...
    def GetParametricSpline(self) -> vtkmodules.vtkCommonComputationalGeometry.vtkParametricSpline: ...
    def GetPolyData(self, pd: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    def GetProcessEvents(self) -> int: ...
    def GetProcessEventsMaxValue(self) -> int: ...
    def GetProcessEventsMinValue(self) -> int: ...
    def GetProjectToPlane(self) -> int: ...
    def GetProjectionNormal(self) -> int: ...
    def GetProjectionNormalMaxValue(self) -> int: ...
    def GetProjectionNormalMinValue(self) -> int: ...
    def GetProjectionPosition(self) -> float: ...
    def GetResolution(self) -> int: ...
    def GetSelectedHandleProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedLineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSummedLength(self) -> float: ...
    def InitializeHandles(self, points: vtkmodules.vtkCommonCore.vtkPoints) -> None: ...
    def IsA(self, type: str) -> int: ...
    def IsClosed(self) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkSplineWidget: ...
    @overload
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    @overload
    def PlaceWidget(self) -> None: ...
    @overload
    def PlaceWidget(self, xmin: float, xmax: float, ymin: float, ymax: float, zmin: float, zmax: float) -> None: ...
    def ProcessEventsOff(self) -> None: ...
    def ProcessEventsOn(self) -> None: ...
    def ProjectToPlaneOff(self) -> None: ...
    def ProjectToPlaneOn(self) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkSplineWidget: ...
    def SetClosed(self, closed: int) -> None: ...
    def SetEnabled(self, __a: int) -> None: ...
    @overload
    def SetHandlePosition(self, handle: int, x: float, y: float, z: float) -> None: ...
    @overload
    def SetHandlePosition(self, handle: int, xyz: MutableSequence[float]) -> None: ...
    def SetHandleProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...
    def SetLineProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...
    def SetNumberOfHandles(self, npts: int) -> None: ...
    def SetParametricSpline(self, __a: vtkmodules.vtkCommonComputationalGeometry.vtkParametricSpline) -> None: ...
    def SetPlaneSource(self, plane: vtkmodules.vtkFiltersSources.vtkPlaneSource) -> None: ...
    def SetProcessEvents(self, _arg: int) -> None: ...
    def SetProjectToPlane(self, _arg: int) -> None: ...
    def SetProjectionNormal(self, _arg: int) -> None: ...
    def SetProjectionNormalToOblique(self) -> None: ...
    def SetProjectionNormalToXAxes(self) -> None: ...
    def SetProjectionNormalToYAxes(self) -> None: ...
    def SetProjectionNormalToZAxes(self) -> None: ...
    def SetProjectionPosition(self, position: float) -> None: ...
    def SetResolution(self, resolution: int) -> None: ...
    def SetSelectedHandleProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...
    def SetSelectedLineProperty(self, __a: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...

class vtkSplineWidget2(vtkAbstractWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkSplineWidget2: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkSplineWidget2: ...
    def SetEnabled(self, enabling: int) -> None: ...
    def SetRepresentation(self, r: vtkSplineRepresentation) -> None: ...

class vtkTensorProbeWidget(vtkAbstractWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetTensorProbeRepresentation(self) -> vtkTensorProbeRepresentation: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkTensorProbeWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkTensorProbeWidget: ...
    def SetRepresentation(self, r: vtkTensorProbeRepresentation) -> None: ...

class vtkTensorRepresentation(vtkWidgetRepresentation):
    MoveF0: int
    MoveF1: int
    MoveF2: int
    MoveF3: int
    MoveF4: int
    MoveF5: int
    Outside: int
    Rotating: int
    Scaling: int
    Translating: int
    def BuildRepresentation(self) -> None: ...
    def ComplexInteraction(
        self,
        iren: vtkmodules.vtkRenderingCore.vtkRenderWindowInteractor,
        widget: vtkAbstractWidget,
        event: int,
        calldata: Pointer,
    ) -> None: ...
    def ComputeComplexInteractionState(
        self,
        iren: vtkmodules.vtkRenderingCore.vtkRenderWindowInteractor,
        widget: vtkAbstractWidget,
        event: int,
        calldata: Pointer,
        modify: int = 0,
    ) -> int: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def EndComplexInteraction(
        self,
        iren: vtkmodules.vtkRenderingCore.vtkRenderWindowInteractor,
        widget: vtkAbstractWidget,
        event: int,
        calldata: Pointer,
    ) -> None: ...
    def GetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetEigenvalues(self, evals: MutableSequence[float]) -> None: ...
    def GetEigenvector(self, n: int, ev: MutableSequence[float]) -> None: ...
    def GetEllipsoidProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetFaceProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetHandleProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetOutlineCursorWires(self) -> bool: ...
    def GetOutlineFaceWires(self) -> bool: ...
    def GetOutlineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetPolyData(self, pd: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    def GetPosition(self, pos: MutableSequence[float]) -> None: ...
    def GetSelectedFaceProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedHandleProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectedOutlineProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSnapToAxes(self) -> bool: ...
    def GetSymmetricTensor(self, symTensor: MutableSequence[float]) -> None: ...
    def GetTensor(self, tensor: MutableSequence[float]) -> None: ...
    def GetTensorEllipsoid(self) -> bool: ...
    def GetTranslationAxis(self) -> int: ...
    def GetTranslationAxisMaxValue(self) -> int: ...
    def GetTranslationAxisMinValue(self) -> int: ...
    def HandlesOff(self) -> None: ...
    def HandlesOn(self) -> None: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    def IsTranslationConstrained(self) -> bool: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkTensorRepresentation: ...
    def OutlineCursorWiresOff(self) -> None: ...
    def OutlineCursorWiresOn(self) -> None: ...
    def OutlineFaceWiresOff(self) -> None: ...
    def OutlineFaceWiresOn(self) -> None: ...
    def PlaceTensor(self, tensor: MutableSequence[float], position: MutableSequence[float]) -> None: ...
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    def RegisterPickers(self) -> None: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkTensorRepresentation: ...
    def SetInteractionState(self, state: int) -> None: ...
    def SetOutlineCursorWires(self, __a: bool) -> None: ...
    def SetOutlineFaceWires(self, __a: bool) -> None: ...
    def SetPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetSnapToAxes(self, _arg: bool) -> None: ...
    def SetSymmetricTensor(self, symTensor: MutableSequence[float]) -> None: ...
    def SetTensor(self, tensor: MutableSequence[float]) -> None: ...
    def SetTensorEllipsoid(self, __a: bool) -> None: ...
    def SetTranslationAxis(self, _arg: int) -> None: ...
    def SetTranslationAxisOff(self) -> None: ...
    def SetXTranslationAxisOn(self) -> None: ...
    def SetYTranslationAxisOn(self) -> None: ...
    def SetZTranslationAxisOn(self) -> None: ...
    def StartComplexInteraction(
        self,
        iren: vtkmodules.vtkRenderingCore.vtkRenderWindowInteractor,
        widget: vtkAbstractWidget,
        event: int,
        calldata: Pointer,
    ) -> None: ...
    def StartWidgetInteraction(self, e: MutableSequence[float]) -> None: ...
    def StepBackward(self) -> None: ...
    def StepForward(self) -> None: ...
    def TensorEllipsoidOff(self) -> None: ...
    def TensorEllipsoidOn(self) -> None: ...
    def WidgetInteraction(self, e: MutableSequence[float]) -> None: ...

class vtkTensorWidget(vtkAbstractWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetMoveFacesEnabled(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetRotationEnabled(self) -> int: ...
    def GetScalingEnabled(self) -> int: ...
    def GetTranslationEnabled(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def MoveFacesEnabledOff(self) -> None: ...
    def MoveFacesEnabledOn(self) -> None: ...
    def NewInstance(self) -> vtkTensorWidget: ...
    def RotationEnabledOff(self) -> None: ...
    def RotationEnabledOn(self) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkTensorWidget: ...
    def ScalingEnabledOff(self) -> None: ...
    def ScalingEnabledOn(self) -> None: ...
    def SetEnabled(self, enabling: int) -> None: ...
    def SetMoveFacesEnabled(self, _arg: int) -> None: ...
    def SetRepresentation(self, r: vtkTensorRepresentation) -> None: ...
    def SetRotationEnabled(self, _arg: int) -> None: ...
    def SetScalingEnabled(self, _arg: int) -> None: ...
    def SetTranslationEnabled(self, _arg: int) -> None: ...
    def TranslationEnabledOff(self) -> None: ...
    def TranslationEnabledOn(self) -> None: ...

class vtkTerrainContourLineInterpolator(vtkContourLineInterpolator):
    def GetImageData(self) -> vtkmodules.vtkCommonDataModel.vtkImageData: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetProjector(self) -> vtkmodules.vtkFiltersHybrid.vtkProjectedTerrainPath: ...
    def InterpolateLine(
        self, ren: vtkmodules.vtkRenderingCore.vtkRenderer, rep: vtkContourRepresentation, idx1: int, idx2: int
    ) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkTerrainContourLineInterpolator: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkTerrainContourLineInterpolator: ...
    def SetImageData(self, __a: vtkmodules.vtkCommonDataModel.vtkImageData) -> None: ...
    def UpdateNode(
        self, __a: vtkmodules.vtkRenderingCore.vtkRenderer, __b: vtkContourRepresentation, node: MutableSequence[float], idx: int
    ) -> int: ...

class vtkTerrainDataPointPlacer(vtkPointPlacer):
    def AddProp(self, __a: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...
    @overload
    def ComputeWorldPosition(
        self,
        ren: vtkmodules.vtkRenderingCore.vtkRenderer,
        displayPos: MutableSequence[float],
        worldPos: MutableSequence[float],
        worldOrient: MutableSequence[float],
    ) -> int: ...
    @overload
    def ComputeWorldPosition(
        self,
        ren: vtkmodules.vtkRenderingCore.vtkRenderer,
        displayPos: MutableSequence[float],
        refWorldPos: MutableSequence[float],
        worldPos: MutableSequence[float],
        worldOrient: MutableSequence[float],
    ) -> int: ...
    def GetHeightOffset(self) -> float: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPropPicker(self) -> vtkmodules.vtkRenderingCore.vtkPropPicker: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkTerrainDataPointPlacer: ...
    def RemoveAllProps(self) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkTerrainDataPointPlacer: ...
    def SetHeightOffset(self, _arg: float) -> None: ...
    def ValidateDisplayPosition(
        self, __a: vtkmodules.vtkRenderingCore.vtkRenderer, displayPos: MutableSequence[float]
    ) -> int: ...
    @overload
    def ValidateWorldPosition(self, worldPos: MutableSequence[float]) -> int: ...
    @overload
    def ValidateWorldPosition(self, worldPos: MutableSequence[float], worldOrient: MutableSequence[float]) -> int: ...

class vtkTextRepresentation(vtkBorderRepresentation):
    def BuildRepresentation(self) -> None: ...
    def ExecuteTextActorModifiedEvent(self, obj: vtkmodules.vtkCommonCore.vtkObject, enumEvent: int, p: Pointer) -> None: ...
    def ExecuteTextPropertyModifiedEvent(self, obj: vtkmodules.vtkCommonCore.vtkObject, enumEvent: int, p: Pointer) -> None: ...
    def GetActors2D(self, __a: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetPaddingBottom(self) -> int: ...
    def GetPaddingBottomMaxValue(self) -> int: ...
    def GetPaddingBottomMinValue(self) -> int: ...
    def GetPaddingLeft(self) -> int: ...
    def GetPaddingLeftMaxValue(self) -> int: ...
    def GetPaddingLeftMinValue(self) -> int: ...
    def GetPaddingRight(self) -> int: ...
    def GetPaddingRightMaxValue(self) -> int: ...
    def GetPaddingRightMinValue(self) -> int: ...
    def GetPaddingTop(self) -> int: ...
    def GetPaddingTopMaxValue(self) -> int: ...
    def GetPaddingTopMinValue(self) -> int: ...
    def GetSize(self, size: MutableSequence[float]) -> None: ...
    def GetText(self) -> str: ...
    def GetTextActor(self) -> vtkmodules.vtkRenderingCore.vtkTextActor: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkTextRepresentation: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderOverlay(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkTextRepresentation: ...
    def SetPadding(self, padding: int) -> None: ...
    def SetPaddingBottom(self, _arg: int) -> None: ...
    def SetPaddingLeft(self, _arg: int) -> None: ...
    def SetPaddingRight(self, _arg: int) -> None: ...
    def SetPaddingTop(self, _arg: int) -> None: ...
    @overload
    def SetPosition(self, x: float, y: float) -> None: ...
    @overload
    def SetPosition(self, pos: MutableSequence[float]) -> None: ...
    def SetText(self, text: str) -> None: ...
    def SetTextActor(self, textActor: vtkmodules.vtkRenderingCore.vtkTextActor) -> None: ...
    def SetWindowLocation(self, enumLocation: int) -> None: ...

class vtkTextWidget(vtkBorderWidget):
    def CreateDefaultRepresentation(self) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetTextActor(self) -> vtkmodules.vtkRenderingCore.vtkTextActor: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkTextWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkTextWidget: ...
    def SetRepresentation(self, r: vtkTextRepresentation) -> None: ...
    def SetTextActor(self, textActor: vtkmodules.vtkRenderingCore.vtkTextActor) -> None: ...

class vtkTexturedButtonRepresentation(vtkButtonRepresentation):
    def BuildRepresentation(self) -> None: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def FollowCameraOff(self) -> None: ...
    def FollowCameraOn(self) -> None: ...
    def GetActors(self, pc: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetButtonGeometry(self) -> vtkmodules.vtkCommonDataModel.vtkPolyData: ...
    def GetButtonTexture(self, i: int) -> vtkmodules.vtkCommonDataModel.vtkImageData: ...
    def GetFollowCamera(self) -> int: ...
    def GetHoveringProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def GetSelectingProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def Highlight(self, state: int) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkTexturedButtonRepresentation: ...
    @overload
    def PlaceWidget(self, scale: float, point: MutableSequence[float], normal: MutableSequence[float]) -> None: ...
    @overload
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    def RegisterPickers(self) -> None: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOpaqueGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    def RenderTranslucentPolygonalGeometry(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkTexturedButtonRepresentation: ...
    def SetButtonGeometry(self, pd: vtkmodules.vtkCommonDataModel.vtkPolyData) -> None: ...
    def SetButtonGeometryConnection(self, algOutput: vtkmodules.vtkCommonExecutionModel.vtkAlgorithmOutput) -> None: ...
    def SetButtonTexture(self, i: int, image: vtkmodules.vtkCommonDataModel.vtkImageData) -> None: ...
    def SetFollowCamera(self, _arg: int) -> None: ...
    def SetHoveringProperty(self, p: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...
    def SetProperty(self, p: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...
    def SetSelectingProperty(self, p: vtkmodules.vtkRenderingCore.vtkProperty) -> None: ...
    def ShallowCopy(self, prop: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...

class vtkTexturedButtonRepresentation2D(vtkButtonRepresentation):
    def BuildRepresentation(self) -> None: ...
    def ComputeInteractionState(self, X: int, Y: int, modify: int = 0) -> int: ...
    def GetActors(self, pc: vtkmodules.vtkRenderingCore.vtkPropCollection) -> None: ...
    def GetBalloon(self) -> vtkBalloonRepresentation: ...
    def GetBounds(self) -> Tuple[float, float, float, float, float, float]: ...
    def GetButtonTexture(self, i: int) -> vtkmodules.vtkCommonDataModel.vtkImageData: ...
    def GetHoveringProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty2D: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty2D: ...
    def GetSelectingProperty(self) -> vtkmodules.vtkRenderingCore.vtkProperty2D: ...
    def HasTranslucentPolygonalGeometry(self) -> int: ...
    def Highlight(self, state: int) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkTexturedButtonRepresentation2D: ...
    @overload
    def PlaceWidget(self, bounds: MutableSequence[float]) -> None: ...
    @overload
    def PlaceWidget(self, anchor: MutableSequence[float], size: MutableSequence[int]) -> None: ...
    def ReleaseGraphicsResources(self, __a: vtkmodules.vtkCommonCore.vtkWindow) -> None: ...
    def RenderOverlay(self, __a: vtkmodules.vtkRenderingCore.vtkViewport) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkTexturedButtonRepresentation2D: ...
    def SetButtonTexture(self, i: int, image: vtkmodules.vtkCommonDataModel.vtkImageData) -> None: ...
    def SetHoveringProperty(self, p: vtkmodules.vtkRenderingCore.vtkProperty2D) -> None: ...
    def SetProperty(self, p: vtkmodules.vtkRenderingCore.vtkProperty2D) -> None: ...
    def SetSelectingProperty(self, p: vtkmodules.vtkRenderingCore.vtkProperty2D) -> None: ...
    def ShallowCopy(self, prop: vtkmodules.vtkRenderingCore.vtkProp) -> None: ...

class vtkWidgetCallbackMapper(vtkmodules.vtkCommonCore.vtkObject):
    def GetEventTranslator(self) -> vtkWidgetEventTranslator: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def InvokeCallback(self, widgetEvent: int) -> None: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkWidgetCallbackMapper: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkWidgetCallbackMapper: ...
    def SetEventTranslator(self, t: vtkWidgetEventTranslator) -> None: ...

class vtkWidgetEvent(vtkmodules.vtkCommonCore.vtkObject):
    class WidgetEventIds(int): ...
    AddFinalPoint: WidgetEventIds
    AddFinalPoint3D: WidgetEventIds
    AddPoint: WidgetEventIds
    AddPoint3D: WidgetEventIds
    Completed: WidgetEventIds
    Delete: WidgetEventIds
    Down: WidgetEventIds
    EndResize: WidgetEventIds
    EndRotate: WidgetEventIds
    EndScale: WidgetEventIds
    EndSelect: WidgetEventIds
    EndSelect3D: WidgetEventIds
    EndTranslate: WidgetEventIds
    HoverLeave: WidgetEventIds
    Left: WidgetEventIds
    ModifyEvent: WidgetEventIds
    Move: WidgetEventIds
    Move3D: WidgetEventIds
    NoEvent: WidgetEventIds
    PickDirectionPoint: WidgetEventIds
    PickNormal: WidgetEventIds
    PickPoint: WidgetEventIds
    Reset: WidgetEventIds
    Resize: WidgetEventIds
    Right: WidgetEventIds
    Rotate: WidgetEventIds
    Scale: WidgetEventIds
    Select: WidgetEventIds
    Select3D: WidgetEventIds
    SizeHandles: WidgetEventIds
    TimedOut: WidgetEventIds
    Translate: WidgetEventIds
    Up: WidgetEventIds
    @staticmethod
    def GetEventIdFromString(event: str) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    @staticmethod
    def GetStringFromEventId(event: int) -> str: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkWidgetEvent: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkWidgetEvent: ...

class vtkWidgetEventTranslator(vtkmodules.vtkCommonCore.vtkObject):
    def AddEventsToInteractor(
        self,
        __a: vtkmodules.vtkRenderingCore.vtkRenderWindowInteractor,
        __b: vtkmodules.vtkCommonCore.vtkCallbackCommand,
        priority: float,
    ) -> None: ...
    def AddEventsToParent(
        self, __a: vtkAbstractWidget, __b: vtkmodules.vtkCommonCore.vtkCallbackCommand, priority: float
    ) -> None: ...
    def ClearEvents(self) -> None: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    @overload
    def GetTranslation(self, VTKEvent: int) -> int: ...
    @overload
    def GetTranslation(self, VTKEvent: str) -> str: ...
    @overload
    def GetTranslation(self, VTKEvent: int, modifier: int, keyCode: str, repeatCount: int, keySym: str) -> int: ...
    @overload
    def GetTranslation(self, VTKEvent: int, edata: vtkmodules.vtkCommonCore.vtkEventData) -> int: ...
    @overload
    def GetTranslation(self, VTKEvent: vtkEvent) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkWidgetEventTranslator: ...
    @overload
    def RemoveTranslation(self, VTKEvent: int, modifier: int, keyCode: str, repeatCount: int, keySym: str) -> int: ...
    @overload
    def RemoveTranslation(self, e: vtkEvent) -> int: ...
    @overload
    def RemoveTranslation(self, e: vtkmodules.vtkCommonCore.vtkEventData) -> int: ...
    @overload
    def RemoveTranslation(self, VTKEvent: int) -> int: ...
    @overload
    def RemoveTranslation(self, VTKEvent: str) -> int: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkWidgetEventTranslator: ...
    @overload
    def SetTranslation(self, VTKEvent: int, widgetEvent: int) -> None: ...
    @overload
    def SetTranslation(self, VTKEvent: str, widgetEvent: str) -> None: ...
    @overload
    def SetTranslation(
        self, VTKEvent: int, modifier: int, keyCode: str, repeatCount: int, keySym: str, widgetEvent: int
    ) -> None: ...
    @overload
    def SetTranslation(self, VTKevent: vtkEvent, widgetEvent: int) -> None: ...
    @overload
    def SetTranslation(self, VTKEvent: int, edata: vtkmodules.vtkCommonCore.vtkEventData, widgetEvent: int) -> None: ...

class vtkWidgetSet(vtkmodules.vtkCommonCore.vtkObject):
    def AddWidget(self, __a: vtkAbstractWidget) -> None: ...
    def EnabledOff(self) -> None: ...
    def EnabledOn(self) -> None: ...
    def GetNthWidget(self, __a: int) -> vtkAbstractWidget: ...
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetNumberOfWidgets(self) -> int: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkWidgetSet: ...
    def RemoveWidget(self, __a: vtkAbstractWidget) -> None: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkWidgetSet: ...
    def SetEnabled(self, __a: int) -> None: ...

class vtkXYPlotWidget(vtkmodules.vtkRenderingCore.vtkInteractorObserver):
    def GetNumberOfGenerationsFromBase(self, type: str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type: str) -> int: ...
    def GetXYPlotActor(self) -> vtkmodules.vtkRenderingAnnotation.vtkXYPlotActor: ...
    def IsA(self, type: str) -> int: ...
    @staticmethod
    def IsTypeOf(type: str) -> int: ...
    def NewInstance(self) -> vtkXYPlotWidget: ...
    @staticmethod
    def SafeDownCast(o: vtkmodules.vtkCommonCore.vtkObjectBase) -> vtkXYPlotWidget: ...
    def SetEnabled(self, __a: int) -> None: ...
    def SetXYPlotActor(self, __a: vtkmodules.vtkRenderingAnnotation.vtkXYPlotActor) -> None: ...
